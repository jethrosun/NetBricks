<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="710" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="693.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="693.00"> </text><svg id="frames" x="10" width="1180"><g><title>__GI___mmap64 (3,131 samples, 0.62%)</title><rect x="0.0766%" y="485" width="0.6151%" height="15" fill="rgb(227,0,7)"/><text x="0.3266%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3,131 samples, 0.62%)</title><rect x="0.0766%" y="469" width="0.6151%" height="15" fill="rgb(217,0,24)"/><text x="0.3266%" y="479.50"></text></g><g><title>do_syscall_64 (3,131 samples, 0.62%)</title><rect x="0.0766%" y="453" width="0.6151%" height="15" fill="rgb(221,193,54)"/><text x="0.3266%" y="463.50"></text></g><g><title>sys_mmap (3,131 samples, 0.62%)</title><rect x="0.0766%" y="437" width="0.6151%" height="15" fill="rgb(248,212,6)"/><text x="0.3266%" y="447.50"></text></g><g><title>sys_mmap_pgoff (3,131 samples, 0.62%)</title><rect x="0.0766%" y="421" width="0.6151%" height="15" fill="rgb(208,68,35)"/><text x="0.3266%" y="431.50"></text></g><g><title>vm_mmap_pgoff (3,131 samples, 0.62%)</title><rect x="0.0766%" y="405" width="0.6151%" height="15" fill="rgb(232,128,0)"/><text x="0.3266%" y="415.50"></text></g><g><title>__mm_populate (3,131 samples, 0.62%)</title><rect x="0.0766%" y="389" width="0.6151%" height="15" fill="rgb(207,160,47)"/><text x="0.3266%" y="399.50"></text></g><g><title>populate_vma_page_range (3,131 samples, 0.62%)</title><rect x="0.0766%" y="373" width="0.6151%" height="15" fill="rgb(228,23,34)"/><text x="0.3266%" y="383.50"></text></g><g><title>__get_user_pages (3,131 samples, 0.62%)</title><rect x="0.0766%" y="357" width="0.6151%" height="15" fill="rgb(218,30,26)"/><text x="0.3266%" y="367.50"></text></g><g><title>follow_hugetlb_page (3,131 samples, 0.62%)</title><rect x="0.0766%" y="341" width="0.6151%" height="15" fill="rgb(220,122,19)"/><text x="0.3266%" y="351.50"></text></g><g><title>hugetlb_fault (3,093 samples, 0.61%)</title><rect x="0.0841%" y="325" width="0.6076%" height="15" fill="rgb(250,228,42)"/><text x="0.3341%" y="335.50"></text></g><g><title>hugetlb_no_page (3,093 samples, 0.61%)</title><rect x="0.0841%" y="309" width="0.6076%" height="15" fill="rgb(240,193,28)"/><text x="0.3341%" y="319.50"></text></g><g><title>clear_page_erms (2,925 samples, 0.57%)</title><rect x="0.1171%" y="293" width="0.5746%" height="15" fill="rgb(216,20,37)"/><text x="0.3671%" y="303.50"></text></g><g><title>rte_eal_memory_init (3,133 samples, 0.62%)</title><rect x="0.0764%" y="533" width="0.6155%" height="15" fill="rgb(206,188,39)"/><text x="0.3264%" y="543.50"></text></g><g><title>rte_eal_hugepage_init (3,133 samples, 0.62%)</title><rect x="0.0764%" y="517" width="0.6155%" height="15" fill="rgb(217,207,13)"/><text x="0.3264%" y="527.50"></text></g><g><title>map_all_hugepages (3,132 samples, 0.62%)</title><rect x="0.0766%" y="501" width="0.6153%" height="15" fill="rgb(231,73,38)"/><text x="0.3266%" y="511.50"></text></g><g><title>pvn_tlsv::main (3,136 samples, 0.62%)</title><rect x="0.0760%" y="613" width="0.6161%" height="15" fill="rgb(225,20,46)"/><text x="0.3260%" y="623.50"></text></g><g><title>e2d2::scheduler::context::initialize_system (3,136 samples, 0.62%)</title><rect x="0.0760%" y="597" width="0.6161%" height="15" fill="rgb(210,31,41)"/><text x="0.3260%" y="607.50"></text></g><g><title>init_system_whitelisted (3,135 samples, 0.62%)</title><rect x="0.0762%" y="581" width="0.6159%" height="15" fill="rgb(221,200,47)"/><text x="0.3262%" y="591.50"></text></g><g><title>init_eal (3,135 samples, 0.62%)</title><rect x="0.0762%" y="565" width="0.6159%" height="15" fill="rgb(226,26,5)"/><text x="0.3262%" y="575.50"></text></g><g><title>rte_eal_init (3,135 samples, 0.62%)</title><rect x="0.0762%" y="549" width="0.6159%" height="15" fill="rgb(249,33,26)"/><text x="0.3262%" y="559.50"></text></g><g><title>[unknown] (3,283 samples, 0.64%)</title><rect x="0.0483%" y="629" width="0.6450%" height="15" fill="rgb(235,183,28)"/><text x="0.2983%" y="639.50"></text></g><g><title>__libc_start_main (512 samples, 0.10%)</title><rect x="0.6964%" y="613" width="0.1006%" height="15" fill="rgb(221,5,38)"/><text x="0.9464%" y="623.50"></text></g><g><title>main (512 samples, 0.10%)</title><rect x="0.6964%" y="597" width="0.1006%" height="15" fill="rgb(247,18,42)"/><text x="0.9464%" y="607.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (511 samples, 0.10%)</title><rect x="0.6966%" y="581" width="0.1004%" height="15" fill="rgb(241,131,45)"/><text x="0.9466%" y="591.50"></text></g><g><title>pvn_tlsv::main (511 samples, 0.10%)</title><rect x="0.6966%" y="565" width="0.1004%" height="15" fill="rgb(249,31,29)"/><text x="0.9466%" y="575.50"></text></g><g><title>_start (513 samples, 0.10%)</title><rect x="0.6964%" y="629" width="0.1008%" height="15" fill="rgb(225,111,53)"/><text x="0.9464%" y="639.50"></text></g><g><title>pvn-tlsv (3,821 samples, 0.75%)</title><rect x="0.0475%" y="645" width="0.7507%" height="15" fill="rgb(238,160,17)"/><text x="0.2975%" y="655.50"></text></g><g><title>[pvn-tlsv] (1,600 samples, 0.31%)</title><rect x="0.8322%" y="629" width="0.3143%" height="15" fill="rgb(214,148,48)"/><text x="1.0822%" y="639.50"></text></g><g><title>i40e_recv_pkts_vec (1,598 samples, 0.31%)</title><rect x="0.8326%" y="613" width="0.3139%" height="15" fill="rgb(232,36,49)"/><text x="1.0826%" y="623.50"></text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (6,175 samples, 1.21%)</title><rect x="1.1465%" y="613" width="1.2131%" height="15" fill="rgb(209,103,24)"/><text x="1.3965%" y="623.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (1,530 samples, 0.30%)</title><rect x="2.0590%" y="597" width="0.3006%" height="15" fill="rgb(229,88,8)"/><text x="2.3090%" y="607.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (1,530 samples, 0.30%)</title><rect x="2.0590%" y="581" width="0.3006%" height="15" fill="rgb(213,181,19)"/><text x="2.3090%" y="591.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (1,530 samples, 0.30%)</title><rect x="2.0590%" y="565" width="0.3006%" height="15" fill="rgb(254,191,54)"/><text x="2.3090%" y="575.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (1,530 samples, 0.30%)</title><rect x="2.0590%" y="549" width="0.3006%" height="15" fill="rgb(241,83,37)"/><text x="2.3090%" y="559.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (1,530 samples, 0.30%)</title><rect x="2.0590%" y="533" width="0.3006%" height="15" fill="rgb(233,36,39)"/><text x="2.3090%" y="543.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (1,530 samples, 0.30%)</title><rect x="2.0590%" y="517" width="0.3006%" height="15" fill="rgb(226,3,54)"/><text x="2.3090%" y="527.50"></text></g><g><title>e2d2::interface::port::&lt;impl e2d2::interface::PacketRx for e2d2::allocators::cache_aligned::CacheAligned&lt;T&gt;&gt;::recv (1,530 samples, 0.30%)</title><rect x="2.0590%" y="501" width="0.3006%" height="15" fill="rgb(245,192,40)"/><text x="2.3090%" y="511.50"></text></g><g><title>&lt;e2d2::interface::port::phy_port::PortQueue as e2d2::interface::PacketRx&gt;::recv (1,530 samples, 0.30%)</title><rect x="2.0590%" y="485" width="0.3006%" height="15" fill="rgb(238,167,29)"/><text x="2.3090%" y="495.50"></text></g><g><title>e2d2::interface::port::phy_port::PortQueue::recv_queue (1,530 samples, 0.30%)</title><rect x="2.0590%" y="469" width="0.3006%" height="15" fill="rgb(232,182,51)"/><text x="2.3090%" y="479.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (2,844 samples, 0.56%)</title><rect x="2.3596%" y="613" width="0.5587%" height="15" fill="rgb(231,60,39)"/><text x="2.6096%" y="623.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (1,283 samples, 0.25%)</title><rect x="2.6663%" y="597" width="0.2521%" height="15" fill="rgb(208,69,12)"/><text x="2.9163%" y="607.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (1,283 samples, 0.25%)</title><rect x="2.6663%" y="581" width="0.2521%" height="15" fill="rgb(235,93,37)"/><text x="2.9163%" y="591.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (1,577 samples, 0.31%)</title><rect x="3.5303%" y="597" width="0.3098%" height="15" fill="rgb(213,116,39)"/><text x="3.7803%" y="607.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (1,577 samples, 0.31%)</title><rect x="3.5303%" y="581" width="0.3098%" height="15" fill="rgb(222,207,29)"/><text x="3.7803%" y="591.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (4,693 samples, 0.92%)</title><rect x="2.9183%" y="613" width="0.9220%" height="15" fill="rgb(206,96,30)"/><text x="3.1683%" y="623.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (906 samples, 0.18%)</title><rect x="3.8403%" y="613" width="0.1780%" height="15" fill="rgb(218,138,4)"/><text x="4.0903%" y="623.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (3,138 samples, 0.62%)</title><rect x="4.0183%" y="613" width="0.6165%" height="15" fill="rgb(250,191,14)"/><text x="4.2683%" y="623.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (1,610 samples, 0.32%)</title><rect x="4.9373%" y="581" width="0.3163%" height="15" fill="rgb(239,60,40)"/><text x="5.1873%" y="591.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (1,576 samples, 0.31%)</title><rect x="5.2536%" y="581" width="0.3096%" height="15" fill="rgb(206,27,48)"/><text x="5.5036%" y="591.50"></text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;::execute (6,265 samples, 1.23%)</title><rect x="4.6348%" y="613" width="1.2308%" height="15" fill="rgb(225,35,8)"/><text x="4.8848%" y="623.50"></text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::act (4,725 samples, 0.93%)</title><rect x="4.9373%" y="597" width="0.9282%" height="15" fill="rgb(250,213,24)"/><text x="5.1873%" y="607.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (1,539 samples, 0.30%)</title><rect x="5.5632%" y="581" width="0.3023%" height="15" fill="rgb(247,123,22)"/><text x="5.8132%" y="591.50"></text></g><g><title>[pvn-tlsv] (1,644 samples, 0.32%)</title><rect x="5.8656%" y="613" width="0.3230%" height="15" fill="rgb(231,138,38)"/><text x="6.1156%" y="623.50"></text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (1,644 samples, 0.32%)</title><rect x="5.8656%" y="597" width="0.3230%" height="15" fill="rgb(231,145,46)"/><text x="6.1156%" y="607.50"></text></g><g><title>__GI___pthread_mutex_lock (1,571 samples, 0.31%)</title><rect x="6.1885%" y="613" width="0.3086%" height="15" fill="rgb(251,118,11)"/><text x="6.4385%" y="623.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request (4,622 samples, 0.91%)</title><rect x="6.4972%" y="613" width="0.9080%" height="15" fill="rgb(217,147,25)"/><text x="6.7472%" y="623.50"></text></g><g><title>i40e_recv_pkts_vec (1,603 samples, 0.31%)</title><rect x="7.4052%" y="613" width="0.3149%" height="15" fill="rgb(247,81,37)"/><text x="7.6552%" y="623.50"></text></g><g><title>[unknown] (44,504 samples, 8.74%)</title><rect x="1.1465%" y="629" width="8.7430%" height="15" fill="rgb(209,12,38)"/><text x="1.3965%" y="639.50">[unknown]</text></g><g><title>recv_pkts (11,043 samples, 2.17%)</title><rect x="7.7201%" y="613" width="2.1695%" height="15" fill="rgb(227,1,9)"/><text x="7.9701%" y="623.50">r..</text></g><g><title>rte_eth_rx_burst (1,599 samples, 0.31%)</title><rect x="9.5754%" y="597" width="0.3141%" height="15" fill="rgb(248,47,43)"/><text x="9.8254%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1,521 samples, 0.30%)</title><rect x="20.4209%" y="261" width="0.2988%" height="15" fill="rgb(221,10,30)"/><text x="20.6709%" y="271.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act::_{{closure}} (1,521 samples, 0.30%)</title><rect x="20.4209%" y="245" width="0.2988%" height="15" fill="rgb(210,229,1)"/><text x="20.6709%" y="255.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::free_packet_batch (1,584 samples, 0.31%)</title><rect x="20.7201%" y="229" width="0.3112%" height="15" fill="rgb(222,148,37)"/><text x="20.9701%" y="239.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (1,587 samples, 0.31%)</title><rect x="20.7197%" y="245" width="0.3118%" height="15" fill="rgb(234,67,33)"/><text x="20.9697%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::capacity (1,507 samples, 0.30%)</title><rect x="21.0315%" y="229" width="0.2961%" height="15" fill="rgb(247,98,35)"/><text x="21.2815%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (1,545 samples, 0.30%)</title><rect x="21.6373%" y="181" width="0.3035%" height="15" fill="rgb(247,138,52)"/><text x="21.8873%" y="191.50"></text></g><g><title>core::sync::atomic::atomic_store (1,545 samples, 0.30%)</title><rect x="21.6373%" y="165" width="0.3035%" height="15" fill="rgb(213,79,30)"/><text x="21.8873%" y="175.50"></text></g><g><title>_recv_raw_pkts_vec (4,713 samples, 0.93%)</title><rect x="23.4848%" y="133" width="0.9259%" height="15" fill="rgb(246,177,23)"/><text x="23.7348%" y="143.50"></text></g><g><title>i40e_recv_pkts_vec (6,344 samples, 1.25%)</title><rect x="23.1648%" y="149" width="1.2463%" height="15" fill="rgb(230,62,27)"/><text x="23.4148%" y="159.50"></text></g><g><title>rte_eth_rx_burst (11,051 samples, 2.17%)</title><rect x="22.2408%" y="165" width="2.1710%" height="15" fill="rgb(216,154,8)"/><text x="22.4908%" y="175.50">r..</text></g><g><title>&lt;e2d2::interface::port::phy_port::PortQueue as e2d2::interface::PacketRx&gt;::recv (14,124 samples, 2.77%)</title><rect x="21.6373%" y="213" width="2.7747%" height="15" fill="rgb(244,35,45)"/><text x="21.8873%" y="223.50">&lt;e..</text></g><g><title>e2d2::interface::port::phy_port::PortQueue::recv_queue (14,124 samples, 2.77%)</title><rect x="21.6373%" y="197" width="2.7747%" height="15" fill="rgb(251,115,12)"/><text x="21.8873%" y="207.50">e2..</text></g><g><title>recv_pkts (12,579 samples, 2.47%)</title><rect x="21.9409%" y="181" width="2.4712%" height="15" fill="rgb(240,54,50)"/><text x="22.1909%" y="191.50">re..</text></g><g><title>e2d2::interface::port::&lt;impl e2d2::interface::PacketRx for e2d2::allocators::cache_aligned::CacheAligned&lt;T&gt;&gt;::recv (15,702 samples, 3.08%)</title><rect x="21.3275%" y="229" width="3.0847%" height="15" fill="rgb(233,84,52)"/><text x="21.5775%" y="239.50">e2d..</text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (20,318 samples, 3.99%)</title><rect x="20.4209%" y="277" width="3.9916%" height="15" fill="rgb(207,117,47)"/><text x="20.6709%" y="287.50">&lt;e2d..</text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (18,797 samples, 3.69%)</title><rect x="20.7197%" y="261" width="3.6928%" height="15" fill="rgb(249,43,39)"/><text x="20.9697%" y="271.50">e2d2..</text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (17,210 samples, 3.38%)</title><rect x="21.0315%" y="245" width="3.3810%" height="15" fill="rgb(209,38,44)"/><text x="21.2815%" y="255.50">e2d..</text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (21,955 samples, 4.31%)</title><rect x="20.0995%" y="325" width="4.3132%" height="15" fill="rgb(236,212,23)"/><text x="20.3495%" y="335.50">&lt;e2d2..</text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (21,955 samples, 4.31%)</title><rect x="20.0995%" y="309" width="4.3132%" height="15" fill="rgb(242,79,21)"/><text x="20.3495%" y="319.50">&lt;e2d2..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (21,955 samples, 4.31%)</title><rect x="20.0995%" y="293" width="4.3132%" height="15" fill="rgb(211,96,35)"/><text x="20.3495%" y="303.50">&lt;e2d2..</text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (23,621 samples, 4.64%)</title><rect x="20.0991%" y="341" width="4.6405%" height="15" fill="rgb(253,215,40)"/><text x="20.3491%" y="351.50">&lt;e2d2..</text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (1,656 samples, 0.33%)</title><rect x="24.4142%" y="325" width="0.3253%" height="15" fill="rgb(211,81,21)"/><text x="24.6642%" y="335.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (1,656 samples, 0.33%)</title><rect x="24.4142%" y="309" width="0.3253%" height="15" fill="rgb(208,190,38)"/><text x="24.6642%" y="319.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (1,656 samples, 0.33%)</title><rect x="24.4142%" y="293" width="0.3253%" height="15" fill="rgb(235,213,38)"/><text x="24.6642%" y="303.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (1,656 samples, 0.33%)</title><rect x="24.4142%" y="277" width="0.3253%" height="15" fill="rgb(237,122,38)"/><text x="24.6642%" y="287.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (1,656 samples, 0.33%)</title><rect x="24.4142%" y="261" width="0.3253%" height="15" fill="rgb(244,218,35)"/><text x="24.6642%" y="271.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (1,656 samples, 0.33%)</title><rect x="24.4142%" y="245" width="0.3253%" height="15" fill="rgb(240,68,47)"/><text x="24.6642%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1,587 samples, 0.31%)</title><rect x="25.1943%" y="309" width="0.3118%" height="15" fill="rgb(210,16,53)"/><text x="25.4443%" y="319.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1,587 samples, 0.31%)</title><rect x="25.1943%" y="293" width="0.3118%" height="15" fill="rgb(235,124,12)"/><text x="25.4443%" y="303.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (1,587 samples, 0.31%)</title><rect x="25.1943%" y="277" width="0.3118%" height="15" fill="rgb(224,169,11)"/><text x="25.4443%" y="287.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (765 samples, 0.15%)</title><rect x="25.5077%" y="245" width="0.1503%" height="15" fill="rgb(250,166,2)"/><text x="25.7577%" y="255.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::done (765 samples, 0.15%)</title><rect x="25.5077%" y="229" width="0.1503%" height="15" fill="rgb(242,216,29)"/><text x="25.7577%" y="239.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::done (733 samples, 0.14%)</title><rect x="25.5140%" y="213" width="0.1440%" height="15" fill="rgb(230,116,27)"/><text x="25.7640%" y="223.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (733 samples, 0.14%)</title><rect x="25.5140%" y="197" width="0.1440%" height="15" fill="rgb(228,99,48)"/><text x="25.7640%" y="207.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (733 samples, 0.14%)</title><rect x="25.5140%" y="181" width="0.1440%" height="15" fill="rgb(253,11,6)"/><text x="25.7640%" y="191.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::free_packet_batch (733 samples, 0.14%)</title><rect x="25.5140%" y="165" width="0.1440%" height="15" fill="rgb(247,143,39)"/><text x="25.7640%" y="175.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (774 samples, 0.15%)</title><rect x="25.5063%" y="277" width="0.1521%" height="15" fill="rgb(236,97,10)"/><text x="25.7563%" y="287.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (774 samples, 0.15%)</title><rect x="25.5063%" y="261" width="0.1521%" height="15" fill="rgb(233,208,19)"/><text x="25.7563%" y="271.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (4,678 samples, 0.92%)</title><rect x="24.7396%" y="325" width="0.9190%" height="15" fill="rgb(216,164,2)"/><text x="24.9896%" y="335.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (776 samples, 0.15%)</title><rect x="25.5061%" y="309" width="0.1524%" height="15" fill="rgb(220,129,5)"/><text x="25.7561%" y="319.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (775 samples, 0.15%)</title><rect x="25.5063%" y="293" width="0.1523%" height="15" fill="rgb(242,17,10)"/><text x="25.7563%" y="303.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (5,474 samples, 1.08%)</title><rect x="24.7396%" y="341" width="1.0754%" height="15" fill="rgb(242,107,0)"/><text x="24.9896%" y="351.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (796 samples, 0.16%)</title><rect x="25.6586%" y="325" width="0.1564%" height="15" fill="rgb(251,28,31)"/><text x="25.9086%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1,548 samples, 0.30%)</title><rect x="26.3002%" y="261" width="0.3041%" height="15" fill="rgb(233,223,10)"/><text x="26.5502%" y="271.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1,546 samples, 0.30%)</title><rect x="26.3006%" y="245" width="0.3037%" height="15" fill="rgb(215,21,27)"/><text x="26.5506%" y="255.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (1,546 samples, 0.30%)</title><rect x="26.3006%" y="229" width="0.3037%" height="15" fill="rgb(232,23,21)"/><text x="26.5506%" y="239.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (7,462 samples, 1.47%)</title><rect x="26.3002%" y="277" width="1.4659%" height="15" fill="rgb(244,5,23)"/><text x="26.5502%" y="287.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (5,914 samples, 1.16%)</title><rect x="26.6043%" y="261" width="1.1618%" height="15" fill="rgb(226,81,46)"/><text x="26.8543%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (765 samples, 0.15%)</title><rect x="28.1386%" y="181" width="0.1503%" height="15" fill="rgb(247,70,30)"/><text x="28.3886%" y="191.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act::_{{closure}} (765 samples, 0.15%)</title><rect x="28.1386%" y="165" width="0.1503%" height="15" fill="rgb(212,68,19)"/><text x="28.3886%" y="175.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (721 samples, 0.14%)</title><rect x="28.2926%" y="165" width="0.1416%" height="15" fill="rgb(240,187,13)"/><text x="28.5426%" y="175.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (796 samples, 0.16%)</title><rect x="28.5997%" y="85" width="0.1564%" height="15" fill="rgb(223,113,26)"/><text x="28.8497%" y="95.50"></text></g><g><title>core::cmp::min (1,510 samples, 0.30%)</title><rect x="28.5997%" y="117" width="0.2966%" height="15" fill="rgb(206,192,2)"/><text x="28.8497%" y="127.50"></text></g><g><title>core::cmp::Ord::min (1,510 samples, 0.30%)</title><rect x="28.5997%" y="101" width="0.2966%" height="15" fill="rgb(241,108,4)"/><text x="28.8497%" y="111.50"></text></g><g><title>core::cmp::min_by (714 samples, 0.14%)</title><rect x="28.7561%" y="85" width="0.1403%" height="15" fill="rgb(247,173,49)"/><text x="29.0061%" y="95.50"></text></g><g><title>&lt;e2d2::queues::mpsc_mbuf_queue::MpscConsumer as e2d2::interface::PacketRx&gt;::recv (3,124 samples, 0.61%)</title><rect x="28.4349%" y="149" width="0.6137%" height="15" fill="rgb(224,114,35)"/><text x="28.6849%" y="159.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::dequeue (3,124 samples, 0.61%)</title><rect x="28.4349%" y="133" width="0.6137%" height="15" fill="rgb(245,159,27)"/><text x="28.6849%" y="143.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (536 samples, 0.11%)</title><rect x="28.9433%" y="117" width="0.1053%" height="15" fill="rgb(245,172,44)"/><text x="29.1933%" y="127.50"></text></g><g><title>core::sync::atomic::atomic_load (536 samples, 0.11%)</title><rect x="28.9433%" y="101" width="0.1053%" height="15" fill="rgb(236,23,11)"/><text x="29.1933%" y="111.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::add_to_batch (1,073 samples, 0.21%)</title><rect x="29.0486%" y="149" width="0.2108%" height="15" fill="rgb(205,117,38)"/><text x="29.2986%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (1,073 samples, 0.21%)</title><rect x="29.0486%" y="133" width="0.2108%" height="15" fill="rgb(237,72,25)"/><text x="29.2986%" y="143.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (6,497 samples, 1.28%)</title><rect x="28.0693%" y="213" width="1.2764%" height="15" fill="rgb(244,70,9)"/><text x="28.3193%" y="223.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (6,144 samples, 1.21%)</title><rect x="28.1386%" y="197" width="1.2070%" height="15" fill="rgb(217,125,39)"/><text x="28.3886%" y="207.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (5,379 samples, 1.06%)</title><rect x="28.2889%" y="181" width="1.0567%" height="15" fill="rgb(235,36,10)"/><text x="28.5389%" y="191.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (4,639 samples, 0.91%)</title><rect x="28.4343%" y="165" width="0.9114%" height="15" fill="rgb(251,123,47)"/><text x="28.6843%" y="175.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::act (8,723 samples, 1.71%)</title><rect x="27.9115%" y="229" width="1.7137%" height="15" fill="rgb(221,13,13)"/><text x="28.1615%" y="239.50"></text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (1,423 samples, 0.28%)</title><rect x="29.3456%" y="213" width="0.2796%" height="15" fill="rgb(238,131,9)"/><text x="29.5956%" y="223.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (1,423 samples, 0.28%)</title><rect x="29.3456%" y="197" width="0.2796%" height="15" fill="rgb(211,50,8)"/><text x="29.5956%" y="207.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (1,423 samples, 0.28%)</title><rect x="29.3456%" y="181" width="0.2796%" height="15" fill="rgb(245,182,24)"/><text x="29.5956%" y="191.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (1,423 samples, 0.28%)</title><rect x="29.3456%" y="165" width="0.2796%" height="15" fill="rgb(242,14,37)"/><text x="29.5956%" y="175.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (8,724 samples, 1.71%)</title><rect x="27.9115%" y="245" width="1.7139%" height="15" fill="rgb(246,228,12)"/><text x="28.1615%" y="255.50"></text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (767 samples, 0.15%)</title><rect x="29.6256%" y="245" width="0.1507%" height="15" fill="rgb(213,55,15)"/><text x="29.8756%" y="255.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (767 samples, 0.15%)</title><rect x="29.6256%" y="229" width="0.1507%" height="15" fill="rgb(209,9,3)"/><text x="29.8756%" y="239.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (767 samples, 0.15%)</title><rect x="29.6256%" y="213" width="0.1507%" height="15" fill="rgb(230,59,30)"/><text x="29.8756%" y="223.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (767 samples, 0.15%)</title><rect x="29.6256%" y="197" width="0.1507%" height="15" fill="rgb(209,121,21)"/><text x="29.8756%" y="207.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (767 samples, 0.15%)</title><rect x="29.6256%" y="181" width="0.1507%" height="15" fill="rgb(220,109,13)"/><text x="29.8756%" y="191.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (767 samples, 0.15%)</title><rect x="29.6256%" y="165" width="0.1507%" height="15" fill="rgb(232,18,1)"/><text x="29.8756%" y="175.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (18,507 samples, 3.64%)</title><rect x="26.1407%" y="293" width="3.6358%" height="15" fill="rgb(215,41,42)"/><text x="26.3907%" y="303.50">&lt;e2d..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (10,233 samples, 2.01%)</title><rect x="27.7661%" y="277" width="2.0103%" height="15" fill="rgb(224,123,36)"/><text x="28.0161%" y="287.50">&lt;..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (10,233 samples, 2.01%)</title><rect x="27.7661%" y="261" width="2.0103%" height="15" fill="rgb(240,125,3)"/><text x="28.0161%" y="271.50">&lt;..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1,009 samples, 0.20%)</title><rect x="29.7765%" y="261" width="0.1982%" height="15" fill="rgb(205,98,50)"/><text x="30.0265%" y="271.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act::_{{closure}} (1,009 samples, 0.20%)</title><rect x="29.7765%" y="245" width="0.1982%" height="15" fill="rgb(205,185,37)"/><text x="30.0265%" y="255.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (799 samples, 0.16%)</title><rect x="29.9747%" y="245" width="0.1570%" height="15" fill="rgb(238,207,15)"/><text x="30.2247%" y="255.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::free_packet_batch (799 samples, 0.16%)</title><rect x="29.9747%" y="229" width="0.1570%" height="15" fill="rgb(213,199,42)"/><text x="30.2247%" y="239.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (803 samples, 0.16%)</title><rect x="30.2866%" y="165" width="0.1578%" height="15" fill="rgb(235,201,11)"/><text x="30.5366%" y="175.50"></text></g><g><title>core::cmp::min (2,058 samples, 0.40%)</title><rect x="30.2866%" y="197" width="0.4043%" height="15" fill="rgb(207,46,11)"/><text x="30.5366%" y="207.50"></text></g><g><title>core::cmp::Ord::min (2,058 samples, 0.40%)</title><rect x="30.2866%" y="181" width="0.4043%" height="15" fill="rgb(241,35,35)"/><text x="30.5366%" y="191.50"></text></g><g><title>core::cmp::min_by (1,255 samples, 0.25%)</title><rect x="30.4444%" y="165" width="0.2466%" height="15" fill="rgb(243,32,47)"/><text x="30.6944%" y="175.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (951 samples, 0.19%)</title><rect x="30.6910%" y="197" width="0.1868%" height="15" fill="rgb(247,202,23)"/><text x="30.9410%" y="207.50"></text></g><g><title>&lt;e2d2::queues::mpsc_mbuf_queue::MpscConsumer as e2d2::interface::PacketRx&gt;::recv (4,937 samples, 0.97%)</title><rect x="30.1320%" y="229" width="0.9699%" height="15" fill="rgb(219,102,11)"/><text x="30.3820%" y="239.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::dequeue (4,937 samples, 0.97%)</title><rect x="30.1320%" y="213" width="0.9699%" height="15" fill="rgb(243,110,44)"/><text x="30.3820%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1,141 samples, 0.22%)</title><rect x="30.8778%" y="197" width="0.2242%" height="15" fill="rgb(222,74,54)"/><text x="31.1278%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_load (1,141 samples, 0.22%)</title><rect x="30.8778%" y="181" width="0.2242%" height="15" fill="rgb(216,99,12)"/><text x="31.1278%" y="191.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::add_to_batch (1,048 samples, 0.21%)</title><rect x="31.1021%" y="229" width="0.2059%" height="15" fill="rgb(226,22,26)"/><text x="31.3521%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (1,048 samples, 0.21%)</title><rect x="31.1021%" y="213" width="0.2059%" height="15" fill="rgb(217,163,10)"/><text x="31.3521%" y="223.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (763 samples, 0.15%)</title><rect x="31.3080%" y="229" width="0.1499%" height="15" fill="rgb(213,25,53)"/><text x="31.5580%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (763 samples, 0.15%)</title><rect x="31.3080%" y="213" width="0.1499%" height="15" fill="rgb(252,105,26)"/><text x="31.5580%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (763 samples, 0.15%)</title><rect x="31.3080%" y="197" width="0.1499%" height="15" fill="rgb(220,39,43)"/><text x="31.5580%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (763 samples, 0.15%)</title><rect x="31.3080%" y="181" width="0.1499%" height="15" fill="rgb(229,68,48)"/><text x="31.5580%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (763 samples, 0.15%)</title><rect x="31.3080%" y="165" width="0.1499%" height="15" fill="rgb(252,8,32)"/><text x="31.5580%" y="175.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (8,560 samples, 1.68%)</title><rect x="29.7765%" y="277" width="1.6817%" height="15" fill="rgb(223,20,43)"/><text x="30.0265%" y="287.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (7,551 samples, 1.48%)</title><rect x="29.9747%" y="261" width="1.4834%" height="15" fill="rgb(229,81,49)"/><text x="30.2247%" y="271.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (6,752 samples, 1.33%)</title><rect x="30.1316%" y="245" width="1.3265%" height="15" fill="rgb(236,28,36)"/><text x="30.3816%" y="255.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (8,561 samples, 1.68%)</title><rect x="29.7765%" y="293" width="1.6818%" height="15" fill="rgb(249,185,26)"/><text x="30.0265%" y="303.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (28,727 samples, 5.64%)</title><rect x="25.8149%" y="309" width="5.6436%" height="15" fill="rgb(249,174,33)"/><text x="26.0649%" y="319.50">&lt;e2d2::..</text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (1,561 samples, 0.31%)</title><rect x="31.4585%" y="309" width="0.3067%" height="15" fill="rgb(233,201,37)"/><text x="31.7085%" y="319.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (724 samples, 0.14%)</title><rect x="31.7654%" y="197" width="0.1422%" height="15" fill="rgb(221,78,26)"/><text x="32.0154%" y="207.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (724 samples, 0.14%)</title><rect x="31.7654%" y="181" width="0.1422%" height="15" fill="rgb(250,127,30)"/><text x="32.0154%" y="191.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (1,514 samples, 0.30%)</title><rect x="31.7654%" y="293" width="0.2974%" height="15" fill="rgb(230,49,44)"/><text x="32.0154%" y="303.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (1,514 samples, 0.30%)</title><rect x="31.7654%" y="277" width="0.2974%" height="15" fill="rgb(229,67,23)"/><text x="32.0154%" y="287.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (1,514 samples, 0.30%)</title><rect x="31.7654%" y="261" width="0.2974%" height="15" fill="rgb(249,83,47)"/><text x="32.0154%" y="271.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (1,514 samples, 0.30%)</title><rect x="31.7654%" y="245" width="0.2974%" height="15" fill="rgb(215,43,3)"/><text x="32.0154%" y="255.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::act (1,514 samples, 0.30%)</title><rect x="31.7654%" y="229" width="0.2974%" height="15" fill="rgb(238,154,13)"/><text x="32.0154%" y="239.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (1,514 samples, 0.30%)</title><rect x="31.7654%" y="213" width="0.2974%" height="15" fill="rgb(219,56,2)"/><text x="32.0154%" y="223.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::done (790 samples, 0.16%)</title><rect x="31.9076%" y="197" width="0.1552%" height="15" fill="rgb(233,0,4)"/><text x="32.1576%" y="207.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (790 samples, 0.16%)</title><rect x="31.9076%" y="181" width="0.1552%" height="15" fill="rgb(235,30,7)"/><text x="32.1576%" y="191.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (790 samples, 0.16%)</title><rect x="31.9076%" y="165" width="0.1552%" height="15" fill="rgb(250,79,13)"/><text x="32.1576%" y="175.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::free_packet_batch (790 samples, 0.16%)</title><rect x="31.9076%" y="149" width="0.1552%" height="15" fill="rgb(211,146,34)"/><text x="32.1576%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::is_empty (790 samples, 0.16%)</title><rect x="31.9076%" y="133" width="0.1552%" height="15" fill="rgb(228,22,38)"/><text x="32.1576%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (728 samples, 0.14%)</title><rect x="32.3439%" y="245" width="0.1430%" height="15" fill="rgb(235,168,5)"/><text x="32.5939%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1,530 samples, 0.30%)</title><rect x="32.3439%" y="261" width="0.3006%" height="15" fill="rgb(221,155,16)"/><text x="32.5939%" y="271.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (802 samples, 0.16%)</title><rect x="32.4869%" y="245" width="0.1576%" height="15" fill="rgb(215,215,53)"/><text x="32.7369%" y="255.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (802 samples, 0.16%)</title><rect x="32.4869%" y="229" width="0.1576%" height="15" fill="rgb(223,4,10)"/><text x="32.7369%" y="239.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (4,765 samples, 0.94%)</title><rect x="32.0628%" y="293" width="0.9361%" height="15" fill="rgb(234,103,6)"/><text x="32.3128%" y="303.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (4,096 samples, 0.80%)</title><rect x="32.1942%" y="277" width="0.8047%" height="15" fill="rgb(227,97,0)"/><text x="32.4442%" y="287.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (1,804 samples, 0.35%)</title><rect x="32.6445%" y="261" width="0.3544%" height="15" fill="rgb(234,150,53)"/><text x="32.8945%" y="271.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (6,281 samples, 1.23%)</title><rect x="31.7652%" y="309" width="1.2339%" height="15" fill="rgb(228,201,54)"/><text x="32.0152%" y="319.50"></text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::act (38,158 samples, 7.50%)</title><rect x="25.8149%" y="325" width="7.4963%" height="15" fill="rgb(222,22,37)"/><text x="26.0649%" y="335.50">&lt;e2d2::ope..</text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::act::Act&gt;::send_q (1,589 samples, 0.31%)</title><rect x="32.9991%" y="309" width="0.3122%" height="15" fill="rgb(237,53,32)"/><text x="33.2491%" y="319.50"></text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;::execute (38,162 samples, 7.50%)</title><rect x="25.8149%" y="341" width="7.4971%" height="15" fill="rgb(233,25,53)"/><text x="26.0649%" y="351.50">&lt;e2d2::ope..</text></g><g><title>__GI___pthread_mutex_lock (43,892 samples, 8.62%)</title><rect x="33.3121%" y="341" width="8.6228%" height="15" fill="rgb(210,40,34)"/><text x="33.5621%" y="351.50">__GI___pthre..</text></g><g><title>__pthread_mutex_unlock_usercnt (42,570 samples, 8.36%)</title><rect x="41.9350%" y="325" width="8.3631%" height="15" fill="rgb(241,220,44)"/><text x="42.1850%" y="335.50">__pthread_mu..</text></g><g><title>__GI___pthread_mutex_unlock (42,572 samples, 8.36%)</title><rect x="41.9348%" y="341" width="8.3635%" height="15" fill="rgb(235,28,35)"/><text x="42.1848%" y="351.50">__GI___pthre..</text></g><g><title>std::panic::catch_unwind (206,183 samples, 40.51%)</title><rect x="9.8895%" y="501" width="40.5056%" height="15" fill="rgb(210,56,17)"/><text x="10.1395%" y="511.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (206,183 samples, 40.51%)</title><rect x="9.8895%" y="485" width="40.5056%" height="15" fill="rgb(224,130,29)"/><text x="10.1395%" y="495.50">std::panicking::try</text></g><g><title>__rust_maybe_catch_panic (206,183 samples, 40.51%)</title><rect x="9.8895%" y="469" width="40.5056%" height="15" fill="rgb(235,212,8)"/><text x="10.1395%" y="479.50">__rust_maybe_catch_panic</text></g><g><title>std::panicking::try::do_call (206,183 samples, 40.51%)</title><rect x="9.8895%" y="453" width="40.5056%" height="15" fill="rgb(223,33,50)"/><text x="10.1395%" y="463.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (206,183 samples, 40.51%)</title><rect x="9.8895%" y="437" width="40.5056%" height="15" fill="rgb(219,149,13)"/><text x="10.1395%" y="447.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;</text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}}::_{{closure}} (206,183 samples, 40.51%)</title><rect x="9.8895%" y="421" width="40.5056%" height="15" fill="rgb(250,156,29)"/><text x="10.1395%" y="431.50">std::thread::Builder::spawn_unchecked::_{{closure}}::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (206,183 samples, 40.51%)</title><rect x="9.8895%" y="405" width="40.5056%" height="15" fill="rgb(216,193,19)"/><text x="10.1395%" y="415.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>e2d2::scheduler::context::NetBricksContext::start_scheduler::_{{closure}} (206,183 samples, 40.51%)</title><rect x="9.8895%" y="389" width="40.5056%" height="15" fill="rgb(216,135,14)"/><text x="10.1395%" y="399.50">e2d2::scheduler::context::NetBricksContext::start_scheduler::_{{cl..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_requests (206,175 samples, 40.50%)</title><rect x="9.8911%" y="373" width="40.5041%" height="15" fill="rgb(241,47,5)"/><text x="10.1411%" y="383.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request (206,175 samples, 40.50%)</title><rect x="9.8911%" y="357" width="40.5041%" height="15" fill="rgb(233,42,35)"/><text x="10.1411%" y="367.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle..</text></g><g><title>sched-4 (252,461 samples, 49.60%)</title><rect x="0.7982%" y="645" width="49.5972%" height="15" fill="rgb(231,13,6)"/><text x="1.0482%" y="655.50">sched-4</text></g><g><title>__GI___clone (206,184 samples, 40.51%)</title><rect x="9.8895%" y="629" width="40.5058%" height="15" fill="rgb(207,181,40)"/><text x="10.1395%" y="639.50">__GI___clone</text></g><g><title>start_thread (206,184 samples, 40.51%)</title><rect x="9.8895%" y="613" width="40.5058%" height="15" fill="rgb(254,173,49)"/><text x="10.1395%" y="623.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (206,184 samples, 40.51%)</title><rect x="9.8895%" y="597" width="40.5058%" height="15" fill="rgb(221,1,38)"/><text x="10.1395%" y="607.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys_common::thread::start_thread (206,184 samples, 40.51%)</title><rect x="9.8895%" y="581" width="40.5058%" height="15" fill="rgb(206,124,46)"/><text x="10.1395%" y="591.50">std::sys_common::thread::start_thread</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (206,184 samples, 40.51%)</title><rect x="9.8895%" y="565" width="40.5058%" height="15" fill="rgb(249,21,11)"/><text x="10.1395%" y="575.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (206,184 samples, 40.51%)</title><rect x="9.8895%" y="549" width="40.5058%" height="15" fill="rgb(222,201,40)"/><text x="10.1395%" y="559.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (206,184 samples, 40.51%)</title><rect x="9.8895%" y="533" width="40.5058%" height="15" fill="rgb(235,61,29)"/><text x="10.1395%" y="543.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}} (206,184 samples, 40.51%)</title><rect x="9.8895%" y="517" width="40.5058%" height="15" fill="rgb(219,207,3)"/><text x="10.1395%" y="527.50">std::thread::Builder::spawn_unchecked::_{{closure}}</text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (620 samples, 0.12%)</title><rect x="51.5708%" y="613" width="0.1218%" height="15" fill="rgb(222,56,46)"/><text x="51.8208%" y="623.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (526 samples, 0.10%)</title><rect x="51.6926%" y="613" width="0.1033%" height="15" fill="rgb(239,76,54)"/><text x="51.9426%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3,084 samples, 0.61%)</title><rect x="51.8633%" y="613" width="0.6059%" height="15" fill="rgb(231,124,27)"/><text x="52.1133%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (886 samples, 0.17%)</title><rect x="52.2951%" y="597" width="0.1741%" height="15" fill="rgb(249,195,6)"/><text x="52.5451%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (886 samples, 0.17%)</title><rect x="52.2951%" y="581" width="0.1741%" height="15" fill="rgb(237,174,47)"/><text x="52.5451%" y="591.50"></text></g><g><title>__GI___clock_gettime (1,898 samples, 0.37%)</title><rect x="52.4774%" y="613" width="0.3729%" height="15" fill="rgb(206,201,31)"/><text x="52.7274%" y="623.50"></text></g><g><title>__vdso_clock_gettime (644 samples, 0.13%)</title><rect x="52.9149%" y="613" width="0.1265%" height="15" fill="rgb(231,57,52)"/><text x="53.1649%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (1,720 samples, 0.34%)</title><rect x="53.1829%" y="613" width="0.3379%" height="15" fill="rgb(248,177,22)"/><text x="53.4329%" y="623.50"></text></g><g><title>pvn_tlsv::nf::validator::_{{closure}} (3,574 samples, 0.70%)</title><rect x="53.5571%" y="613" width="0.7021%" height="15" fill="rgb(215,211,37)"/><text x="53.8071%" y="623.50"></text></g><g><title>pvn_tlsv::utils::on_frame (1,289 samples, 0.25%)</title><rect x="54.2592%" y="613" width="0.2532%" height="15" fill="rgb(241,128,51)"/><text x="54.5092%" y="623.50"></text></g><g><title>[unknown] (15,580 samples, 3.06%)</title><rect x="51.5708%" y="629" width="3.0608%" height="15" fill="rgb(227,165,31)"/><text x="51.8208%" y="639.50">[un..</text></g><g><title>error_entry (1,224 samples, 0.24%)</title><rect x="62.1331%" y="277" width="0.2405%" height="15" fill="rgb(228,167,24)"/><text x="62.3831%" y="287.50"></text></g><g><title>sync_regs (671 samples, 0.13%)</title><rect x="62.2418%" y="261" width="0.1318%" height="15" fill="rgb(228,143,12)"/><text x="62.4918%" y="271.50"></text></g><g><title>native_irq_return_iret (914 samples, 0.18%)</title><rect x="62.3779%" y="277" width="0.1796%" height="15" fill="rgb(249,149,8)"/><text x="62.6279%" y="287.50"></text></g><g><title>_raw_spin_lock (972 samples, 0.19%)</title><rect x="62.8461%" y="197" width="0.1910%" height="15" fill="rgb(243,35,44)"/><text x="63.0961%" y="207.50"></text></g><g><title>clear_page_erms (1,047 samples, 0.21%)</title><rect x="63.0779%" y="165" width="0.2057%" height="15" fill="rgb(246,89,9)"/><text x="63.3279%" y="175.50"></text></g><g><title>__alloc_pages_nodemask (1,693 samples, 0.33%)</title><rect x="63.0471%" y="181" width="0.3326%" height="15" fill="rgb(233,213,13)"/><text x="63.2971%" y="191.50"></text></g><g><title>alloc_pages_vma (1,839 samples, 0.36%)</title><rect x="63.0370%" y="197" width="0.3613%" height="15" fill="rgb(233,141,41)"/><text x="63.2870%" y="207.50"></text></g><g><title>lru_cache_add_active_or_unevictable (573 samples, 0.11%)</title><rect x="63.3989%" y="197" width="0.1126%" height="15" fill="rgb(239,167,4)"/><text x="63.6489%" y="207.50"></text></g><g><title>__handle_mm_fault (5,071 samples, 1.00%)</title><rect x="62.6638%" y="213" width="0.9962%" height="15" fill="rgb(209,217,16)"/><text x="62.9138%" y="223.50"></text></g><g><title>handle_mm_fault (5,319 samples, 1.04%)</title><rect x="62.6292%" y="229" width="1.0449%" height="15" fill="rgb(219,88,35)"/><text x="62.8792%" y="239.50"></text></g><g><title>__do_page_fault (5,727 samples, 1.13%)</title><rect x="62.5683%" y="245" width="1.1251%" height="15" fill="rgb(220,193,23)"/><text x="62.8183%" y="255.50"></text></g><g><title>page_fault (5,805 samples, 1.14%)</title><rect x="62.5575%" y="277" width="1.1404%" height="15" fill="rgb(230,90,52)"/><text x="62.8075%" y="287.50"></text></g><g><title>do_page_fault (5,761 samples, 1.13%)</title><rect x="62.5661%" y="261" width="1.1318%" height="15" fill="rgb(252,106,19)"/><text x="62.8161%" y="271.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (2,558 samples, 0.50%)</title><rect x="63.6987%" y="277" width="0.5025%" height="15" fill="rgb(206,74,20)"/><text x="63.9487%" y="287.50"></text></g><g><title>prepare_exit_to_usermode (1,910 samples, 0.38%)</title><rect x="63.8260%" y="261" width="0.3752%" height="15" fill="rgb(230,138,44)"/><text x="64.0760%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (18,874 samples, 3.71%)</title><rect x="60.5016%" y="293" width="3.7079%" height="15" fill="rgb(235,182,43)"/><text x="60.7516%" y="303.50">hash..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut (47,555 samples, 9.34%)</title><rect x="54.8679%" y="325" width="9.3424%" height="15" fill="rgb(242,16,51)"/><text x="55.1179%" y="335.50">&lt;alloc::boxed..</text></g><g><title>pvn_tlsv::nf::validator::_{{closure}} (47,301 samples, 9.29%)</title><rect x="54.9178%" y="309" width="9.2925%" height="15" fill="rgb(248,9,4)"/><text x="55.1678%" y="319.50">pvn_tlsv::nf:..</text></g><g><title>__GI___clock_gettime (14,295 samples, 2.81%)</title><rect x="65.2363%" y="245" width="2.8083%" height="15" fill="rgb(210,31,22)"/><text x="65.4863%" y="255.50">__..</text></g><g><title>__vdso_clock_gettime (13,832 samples, 2.72%)</title><rect x="65.3273%" y="229" width="2.7174%" height="15" fill="rgb(239,54,39)"/><text x="65.5773%" y="239.50">__..</text></g><g><title>[[vdso]] (9,420 samples, 1.85%)</title><rect x="66.1941%" y="213" width="1.8506%" height="15" fill="rgb(230,99,41)"/><text x="66.4441%" y="223.50">[..</text></g><g><title>__GI___pthread_mutex_lock (5,589 samples, 1.10%)</title><rect x="68.0447%" y="245" width="1.0980%" height="15" fill="rgb(253,106,12)"/><text x="68.2947%" y="255.50"></text></g><g><title>__GI___pthread_mutex_unlock (7,691 samples, 1.51%)</title><rect x="69.1427%" y="245" width="1.5109%" height="15" fill="rgb(213,46,41)"/><text x="69.3927%" y="255.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (7,486 samples, 1.47%)</title><rect x="69.1829%" y="229" width="1.4707%" height="15" fill="rgb(215,133,35)"/><text x="69.4329%" y="239.50"></text></g><g><title>__alloc_pages_nodemask (687 samples, 0.13%)</title><rect x="70.8718%" y="149" width="0.1350%" height="15" fill="rgb(213,28,5)"/><text x="71.1218%" y="159.50"></text></g><g><title>alloc_pages_vma (767 samples, 0.15%)</title><rect x="70.8667%" y="165" width="0.1507%" height="15" fill="rgb(215,77,49)"/><text x="71.1167%" y="175.50"></text></g><g><title>__handle_mm_fault (1,444 samples, 0.28%)</title><rect x="70.8239%" y="181" width="0.2837%" height="15" fill="rgb(248,100,22)"/><text x="71.0739%" y="191.50"></text></g><g><title>handle_mm_fault (1,563 samples, 0.31%)</title><rect x="70.8064%" y="197" width="0.3071%" height="15" fill="rgb(208,67,9)"/><text x="71.0564%" y="207.50"></text></g><g><title>__do_page_fault (1,710 samples, 0.34%)</title><rect x="70.7858%" y="213" width="0.3359%" height="15" fill="rgb(219,133,21)"/><text x="71.0358%" y="223.50"></text></g><g><title>page_fault (1,733 samples, 0.34%)</title><rect x="70.7830%" y="245" width="0.3405%" height="15" fill="rgb(246,46,29)"/><text x="71.0330%" y="255.50"></text></g><g><title>do_page_fault (1,729 samples, 0.34%)</title><rect x="70.7838%" y="229" width="0.3397%" height="15" fill="rgb(246,185,52)"/><text x="71.0338%" y="239.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (901 samples, 0.18%)</title><rect x="71.1239%" y="245" width="0.1770%" height="15" fill="rgb(252,136,11)"/><text x="71.3739%" y="255.50"></text></g><g><title>prepare_exit_to_usermode (684 samples, 0.13%)</title><rect x="71.1665%" y="229" width="0.1344%" height="15" fill="rgb(219,138,53)"/><text x="71.4165%" y="239.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut (35,656 samples, 7.00%)</title><rect x="64.2965%" y="277" width="7.0048%" height="15" fill="rgb(211,51,23)"/><text x="64.5465%" y="287.50">&lt;alloc::b..</text></g><g><title>pvn_tlsv::nf::validator::_{{closure}} (35,406 samples, 6.96%)</title><rect x="64.3456%" y="261" width="6.9557%" height="15" fill="rgb(247,221,28)"/><text x="64.5956%" y="271.50">pvn_tlsv:..</text></g><g><title>_mm_add_epi16 (1,628 samples, 0.32%)</title><rect x="71.7579%" y="117" width="0.3198%" height="15" fill="rgb(251,222,45)"/><text x="72.0079%" y="127.50"></text></g><g><title>_mm_loadu_si128 (3,950 samples, 0.78%)</title><rect x="72.0987%" y="117" width="0.7760%" height="15" fill="rgb(217,162,53)"/><text x="72.3487%" y="127.50"></text></g><g><title>desc_to_olflags_v (687 samples, 0.13%)</title><rect x="72.9558%" y="117" width="0.1350%" height="15" fill="rgb(229,93,14)"/><text x="73.2058%" y="127.50"></text></g><g><title>desc_to_ptype_v (636 samples, 0.12%)</title><rect x="73.0908%" y="117" width="0.1249%" height="15" fill="rgb(209,67,49)"/><text x="73.3408%" y="127.50"></text></g><g><title>common_ring_mc_dequeue (522 samples, 0.10%)</title><rect x="73.3446%" y="37" width="0.1025%" height="15" fill="rgb(213,87,29)"/><text x="73.5946%" y="47.50"></text></g><g><title>rte_mempool_get_bulk (699 samples, 0.14%)</title><rect x="73.3108%" y="101" width="0.1373%" height="15" fill="rgb(205,151,52)"/><text x="73.5608%" y="111.50"></text></g><g><title>rte_mempool_generic_get (634 samples, 0.12%)</title><rect x="73.3236%" y="85" width="0.1246%" height="15" fill="rgb(253,215,39)"/><text x="73.5736%" y="95.50"></text></g><g><title>__mempool_generic_get (634 samples, 0.12%)</title><rect x="73.3236%" y="69" width="0.1246%" height="15" fill="rgb(221,220,41)"/><text x="73.5736%" y="79.50"></text></g><g><title>rte_mempool_ops_dequeue_bulk (576 samples, 0.11%)</title><rect x="73.3350%" y="53" width="0.1132%" height="15" fill="rgb(218,133,21)"/><text x="73.5850%" y="63.50"></text></g><g><title>i40e_rxq_rearm (1,208 samples, 0.24%)</title><rect x="73.2157%" y="117" width="0.2373%" height="15" fill="rgb(221,193,43)"/><text x="73.4657%" y="127.50"></text></g><g><title>e2d2::interface::port::&lt;impl e2d2::interface::PacketRx for e2d2::allocators::cache_aligned::CacheAligned&lt;T&gt;&gt;::recv (10,917 samples, 2.14%)</title><rect x="71.3086%" y="229" width="2.1447%" height="15" fill="rgb(240,128,52)"/><text x="71.5586%" y="239.50">e..</text></g><g><title>&lt;e2d2::interface::port::phy_port::PortQueue as e2d2::interface::PacketRx&gt;::recv (10,903 samples, 2.14%)</title><rect x="71.3113%" y="213" width="2.1419%" height="15" fill="rgb(253,114,12)"/><text x="71.5613%" y="223.50">&lt;..</text></g><g><title>e2d2::interface::port::phy_port::PortQueue::recv_queue (10,903 samples, 2.14%)</title><rect x="71.3113%" y="197" width="2.1419%" height="15" fill="rgb(215,223,47)"/><text x="71.5613%" y="207.50">e..</text></g><g><title>recv_pkts (10,840 samples, 2.13%)</title><rect x="71.3237%" y="181" width="2.1296%" height="15" fill="rgb(248,225,23)"/><text x="71.5737%" y="191.50">r..</text></g><g><title>rte_eth_rx_burst (10,829 samples, 2.13%)</title><rect x="71.3259%" y="165" width="2.1274%" height="15" fill="rgb(250,108,0)"/><text x="71.5759%" y="175.50">r..</text></g><g><title>i40e_recv_pkts_vec (10,681 samples, 2.10%)</title><rect x="71.3549%" y="149" width="2.0983%" height="15" fill="rgb(228,208,7)"/><text x="71.6049%" y="159.50">i..</text></g><g><title>_recv_raw_pkts_vec (10,662 samples, 2.09%)</title><rect x="71.3587%" y="133" width="2.0946%" height="15" fill="rgb(244,45,10)"/><text x="71.6087%" y="143.50">_..</text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (10,963 samples, 2.15%)</title><rect x="71.3013%" y="277" width="2.1537%" height="15" fill="rgb(207,125,25)"/><text x="71.5513%" y="287.50">&lt;..</text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (10,951 samples, 2.15%)</title><rect x="71.3037%" y="261" width="2.1514%" height="15" fill="rgb(210,195,18)"/><text x="71.5537%" y="271.50">e..</text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (10,929 samples, 2.15%)</title><rect x="71.3080%" y="245" width="2.1471%" height="15" fill="rgb(249,80,12)"/><text x="71.5580%" y="255.50">e..</text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (47,413 samples, 9.31%)</title><rect x="64.2470%" y="325" width="9.3145%" height="15" fill="rgb(221,65,9)"/><text x="64.4970%" y="335.50">&lt;e2d2::operat..</text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (47,413 samples, 9.31%)</title><rect x="64.2470%" y="309" width="9.3145%" height="15" fill="rgb(235,49,36)"/><text x="64.4970%" y="319.50">&lt;e2d2::operat..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (47,404 samples, 9.31%)</title><rect x="64.2488%" y="293" width="9.3127%" height="15" fill="rgb(225,32,20)"/><text x="64.4988%" y="303.50">&lt;e2d2::operat..</text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (542 samples, 0.11%)</title><rect x="73.4550%" y="277" width="0.1065%" height="15" fill="rgb(215,141,46)"/><text x="73.7050%" y="287.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (542 samples, 0.11%)</title><rect x="73.4550%" y="261" width="0.1065%" height="15" fill="rgb(250,160,47)"/><text x="73.7050%" y="271.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (542 samples, 0.11%)</title><rect x="73.4550%" y="245" width="0.1065%" height="15" fill="rgb(216,222,40)"/><text x="73.7050%" y="255.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::header_u8 (887 samples, 0.17%)</title><rect x="73.5615%" y="309" width="0.1743%" height="15" fill="rgb(234,217,39)"/><text x="73.8115%" y="319.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::save_header_and_offset (1,017 samples, 0.20%)</title><rect x="73.5615%" y="325" width="0.1998%" height="15" fill="rgb(207,178,40)"/><text x="73.8115%" y="335.50"></text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (721 samples, 0.14%)</title><rect x="73.7613%" y="325" width="0.1416%" height="15" fill="rgb(221,136,13)"/><text x="74.0113%" y="335.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (710 samples, 0.14%)</title><rect x="73.7635%" y="309" width="0.1395%" height="15" fill="rgb(249,199,10)"/><text x="74.0135%" y="319.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::enqueue_mbufs (957 samples, 0.19%)</title><rect x="74.1194%" y="261" width="0.1880%" height="15" fill="rgb(249,222,13)"/><text x="74.3694%" y="271.50"></text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (99,467 samples, 19.54%)</title><rect x="54.8103%" y="341" width="19.5408%" height="15" fill="rgb(244,185,38)"/><text x="55.0603%" y="351.50">&lt;e2d2::operators::group_by::Gro..</text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscProducer::enqueue_one (2,281 samples, 0.45%)</title><rect x="73.9029%" y="325" width="0.4481%" height="15" fill="rgb(236,202,9)"/><text x="74.1529%" y="335.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::enqueue_one (2,202 samples, 0.43%)</title><rect x="73.9185%" y="309" width="0.4326%" height="15" fill="rgb(250,229,37)"/><text x="74.1685%" y="319.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::enqueue (2,029 samples, 0.40%)</title><rect x="73.9525%" y="293" width="0.3986%" height="15" fill="rgb(206,174,23)"/><text x="74.2025%" y="303.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::enqueue_sp (1,890 samples, 0.37%)</title><rect x="73.9798%" y="277" width="0.3713%" height="15" fill="rgb(211,33,43)"/><text x="74.2298%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,102 samples, 0.22%)</title><rect x="79.2976%" y="165" width="0.2165%" height="15" fill="rgb(245,58,50)"/><text x="79.5476%" y="175.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (702 samples, 0.14%)</title><rect x="79.5141%" y="165" width="0.1379%" height="15" fill="rgb(244,68,36)"/><text x="79.7641%" y="175.50"></text></g><g><title>core::hash::sip::u8to64_le (4,138 samples, 0.81%)</title><rect x="79.7325%" y="165" width="0.8129%" height="15" fill="rgb(232,229,15)"/><text x="79.9825%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10,007 samples, 1.97%)</title><rect x="78.5799%" y="181" width="1.9659%" height="15" fill="rgb(254,30,23)"/><text x="78.8299%" y="191.50">&lt;..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10,085 samples, 1.98%)</title><rect x="78.5799%" y="197" width="1.9812%" height="15" fill="rgb(235,160,14)"/><text x="78.8299%" y="207.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10,086 samples, 1.98%)</title><rect x="78.5799%" y="213" width="1.9814%" height="15" fill="rgb(212,155,44)"/><text x="78.8299%" y="223.50">&lt;..</text></g><g><title>[[vdso]] (17,369 samples, 3.41%)</title><rect x="82.6220%" y="181" width="3.4122%" height="15" fill="rgb(226,2,50)"/><text x="82.8720%" y="191.50">[[v..</text></g><g><title>__vdso_clock_gettime (26,749 samples, 5.25%)</title><rect x="80.7797%" y="197" width="5.2550%" height="15" fill="rgb(234,177,6)"/><text x="81.0297%" y="207.50">__vdso..</text></g><g><title>__GI___clock_gettime (27,861 samples, 5.47%)</title><rect x="80.5614%" y="213" width="5.4734%" height="15" fill="rgb(217,24,9)"/><text x="80.8114%" y="223.50">__GI___..</text></g><g><title>__alloc_pages_nodemask (649 samples, 0.13%)</title><rect x="86.6670%" y="101" width="0.1275%" height="15" fill="rgb(220,13,46)"/><text x="86.9170%" y="111.50"></text></g><g><title>alloc_pages_vma (692 samples, 0.14%)</title><rect x="86.6646%" y="117" width="0.1359%" height="15" fill="rgb(239,221,27)"/><text x="86.9146%" y="127.50"></text></g><g><title>__handle_mm_fault (1,337 samples, 0.26%)</title><rect x="86.6218%" y="133" width="0.2627%" height="15" fill="rgb(222,198,25)"/><text x="86.8718%" y="143.50"></text></g><g><title>handle_mm_fault (1,405 samples, 0.28%)</title><rect x="86.6134%" y="149" width="0.2760%" height="15" fill="rgb(211,99,13)"/><text x="86.8634%" y="159.50"></text></g><g><title>__do_page_fault (1,520 samples, 0.30%)</title><rect x="86.5981%" y="165" width="0.2986%" height="15" fill="rgb(232,111,31)"/><text x="86.8481%" y="175.50"></text></g><g><title>page_fault (1,555 samples, 0.31%)</title><rect x="86.5926%" y="197" width="0.3055%" height="15" fill="rgb(245,82,37)"/><text x="86.8426%" y="207.50"></text></g><g><title>do_page_fault (1,535 samples, 0.30%)</title><rect x="86.5965%" y="181" width="0.3016%" height="15" fill="rgb(227,149,46)"/><text x="86.8465%" y="191.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (897 samples, 0.18%)</title><rect x="86.8982%" y="197" width="0.1762%" height="15" fill="rgb(218,36,50)"/><text x="87.1482%" y="207.50"></text></g><g><title>prepare_exit_to_usermode (679 samples, 0.13%)</title><rect x="86.9411%" y="181" width="0.1334%" height="15" fill="rgb(226,80,48)"/><text x="87.1911%" y="191.50"></text></g><g><title>__memmove_avx_unaligned_erms (5,298 samples, 1.04%)</title><rect x="86.0348%" y="213" width="1.0408%" height="15" fill="rgb(238,224,15)"/><text x="86.2848%" y="223.50"></text></g><g><title>error_entry (939 samples, 0.18%)</title><rect x="87.0796%" y="213" width="0.1845%" height="15" fill="rgb(241,136,10)"/><text x="87.3296%" y="223.50"></text></g><g><title>sync_regs (597 samples, 0.12%)</title><rect x="87.1467%" y="197" width="0.1173%" height="15" fill="rgb(208,32,45)"/><text x="87.3967%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,127 samples, 0.22%)</title><rect x="89.6227%" y="149" width="0.2214%" height="15" fill="rgb(207,135,9)"/><text x="89.8727%" y="159.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (666 samples, 0.13%)</title><rect x="89.8441%" y="149" width="0.1308%" height="15" fill="rgb(206,86,44)"/><text x="90.0941%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10,066 samples, 1.98%)</title><rect x="88.8944%" y="165" width="1.9775%" height="15" fill="rgb(245,177,15)"/><text x="89.1444%" y="175.50">&lt;..</text></g><g><title>core::hash::sip::u8to64_le (4,327 samples, 0.85%)</title><rect x="90.0219%" y="149" width="0.8501%" height="15" fill="rgb(206,64,50)"/><text x="90.2719%" y="159.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10,168 samples, 2.00%)</title><rect x="88.8944%" y="181" width="1.9976%" height="15" fill="rgb(234,36,40)"/><text x="89.1444%" y="191.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10,169 samples, 2.00%)</title><rect x="88.8944%" y="197" width="1.9977%" height="15" fill="rgb(213,64,8)"/><text x="89.1444%" y="207.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (18,468 samples, 3.63%)</title><rect x="87.2644%" y="213" width="3.6281%" height="15" fill="rgb(210,75,36)"/><text x="87.5144%" y="223.50">hash..</text></g><g><title>native_irq_return_iret (724 samples, 0.14%)</title><rect x="90.8929%" y="213" width="0.1422%" height="15" fill="rgb(229,88,21)"/><text x="91.1429%" y="223.50"></text></g><g><title>clear_page_erms (975 samples, 0.19%)</title><rect x="91.3640%" y="101" width="0.1915%" height="15" fill="rgb(252,204,47)"/><text x="91.6140%" y="111.50"></text></g><g><title>__alloc_pages_nodemask (2,091 samples, 0.41%)</title><rect x="91.2316%" y="117" width="0.4108%" height="15" fill="rgb(208,77,27)"/><text x="91.4816%" y="127.50"></text></g><g><title>alloc_pages_vma (2,230 samples, 0.44%)</title><rect x="91.2228%" y="133" width="0.4381%" height="15" fill="rgb(221,76,26)"/><text x="91.4728%" y="143.50"></text></g><g><title>__handle_mm_fault (3,869 samples, 0.76%)</title><rect x="91.1161%" y="149" width="0.7601%" height="15" fill="rgb(225,139,18)"/><text x="91.3661%" y="159.50"></text></g><g><title>handle_mm_fault (4,085 samples, 0.80%)</title><rect x="91.0857%" y="165" width="0.8025%" height="15" fill="rgb(230,137,11)"/><text x="91.3357%" y="175.50"></text></g><g><title>__do_page_fault (4,404 samples, 0.87%)</title><rect x="91.0438%" y="181" width="0.8652%" height="15" fill="rgb(212,28,1)"/><text x="91.2938%" y="191.50"></text></g><g><title>page_fault (4,465 samples, 0.88%)</title><rect x="91.0352%" y="213" width="0.8772%" height="15" fill="rgb(248,164,17)"/><text x="91.2852%" y="223.50"></text></g><g><title>do_page_fault (4,440 samples, 0.87%)</title><rect x="91.0401%" y="197" width="0.8723%" height="15" fill="rgb(222,171,42)"/><text x="91.2901%" y="207.50"></text></g><g><title>pvn_tlsv::utils::on_frame (5,809 samples, 1.14%)</title><rect x="91.9127%" y="213" width="1.1412%" height="15" fill="rgb(243,84,45)"/><text x="92.1627%" y="223.50"></text></g><g><title>__memmove_avx_unaligned_erms (1,015 samples, 0.20%)</title><rect x="92.8545%" y="197" width="0.1994%" height="15" fill="rgb(252,49,23)"/><text x="93.1045%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (964 samples, 0.19%)</title><rect x="93.4091%" y="197" width="0.1894%" height="15" fill="rgb(215,19,7)"/><text x="93.6591%" y="207.50"></text></g><g><title>core::cmp::PartialOrd::ge (964 samples, 0.19%)</title><rect x="93.4091%" y="181" width="0.1894%" height="15" fill="rgb(238,81,41)"/><text x="93.6591%" y="191.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (964 samples, 0.19%)</title><rect x="93.4091%" y="165" width="0.1894%" height="15" fill="rgb(210,199,37)"/><text x="93.6591%" y="175.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (964 samples, 0.19%)</title><rect x="93.4091%" y="149" width="0.1894%" height="15" fill="rgb(244,192,49)"/><text x="93.6591%" y="159.50"></text></g><g><title>core::time::Duration::new (908 samples, 0.18%)</title><rect x="93.5985%" y="197" width="0.1784%" height="15" fill="rgb(226,211,11)"/><text x="93.8485%" y="207.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (3,680 samples, 0.72%)</title><rect x="93.0541%" y="213" width="0.7230%" height="15" fill="rgb(236,162,54)"/><text x="93.3041%" y="223.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (2,152 samples, 0.42%)</title><rect x="93.7771%" y="213" width="0.4228%" height="15" fill="rgb(220,229,9)"/><text x="94.0271%" y="223.50"></text></g><g><title>prepare_exit_to_usermode (1,602 samples, 0.31%)</title><rect x="93.8851%" y="197" width="0.3147%" height="15" fill="rgb(250,87,22)"/><text x="94.1351%" y="207.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut (100,299 samples, 19.70%)</title><rect x="74.4986%" y="245" width="19.7042%" height="15" fill="rgb(239,43,17)"/><text x="74.7486%" y="255.50">&lt;alloc::boxed::Box&lt;F&gt; as core::..</text></g><g><title>pvn_tlsv::nf::validator::_{{closure}} (100,065 samples, 19.66%)</title><rect x="74.5446%" y="229" width="19.6582%" height="15" fill="rgb(231,177,25)"/><text x="74.7946%" y="239.50">pvn_tlsv::nf::validator::_{{clo..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut (3,028 samples, 0.59%)</title><rect x="94.2582%" y="213" width="0.5949%" height="15" fill="rgb(219,179,1)"/><text x="94.5082%" y="223.50"></text></g><g><title>pvn_tlsv::nf::validator::_{{closure}} (2,819 samples, 0.55%)</title><rect x="94.2993%" y="197" width="0.5538%" height="15" fill="rgb(238,219,53)"/><text x="94.5493%" y="207.50"></text></g><g><title>&lt;e2d2::queues::mpsc_mbuf_queue::MpscConsumer as e2d2::interface::PacketRx&gt;::recv (749 samples, 0.15%)</title><rect x="94.8623%" y="149" width="0.1471%" height="15" fill="rgb(232,167,36)"/><text x="95.1123%" y="159.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::dequeue (749 samples, 0.15%)</title><rect x="94.8623%" y="133" width="0.1471%" height="15" fill="rgb(244,19,51)"/><text x="95.1123%" y="143.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::dequeue_mbufs (709 samples, 0.14%)</title><rect x="94.8702%" y="117" width="0.1393%" height="15" fill="rgb(224,6,22)"/><text x="95.1202%" y="127.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (800 samples, 0.16%)</title><rect x="94.8554%" y="213" width="0.1572%" height="15" fill="rgb(224,145,5)"/><text x="95.1054%" y="223.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (798 samples, 0.16%)</title><rect x="94.8558%" y="197" width="0.1568%" height="15" fill="rgb(234,130,49)"/><text x="95.1058%" y="207.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (795 samples, 0.16%)</title><rect x="94.8564%" y="181" width="0.1562%" height="15" fill="rgb(254,6,2)"/><text x="95.1064%" y="191.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (768 samples, 0.15%)</title><rect x="94.8617%" y="165" width="0.1509%" height="15" fill="rgb(208,96,46)"/><text x="95.1117%" y="175.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::write_metadata (4,753 samples, 0.93%)</title><rect x="95.0126%" y="213" width="0.9337%" height="15" fill="rgb(239,3,39)"/><text x="95.2626%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4,554 samples, 0.89%)</title><rect x="95.0517%" y="197" width="0.8947%" height="15" fill="rgb(233,210,1)"/><text x="95.3017%" y="207.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (9,592 samples, 1.88%)</title><rect x="94.2028%" y="245" width="1.8844%" height="15" fill="rgb(244,137,37)"/><text x="94.4528%" y="255.50">&lt;..</text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::act (9,592 samples, 1.88%)</title><rect x="94.2028%" y="229" width="1.8844%" height="15" fill="rgb(240,136,2)"/><text x="94.4528%" y="239.50">&lt;..</text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (717 samples, 0.14%)</title><rect x="95.9464%" y="213" width="0.1409%" height="15" fill="rgb(239,18,37)"/><text x="96.1964%" y="223.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (717 samples, 0.14%)</title><rect x="95.9464%" y="197" width="0.1409%" height="15" fill="rgb(218,185,22)"/><text x="96.1964%" y="207.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (515 samples, 0.10%)</title><rect x="96.0904%" y="213" width="0.1012%" height="15" fill="rgb(225,218,4)"/><text x="96.3404%" y="223.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (515 samples, 0.10%)</title><rect x="96.0904%" y="197" width="0.1012%" height="15" fill="rgb(230,182,32)"/><text x="96.3404%" y="207.50"></text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (7,504 samples, 1.47%)</title><rect x="96.0904%" y="245" width="1.4742%" height="15" fill="rgb(242,56,43)"/><text x="96.3404%" y="255.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (7,504 samples, 1.47%)</title><rect x="96.0904%" y="229" width="1.4742%" height="15" fill="rgb(233,99,24)"/><text x="96.3404%" y="239.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6,989 samples, 1.37%)</title><rect x="96.1915%" y="213" width="1.3730%" height="15" fill="rgb(234,209,42)"/><text x="96.4415%" y="223.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload::_{{closure}} (6,989 samples, 1.37%)</title><rect x="96.1915%" y="197" width="1.3730%" height="15" fill="rgb(227,7,12)"/><text x="96.4415%" y="207.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::parse_header (6,989 samples, 1.37%)</title><rect x="96.1915%" y="181" width="1.3730%" height="15" fill="rgb(245,203,43)"/><text x="96.4415%" y="191.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::payload_size (6,781 samples, 1.33%)</title><rect x="96.2324%" y="165" width="1.3322%" height="15" fill="rgb(238,205,33)"/><text x="96.4824%" y="175.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::data_len (6,345 samples, 1.25%)</title><rect x="96.3180%" y="149" width="1.2465%" height="15" fill="rgb(231,56,7)"/><text x="96.5680%" y="159.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (118,045 samples, 23.19%)</title><rect x="74.3742%" y="293" width="23.1905%" height="15" fill="rgb(244,186,29)"/><text x="74.6242%" y="303.50">&lt;e2d2::operators::reset_parse::ResetP..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (117,674 samples, 23.12%)</title><rect x="74.4471%" y="277" width="23.1176%" height="15" fill="rgb(234,111,31)"/><text x="74.6971%" y="287.50">&lt;e2d2::operators::reset_parse::ResetP..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (117,672 samples, 23.12%)</title><rect x="74.4475%" y="261" width="23.1172%" height="15" fill="rgb(241,149,10)"/><text x="74.6975%" y="271.50">&lt;e2d2::operators::transform_batch::Tr..</text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (118,287 samples, 23.24%)</title><rect x="74.3678%" y="309" width="23.2380%" height="15" fill="rgb(249,206,44)"/><text x="74.6178%" y="319.50">&lt;e2d2::operators::composition_batch::..</text></g><g><title>rte_mempool_put_bulk (1,181 samples, 0.23%)</title><rect x="98.3470%" y="165" width="0.2320%" height="15" fill="rgb(251,153,30)"/><text x="98.5970%" y="175.50"></text></g><g><title>rte_mempool_generic_put (1,090 samples, 0.21%)</title><rect x="98.3649%" y="149" width="0.2141%" height="15" fill="rgb(239,152,38)"/><text x="98.6149%" y="159.50"></text></g><g><title>__mempool_generic_put (1,090 samples, 0.21%)</title><rect x="98.3649%" y="133" width="0.2141%" height="15" fill="rgb(249,139,47)"/><text x="98.6149%" y="143.50"></text></g><g><title>rte_mempool_ops_enqueue_bulk (731 samples, 0.14%)</title><rect x="98.4354%" y="117" width="0.1436%" height="15" fill="rgb(244,64,35)"/><text x="98.6854%" y="127.50"></text></g><g><title>common_ring_mp_enqueue (716 samples, 0.14%)</title><rect x="98.4384%" y="101" width="0.1407%" height="15" fill="rgb(216,46,15)"/><text x="98.6884%" y="111.50"></text></g><g><title>rte_ring_mp_enqueue_bulk (671 samples, 0.13%)</title><rect x="98.4472%" y="85" width="0.1318%" height="15" fill="rgb(250,74,19)"/><text x="98.6972%" y="95.50"></text></g><g><title>__rte_ring_do_enqueue (671 samples, 0.13%)</title><rect x="98.4472%" y="69" width="0.1318%" height="15" fill="rgb(249,42,33)"/><text x="98.6972%" y="79.50"></text></g><g><title>i40e_tx_free_bufs (4,998 samples, 0.98%)</title><rect x="97.8453%" y="181" width="0.9819%" height="15" fill="rgb(242,149,17)"/><text x="98.0953%" y="191.50"></text></g><g><title>rte_pktmbuf_prefree_seg (1,263 samples, 0.25%)</title><rect x="98.5790%" y="165" width="0.2481%" height="15" fill="rgb(244,29,21)"/><text x="98.8290%" y="175.50"></text></g><g><title>i40e_xmit_fixed_burst_vec (7,095 samples, 1.39%)</title><rect x="97.7744%" y="197" width="1.3938%" height="15" fill="rgb(220,130,37)"/><text x="98.0244%" y="207.50"></text></g><g><title>vtx (980 samples, 0.19%)</title><rect x="98.9757%" y="181" width="0.1925%" height="15" fill="rgb(211,67,2)"/><text x="99.2257%" y="191.50"></text></g><g><title>vtx1 (980 samples, 0.19%)</title><rect x="98.9757%" y="165" width="0.1925%" height="15" fill="rgb(235,68,52)"/><text x="99.2257%" y="175.50"></text></g><g><title>e2d2::interface::port::&lt;impl e2d2::interface::PacketTx for e2d2::allocators::cache_aligned::CacheAligned&lt;T&gt;&gt;::send (7,657 samples, 1.50%)</title><rect x="97.6657%" y="293" width="1.5043%" height="15" fill="rgb(246,142,3)"/><text x="97.9157%" y="303.50"></text></g><g><title>&lt;e2d2::interface::port::phy_port::PortQueue as e2d2::interface::PacketTx&gt;::send (7,629 samples, 1.50%)</title><rect x="97.6712%" y="277" width="1.4988%" height="15" fill="rgb(241,25,7)"/><text x="97.9212%" y="287.50"></text></g><g><title>e2d2::interface::port::phy_port::PortQueue::send_queue (7,629 samples, 1.50%)</title><rect x="97.6712%" y="261" width="1.4988%" height="15" fill="rgb(242,119,39)"/><text x="97.9212%" y="271.50"></text></g><g><title>send_pkts (7,510 samples, 1.48%)</title><rect x="97.6946%" y="245" width="1.4754%" height="15" fill="rgb(241,98,45)"/><text x="97.9446%" y="255.50"></text></g><g><title>rte_eth_tx_burst (7,506 samples, 1.47%)</title><rect x="97.6954%" y="229" width="1.4746%" height="15" fill="rgb(254,28,30)"/><text x="97.9454%" y="239.50"></text></g><g><title>i40e_xmit_pkts_vec (7,217 samples, 1.42%)</title><rect x="97.7522%" y="213" width="1.4178%" height="15" fill="rgb(241,142,54)"/><text x="98.0022%" y="223.50"></text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;::execute (126,260 samples, 24.80%)</title><rect x="74.3672%" y="341" width="24.8044%" height="15" fill="rgb(222,85,15)"/><text x="74.6172%" y="351.50">&lt;e2d2::operators::send_batch::SendBatch&lt;..</text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::act (126,257 samples, 24.80%)</title><rect x="74.3678%" y="325" width="24.8038%" height="15" fill="rgb(210,85,47)"/><text x="74.6178%" y="335.50">&lt;e2d2::operators::send_batch::SendBatch&lt;..</text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::act::Act&gt;::send_q (7,697 samples, 1.51%)</title><rect x="97.6594%" y="309" width="1.5121%" height="15" fill="rgb(224,206,25)"/><text x="97.9094%" y="319.50"></text></g><g><title>__GI___pthread_mutex_lock (2,664 samples, 0.52%)</title><rect x="99.1716%" y="341" width="0.5234%" height="15" fill="rgb(243,201,19)"/><text x="99.4216%" y="351.50"></text></g><g><title>std::panic::catch_unwind (230,311 samples, 45.25%)</title><rect x="54.6315%" y="501" width="45.2457%" height="15" fill="rgb(236,59,4)"/><text x="54.8815%" y="511.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (230,311 samples, 45.25%)</title><rect x="54.6315%" y="485" width="45.2457%" height="15" fill="rgb(254,179,45)"/><text x="54.8815%" y="495.50">std::panicking::try</text></g><g><title>__rust_maybe_catch_panic (230,311 samples, 45.25%)</title><rect x="54.6315%" y="469" width="45.2457%" height="15" fill="rgb(226,14,10)"/><text x="54.8815%" y="479.50">__rust_maybe_catch_panic</text></g><g><title>std::panicking::try::do_call (230,311 samples, 45.25%)</title><rect x="54.6315%" y="453" width="45.2457%" height="15" fill="rgb(244,27,41)"/><text x="54.8815%" y="463.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (230,311 samples, 45.25%)</title><rect x="54.6315%" y="437" width="45.2457%" height="15" fill="rgb(235,35,32)"/><text x="54.8815%" y="447.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;</text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}}::_{{closure}} (230,311 samples, 45.25%)</title><rect x="54.6315%" y="421" width="45.2457%" height="15" fill="rgb(218,68,31)"/><text x="54.8815%" y="431.50">std::thread::Builder::spawn_unchecked::_{{closure}}::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (230,311 samples, 45.25%)</title><rect x="54.6315%" y="405" width="45.2457%" height="15" fill="rgb(207,120,37)"/><text x="54.8815%" y="415.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>e2d2::scheduler::context::NetBricksContext::start_scheduler::_{{closure}} (230,311 samples, 45.25%)</title><rect x="54.6315%" y="389" width="45.2457%" height="15" fill="rgb(227,98,0)"/><text x="54.8815%" y="399.50">e2d2::scheduler::context::NetBricksContext::start_scheduler::_{{closure}}</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_requests (230,303 samples, 45.24%)</title><rect x="54.6331%" y="373" width="45.2441%" height="15" fill="rgb(207,7,3)"/><text x="54.8831%" y="383.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_requests</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request (230,303 samples, 45.24%)</title><rect x="54.6331%" y="357" width="45.2441%" height="15" fill="rgb(206,98,19)"/><text x="54.8831%" y="367.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request</text></g><g><title>__GI___clone (230,312 samples, 45.25%)</title><rect x="54.6315%" y="629" width="45.2459%" height="15" fill="rgb(217,5,26)"/><text x="54.8815%" y="639.50">__GI___clone</text></g><g><title>start_thread (230,312 samples, 45.25%)</title><rect x="54.6315%" y="613" width="45.2459%" height="15" fill="rgb(235,190,38)"/><text x="54.8815%" y="623.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (230,312 samples, 45.25%)</title><rect x="54.6315%" y="597" width="45.2459%" height="15" fill="rgb(247,86,24)"/><text x="54.8815%" y="607.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys_common::thread::start_thread (230,312 samples, 45.25%)</title><rect x="54.6315%" y="581" width="45.2459%" height="15" fill="rgb(205,101,16)"/><text x="54.8815%" y="591.50">std::sys_common::thread::start_thread</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (230,312 samples, 45.25%)</title><rect x="54.6315%" y="565" width="45.2459%" height="15" fill="rgb(246,168,33)"/><text x="54.8815%" y="575.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (230,312 samples, 45.25%)</title><rect x="54.6315%" y="549" width="45.2459%" height="15" fill="rgb(231,114,1)"/><text x="54.8815%" y="559.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (230,312 samples, 45.25%)</title><rect x="54.6315%" y="533" width="45.2459%" height="15" fill="rgb(207,184,53)"/><text x="54.8815%" y="543.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}} (230,312 samples, 45.25%)</title><rect x="54.6315%" y="517" width="45.2459%" height="15" fill="rgb(224,95,51)"/><text x="54.8815%" y="527.50">std::thread::Builder::spawn_unchecked::_{{closure}}</text></g><g><title>pvn_tlsv::nf::validator::_{{closure}} (547 samples, 0.11%)</title><rect x="99.8851%" y="629" width="0.1075%" height="15" fill="rgb(212,188,45)"/><text x="100.1351%" y="639.50"></text></g><g><title>all (509,023 samples, 100%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(223,154,38)"/><text x="0.2500%" y="671.50"></text></g><g><title>sched-5 (252,499 samples, 49.60%)</title><rect x="50.3954%" y="645" width="49.6046%" height="15" fill="rgb(251,22,52)"/><text x="50.6454%" y="655.50">sched-5</text></g></svg></svg>