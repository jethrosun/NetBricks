<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1094" onload="init(evt)" viewBox="0 0 1200 1094" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1094" fill="url(#background)"/><text id="title" x="600.00" y="24.00">Flame Graph</text><text id="details" x="10.00" y="1077.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1077.00"> </text><g id="frames"><g><title>perf (7 samples, 0.01%)</title><rect x="10" y="1029" width="0" height="15" fill="rgb(213,46,32)"/><text x="13.00" y="1039.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.01%)</title><rect x="10" y="1013" width="0" height="15" fill="rgb(223,111,8)"/><text x="13.00" y="1023.50"></text></g><g><title>do_syscall_64 (7 samples, 0.01%)</title><rect x="10" y="997" width="0" height="15" fill="rgb(226,47,33)"/><text x="13.00" y="1007.50"></text></g><g><title>sys_execve (7 samples, 0.01%)</title><rect x="10" y="981" width="0" height="15" fill="rgb(222,149,7)"/><text x="13.00" y="991.50"></text></g><g><title>do_execveat_common.isra.34 (7 samples, 0.01%)</title><rect x="10" y="965" width="0" height="15" fill="rgb(219,201,24)"/><text x="13.00" y="975.50"></text></g><g><title>search_binary_handler (7 samples, 0.01%)</title><rect x="10" y="949" width="0" height="15" fill="rgb(209,228,36)"/><text x="13.00" y="959.50"></text></g><g><title>load_elf_binary (7 samples, 0.01%)</title><rect x="10" y="933" width="0" height="15" fill="rgb(251,64,34)"/><text x="13.00" y="943.50"></text></g><g><title>setup_new_exec (7 samples, 0.01%)</title><rect x="10" y="917" width="0" height="15" fill="rgb(253,108,54)"/><text x="13.00" y="927.50"></text></g><g><title>perf_event_exec (7 samples, 0.01%)</title><rect x="10" y="901" width="0" height="15" fill="rgb(231,165,51)"/><text x="13.00" y="911.50"></text></g><g><title>ctx_resched (7 samples, 0.01%)</title><rect x="10" y="885" width="0" height="15" fill="rgb(232,148,0)"/><text x="13.00" y="895.50"></text></g><g><title>x86_pmu_enable (7 samples, 0.01%)</title><rect x="10" y="869" width="0" height="15" fill="rgb(226,216,2)"/><text x="13.00" y="879.50"></text></g><g><title>intel_pmu_enable_all (7 samples, 0.01%)</title><rect x="10" y="853" width="0" height="15" fill="rgb(226,132,24)"/><text x="13.00" y="863.50"></text></g><g><title>__intel_pmu_enable_all.constprop.19 (7 samples, 0.01%)</title><rect x="10" y="837" width="0" height="15" fill="rgb(205,126,28)"/><text x="13.00" y="847.50"></text></g><g><title>rte_eth_dev_configure (20 samples, 0.04%)</title><rect x="10" y="885" width="0" height="15" fill="rgb(210,17,33)"/><text x="13.00" y="895.50"></text></g><g><title>i40e_dev_configure (20 samples, 0.04%)</title><rect x="10" y="869" width="0" height="15" fill="rgb(206,94,53)"/><text x="13.00" y="879.50"></text></g><g><title>i40e_dev_sync_phy_type (20 samples, 0.04%)</title><rect x="10" y="853" width="0" height="15" fill="rgb(239,89,46)"/><text x="13.00" y="863.50"></text></g><g><title>i40e_aq_get_phy_capabilities (20 samples, 0.04%)</title><rect x="10" y="837" width="0" height="15" fill="rgb(242,89,18)"/><text x="13.00" y="847.50"></text></g><g><title>i40e_aq_get_link_info (20 samples, 0.04%)</title><rect x="10" y="821" width="0" height="15" fill="rgb(210,74,54)"/><text x="13.00" y="831.50"></text></g><g><title>i40e_asq_send_command (20 samples, 0.04%)</title><rect x="10" y="805" width="0" height="15" fill="rgb(212,57,4)"/><text x="13.00" y="815.50"></text></g><g><title>rte_delay_us_block (20 samples, 0.04%)</title><rect x="10" y="789" width="0" height="15" fill="rgb(213,64,11)"/><text x="13.00" y="799.50"></text></g><g><title>rte_pause (16 samples, 0.03%)</title><rect x="10" y="773" width="0" height="15" fill="rgb(210,145,53)"/><text x="13.00" y="783.50"></text></g><g><title>_mm_pause (16 samples, 0.03%)</title><rect x="10" y="757" width="0" height="15" fill="rgb(240,24,7)"/><text x="13.00" y="767.50"></text></g><g><title>__libc_start_main (56 samples, 0.11%)</title><rect x="10" y="997" width="1" height="15" fill="rgb(241,29,8)"/><text x="13.00" y="1007.50"></text></g><g><title>main (56 samples, 0.11%)</title><rect x="10" y="981" width="1" height="15" fill="rgb(245,153,34)"/><text x="13.00" y="991.50"></text></g><g><title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::hc87de8565012a906 (56 samples, 0.11%)</title><rect x="10" y="965" width="1" height="15" fill="rgb(240,3,51)"/><text x="13.00" y="975.50"></text></g><g><title>pvn_tls::main (56 samples, 0.11%)</title><rect x="10" y="949" width="1" height="15" fill="rgb(243,101,34)"/><text x="13.00" y="959.50"></text></g><g><title>e2d2::scheduler::context::initialize_system (56 samples, 0.11%)</title><rect x="10" y="933" width="1" height="15" fill="rgb(206,160,2)"/><text x="13.00" y="943.50"></text></g><g><title>e2d2::interface::port::phy_port::PmdPort::new_dpdk_port (56 samples, 0.11%)</title><rect x="10" y="917" width="1" height="15" fill="rgb(212,96,29)"/><text x="13.00" y="927.50"></text></g><g><title>init_pmd_port (56 samples, 0.11%)</title><rect x="10" y="901" width="1" height="15" fill="rgb(207,145,21)"/><text x="13.00" y="911.50"></text></g><g><title>rte_eth_dev_start (36 samples, 0.07%)</title><rect x="10" y="885" width="1" height="15" fill="rgb(205,61,19)"/><text x="13.00" y="895.50"></text></g><g><title>i40e_dev_start (36 samples, 0.07%)</title><rect x="10" y="869" width="1" height="15" fill="rgb(213,214,46)"/><text x="13.00" y="879.50"></text></g><g><title>i40e_apply_link_speed (36 samples, 0.07%)</title><rect x="10" y="853" width="1" height="15" fill="rgb(228,202,47)"/><text x="13.00" y="863.50"></text></g><g><title>i40e_phy_conf_link (36 samples, 0.07%)</title><rect x="10" y="837" width="1" height="15" fill="rgb(251,18,11)"/><text x="13.00" y="847.50"></text></g><g><title>i40e_aq_get_phy_capabilities (36 samples, 0.07%)</title><rect x="10" y="821" width="1" height="15" fill="rgb(248,108,23)"/><text x="13.00" y="831.50"></text></g><g><title>i40e_asq_send_command (36 samples, 0.07%)</title><rect x="10" y="805" width="1" height="15" fill="rgb(247,39,41)"/><text x="13.00" y="815.50"></text></g><g><title>rte_delay_us_block (36 samples, 0.07%)</title><rect x="10" y="789" width="1" height="15" fill="rgb(243,104,15)"/><text x="13.00" y="799.50"></text></g><g><title>rte_pause (33 samples, 0.07%)</title><rect x="10" y="773" width="1" height="15" fill="rgb(206,172,49)"/><text x="13.00" y="783.50"></text></g><g><title>_mm_pause (33 samples, 0.07%)</title><rect x="10" y="757" width="1" height="15" fill="rgb(241,109,42)"/><text x="13.00" y="767.50"></text></g><g><title>eal_parse_sysfs_value (6 samples, 0.01%)</title><rect x="11" y="997" width="0" height="15" fill="rgb(250,44,34)"/><text x="14.00" y="1007.50"></text></g><g><title>main (7 samples, 0.01%)</title><rect x="11" y="997" width="0" height="15" fill="rgb(228,84,26)"/><text x="14.00" y="1007.50"></text></g><g><title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::hc87de8565012a906 (7 samples, 0.01%)</title><rect x="11" y="981" width="0" height="15" fill="rgb(213,95,22)"/><text x="14.00" y="991.50"></text></g><g><title>pvn_tls::main (7 samples, 0.01%)</title><rect x="11" y="965" width="0" height="15" fill="rgb(247,134,23)"/><text x="14.00" y="975.50"></text></g><g><title>e2d2::scheduler::context::initialize_system (7 samples, 0.01%)</title><rect x="11" y="949" width="0" height="15" fill="rgb(214,217,2)"/><text x="14.00" y="959.50"></text></g><g><title>init_system_whitelisted (7 samples, 0.01%)</title><rect x="11" y="933" width="0" height="15" fill="rgb(206,213,33)"/><text x="14.00" y="943.50"></text></g><g><title>init_eal (7 samples, 0.01%)</title><rect x="11" y="917" width="0" height="15" fill="rgb(225,126,3)"/><text x="14.00" y="927.50"></text></g><g><title>rte_eal_init (7 samples, 0.01%)</title><rect x="11" y="901" width="0" height="15" fill="rgb(247,96,20)"/><text x="14.00" y="911.50"></text></g><g><title>eal_thread_init_master (7 samples, 0.01%)</title><rect x="11" y="885" width="0" height="15" fill="rgb(213,110,51)"/><text x="14.00" y="895.50"></text></g><g><title>eal_thread_set_affinity (7 samples, 0.01%)</title><rect x="11" y="869" width="0" height="15" fill="rgb(235,151,27)"/><text x="14.00" y="879.50"></text></g><g><title>rte_thread_set_affinity (7 samples, 0.01%)</title><rect x="11" y="853" width="0" height="15" fill="rgb(234,39,18)"/><text x="14.00" y="863.50"></text></g><g><title>__pthread_setaffinity_new (7 samples, 0.01%)</title><rect x="11" y="837" width="0" height="15" fill="rgb(229,68,4)"/><text x="14.00" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.01%)</title><rect x="11" y="821" width="0" height="15" fill="rgb(252,31,29)"/><text x="14.00" y="831.50"></text></g><g><title>do_syscall_64 (7 samples, 0.01%)</title><rect x="11" y="805" width="0" height="15" fill="rgb(235,76,18)"/><text x="14.00" y="815.50"></text></g><g><title>sys_sched_setaffinity (7 samples, 0.01%)</title><rect x="11" y="789" width="0" height="15" fill="rgb(235,125,22)"/><text x="14.00" y="799.50"></text></g><g><title>sched_setaffinity (7 samples, 0.01%)</title><rect x="11" y="773" width="0" height="15" fill="rgb(213,23,0)"/><text x="14.00" y="783.50"></text></g><g><title>__set_cpus_allowed_ptr (7 samples, 0.01%)</title><rect x="11" y="757" width="0" height="15" fill="rgb(217,63,41)"/><text x="14.00" y="767.50"></text></g><g><title>stop_one_cpu (7 samples, 0.01%)</title><rect x="11" y="741" width="0" height="15" fill="rgb(240,25,31)"/><text x="14.00" y="751.50"></text></g><g><title>_cond_resched (7 samples, 0.01%)</title><rect x="11" y="725" width="0" height="15" fill="rgb(230,181,41)"/><text x="14.00" y="735.50"></text></g><g><title>__schedule (7 samples, 0.01%)</title><rect x="11" y="709" width="0" height="15" fill="rgb(249,36,25)"/><text x="14.00" y="719.50"></text></g><g><title>finish_task_switch (7 samples, 0.01%)</title><rect x="11" y="693" width="0" height="15" fill="rgb(226,96,40)"/><text x="14.00" y="703.50"></text></g><g><title>__perf_event_task_sched_in (7 samples, 0.01%)</title><rect x="11" y="677" width="0" height="15" fill="rgb(242,26,25)"/><text x="14.00" y="687.50"></text></g><g><title>x86_pmu_enable (6 samples, 0.01%)</title><rect x="11" y="661" width="0" height="15" fill="rgb(213,38,4)"/><text x="14.00" y="671.50"></text></g><g><title>intel_pmu_enable_all (6 samples, 0.01%)</title><rect x="11" y="645" width="0" height="15" fill="rgb(222,127,17)"/><text x="14.00" y="655.50"></text></g><g><title>__intel_pmu_enable_all.constprop.19 (6 samples, 0.01%)</title><rect x="11" y="629" width="0" height="15" fill="rgb(251,118,54)"/><text x="14.00" y="639.50"></text></g><g><title>_cond_resched (18 samples, 0.04%)</title><rect x="12" y="677" width="0" height="15" fill="rgb(247,36,28)"/><text x="15.00" y="687.50"></text></g><g><title>_cond_resched (17 samples, 0.03%)</title><rect x="14" y="661" width="0" height="15" fill="rgb(217,30,20)"/><text x="17.00" y="671.50"></text></g><g><title>clear_huge_page (80 samples, 0.16%)</title><rect x="12" y="677" width="2" height="15" fill="rgb(250,16,10)"/><text x="15.00" y="687.50"></text></g><g><title>rcu_all_qs (9 samples, 0.02%)</title><rect x="14" y="661" width="0" height="15" fill="rgb(205,201,30)"/><text x="17.00" y="671.50"></text></g><g><title>__mm_populate (2,117 samples, 4.30%)</title><rect x="12" y="773" width="50" height="15" fill="rgb(233,13,37)"/><text x="15.00" y="783.50">__mm_..</text></g><g><title>populate_vma_page_range (2,117 samples, 4.30%)</title><rect x="12" y="757" width="50" height="15" fill="rgb(233,109,53)"/><text x="15.00" y="767.50">popul..</text></g><g><title>__get_user_pages (2,117 samples, 4.30%)</title><rect x="12" y="741" width="50" height="15" fill="rgb(218,2,41)"/><text x="15.00" y="751.50">__get..</text></g><g><title>follow_hugetlb_page (2,117 samples, 4.30%)</title><rect x="12" y="725" width="50" height="15" fill="rgb(244,43,17)"/><text x="15.00" y="735.50">follo..</text></g><g><title>hugetlb_fault (2,097 samples, 4.26%)</title><rect x="12" y="709" width="50" height="15" fill="rgb(253,89,21)"/><text x="15.00" y="719.50">huget..</text></g><g><title>hugetlb_no_page (2,097 samples, 4.26%)</title><rect x="12" y="693" width="50" height="15" fill="rgb(245,198,15)"/><text x="15.00" y="703.50">huget..</text></g><g><title>clear_page_erms (1,999 samples, 4.06%)</title><rect x="14" y="677" width="48" height="15" fill="rgb(243,23,6)"/><text x="17.00" y="687.50">clea..</text></g><g><title>__GI___mmap64 (2,118 samples, 4.30%)</title><rect x="12" y="869" width="50" height="15" fill="rgb(229,115,36)"/><text x="15.00" y="879.50">__GI_..</text></g><g><title>entry_SYSCALL_64_after_hwframe (2,118 samples, 4.30%)</title><rect x="12" y="853" width="50" height="15" fill="rgb(220,25,45)"/><text x="15.00" y="863.50">entry..</text></g><g><title>do_syscall_64 (2,118 samples, 4.30%)</title><rect x="12" y="837" width="50" height="15" fill="rgb(237,107,36)"/><text x="15.00" y="847.50">do_sy..</text></g><g><title>sys_mmap (2,118 samples, 4.30%)</title><rect x="12" y="821" width="50" height="15" fill="rgb(236,26,42)"/><text x="15.00" y="831.50">sys_m..</text></g><g><title>sys_mmap_pgoff (2,118 samples, 4.30%)</title><rect x="12" y="805" width="50" height="15" fill="rgb(247,84,40)"/><text x="15.00" y="815.50">sys_m..</text></g><g><title>vm_mmap_pgoff (2,118 samples, 4.30%)</title><rect x="12" y="789" width="50" height="15" fill="rgb(220,108,10)"/><text x="15.00" y="799.50">vm_mm..</text></g><g><title>rte_eal_memory_init (2,119 samples, 4.31%)</title><rect x="12" y="917" width="50" height="15" fill="rgb(222,192,2)"/><text x="15.00" y="927.50">rte_e..</text></g><g><title>rte_eal_hugepage_init (2,119 samples, 4.31%)</title><rect x="12" y="901" width="50" height="15" fill="rgb(230,217,5)"/><text x="15.00" y="911.50">rte_e..</text></g><g><title>map_all_hugepages (2,119 samples, 4.31%)</title><rect x="12" y="885" width="50" height="15" fill="rgb(244,223,30)"/><text x="15.00" y="895.50">map_a..</text></g><g><title>pvn_tls::main (2,120 samples, 4.31%)</title><rect x="12" y="997" width="50" height="15" fill="rgb(205,45,5)"/><text x="15.00" y="1007.50">pvn_t..</text></g><g><title>e2d2::scheduler::context::initialize_system (2,120 samples, 4.31%)</title><rect x="12" y="981" width="50" height="15" fill="rgb(235,103,34)"/><text x="15.00" y="991.50">e2d2:..</text></g><g><title>init_system_whitelisted (2,120 samples, 4.31%)</title><rect x="12" y="965" width="50" height="15" fill="rgb(207,20,30)"/><text x="15.00" y="975.50">init_..</text></g><g><title>init_eal (2,120 samples, 4.31%)</title><rect x="12" y="949" width="50" height="15" fill="rgb(216,13,38)"/><text x="15.00" y="959.50">init_..</text></g><g><title>rte_eal_init (2,120 samples, 4.31%)</title><rect x="12" y="933" width="50" height="15" fill="rgb(250,176,30)"/><text x="15.00" y="943.50">rte_e..</text></g><g><title>[unknown] (2,199 samples, 4.47%)</title><rect x="10" y="1013" width="52" height="15" fill="rgb(231,23,4)"/><text x="13.00" y="1023.50">[unkn..</text></g><g><title>ret_from_fork (13 samples, 0.03%)</title><rect x="62" y="997" width="1" height="15" fill="rgb(236,82,28)"/><text x="65.00" y="1007.50"></text></g><g><title>schedule_tail (13 samples, 0.03%)</title><rect x="62" y="981" width="1" height="15" fill="rgb(254,129,6)"/><text x="65.00" y="991.50"></text></g><g><title>finish_task_switch (13 samples, 0.03%)</title><rect x="62" y="965" width="1" height="15" fill="rgb(211,58,52)"/><text x="65.00" y="975.50"></text></g><g><title>__perf_event_task_sched_in (12 samples, 0.02%)</title><rect x="62" y="949" width="1" height="15" fill="rgb(232,72,6)"/><text x="65.00" y="959.50"></text></g><g><title>x86_pmu_enable (12 samples, 0.02%)</title><rect x="62" y="933" width="1" height="15" fill="rgb(248,121,33)"/><text x="65.00" y="943.50"></text></g><g><title>intel_pmu_enable_all (12 samples, 0.02%)</title><rect x="62" y="917" width="1" height="15" fill="rgb(231,50,14)"/><text x="65.00" y="927.50"></text></g><g><title>__intel_pmu_enable_all.constprop.19 (12 samples, 0.02%)</title><rect x="62" y="901" width="1" height="15" fill="rgb(225,0,41)"/><text x="65.00" y="911.50"></text></g><g><title>native_write_msr (8 samples, 0.02%)</title><rect x="63" y="885" width="0" height="15" fill="rgb(246,71,15)"/><text x="66.00" y="895.50"></text></g><g><title>__GI___clone (14 samples, 0.03%)</title><rect x="62" y="1013" width="1" height="15" fill="rgb(231,58,18)"/><text x="65.00" y="1023.50"></text></g><g><title>e2d2::scheduler::context::NetBricksContext::add_pipeline_to_run (7 samples, 0.01%)</title><rect x="63" y="933" width="0" height="15" fill="rgb(227,160,16)"/><text x="66.00" y="943.50"></text></g><g><title>std::sync::mpsc::SyncSender&lt;T&gt;::send (7 samples, 0.01%)</title><rect x="63" y="917" width="0" height="15" fill="rgb(231,124,4)"/><text x="66.00" y="927.50"></text></g><g><title>std::sync::mpsc::sync::Packet&lt;T&gt;::send (7 samples, 0.01%)</title><rect x="63" y="901" width="0" height="15" fill="rgb(222,120,5)"/><text x="66.00" y="911.50"></text></g><g><title>std::sync::mpsc::sync::wait (7 samples, 0.01%)</title><rect x="63" y="885" width="0" height="15" fill="rgb(246,167,17)"/><text x="66.00" y="895.50"></text></g><g><title>std::sync::mpsc::blocking::WaitToken::wait (7 samples, 0.01%)</title><rect x="63" y="869" width="0" height="15" fill="rgb(209,208,12)"/><text x="66.00" y="879.50"></text></g><g><title>std::thread::park (7 samples, 0.01%)</title><rect x="63" y="853" width="0" height="15" fill="rgb(222,32,19)"/><text x="66.00" y="863.50"></text></g><g><title>std::sync::condvar::Condvar::wait (7 samples, 0.01%)</title><rect x="63" y="837" width="0" height="15" fill="rgb(214,215,38)"/><text x="66.00" y="847.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (7 samples, 0.01%)</title><rect x="63" y="821" width="0" height="15" fill="rgb(229,216,5)"/><text x="66.00" y="831.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (7 samples, 0.01%)</title><rect x="63" y="805" width="0" height="15" fill="rgb(212,175,10)"/><text x="66.00" y="815.50"></text></g><g><title>__pthread_cond_wait (7 samples, 0.01%)</title><rect x="63" y="789" width="0" height="15" fill="rgb(247,216,20)"/><text x="66.00" y="799.50"></text></g><g><title>__pthread_cond_wait_common (7 samples, 0.01%)</title><rect x="63" y="773" width="0" height="15" fill="rgb(248,144,12)"/><text x="66.00" y="783.50"></text></g><g><title>futex_wait_cancelable (7 samples, 0.01%)</title><rect x="63" y="757" width="0" height="15" fill="rgb(225,153,37)"/><text x="66.00" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.01%)</title><rect x="63" y="741" width="0" height="15" fill="rgb(226,132,31)"/><text x="66.00" y="751.50"></text></g><g><title>do_syscall_64 (7 samples, 0.01%)</title><rect x="63" y="725" width="0" height="15" fill="rgb(253,226,44)"/><text x="66.00" y="735.50"></text></g><g><title>sys_futex (6 samples, 0.01%)</title><rect x="63" y="709" width="0" height="15" fill="rgb(241,58,14)"/><text x="66.00" y="719.50"></text></g><g><title>do_futex (6 samples, 0.01%)</title><rect x="63" y="693" width="0" height="15" fill="rgb(232,208,2)"/><text x="66.00" y="703.50"></text></g><g><title>futex_wait (6 samples, 0.01%)</title><rect x="63" y="677" width="0" height="15" fill="rgb(213,41,52)"/><text x="66.00" y="687.50"></text></g><g><title>futex_wait_queue_me (6 samples, 0.01%)</title><rect x="63" y="661" width="0" height="15" fill="rgb(227,221,41)"/><text x="66.00" y="671.50"></text></g><g><title>schedule (6 samples, 0.01%)</title><rect x="63" y="645" width="0" height="15" fill="rgb(236,200,23)"/><text x="66.00" y="655.50"></text></g><g><title>__schedule (6 samples, 0.01%)</title><rect x="63" y="629" width="0" height="15" fill="rgb(241,151,47)"/><text x="66.00" y="639.50"></text></g><g><title>finish_task_switch (6 samples, 0.01%)</title><rect x="63" y="613" width="0" height="15" fill="rgb(253,44,52)"/><text x="66.00" y="623.50"></text></g><g><title>__perf_event_task_sched_in (6 samples, 0.01%)</title><rect x="63" y="597" width="0" height="15" fill="rgb(252,2,11)"/><text x="66.00" y="607.50"></text></g><g><title>x86_pmu_enable (6 samples, 0.01%)</title><rect x="63" y="581" width="0" height="15" fill="rgb(224,40,8)"/><text x="66.00" y="591.50"></text></g><g><title>intel_pmu_enable_all (6 samples, 0.01%)</title><rect x="63" y="565" width="0" height="15" fill="rgb(231,22,27)"/><text x="66.00" y="575.50"></text></g><g><title>__intel_pmu_enable_all.constprop.19 (6 samples, 0.01%)</title><rect x="63" y="549" width="0" height="15" fill="rgb(242,95,46)"/><text x="66.00" y="559.50"></text></g><g><title>i40e_clear_hw (5 samples, 0.01%)</title><rect x="63" y="773" width="0" height="15" fill="rgb(212,69,5)"/><text x="66.00" y="783.50"></text></g><g><title>i40e_init_dcb (6 samples, 0.01%)</title><rect x="63" y="757" width="0" height="15" fill="rgb(210,158,46)"/><text x="66.00" y="767.50"></text></g><g><title>i40e_dcb_init_configure (8 samples, 0.02%)</title><rect x="63" y="773" width="0" height="15" fill="rgb(223,17,46)"/><text x="66.00" y="783.50"></text></g><g><title>i40e_aq_get_link_info (20 samples, 0.04%)</title><rect x="63" y="741" width="1" height="15" fill="rgb(242,131,12)"/><text x="66.00" y="751.50"></text></g><g><title>i40e_asq_send_command (20 samples, 0.04%)</title><rect x="63" y="725" width="1" height="15" fill="rgb(217,162,51)"/><text x="66.00" y="735.50"></text></g><g><title>rte_delay_us_block (20 samples, 0.04%)</title><rect x="63" y="709" width="1" height="15" fill="rgb(232,160,14)"/><text x="66.00" y="719.50"></text></g><g><title>rte_pause (17 samples, 0.03%)</title><rect x="63" y="693" width="1" height="15" fill="rgb(234,186,29)"/><text x="66.00" y="703.50"></text></g><g><title>_mm_pause (17 samples, 0.03%)</title><rect x="63" y="677" width="1" height="15" fill="rgb(251,211,1)"/><text x="66.00" y="687.50"></text></g><g><title>i40e_dev_sync_phy_type (56 samples, 0.11%)</title><rect x="63" y="773" width="2" height="15" fill="rgb(211,137,52)"/><text x="66.00" y="783.50"></text></g><g><title>i40e_aq_get_phy_capabilities (56 samples, 0.11%)</title><rect x="63" y="757" width="2" height="15" fill="rgb(228,183,6)"/><text x="66.00" y="767.50"></text></g><g><title>i40e_asq_send_command (36 samples, 0.07%)</title><rect x="64" y="741" width="1" height="15" fill="rgb(234,224,7)"/><text x="67.00" y="751.50"></text></g><g><title>rte_delay_us_block (36 samples, 0.07%)</title><rect x="64" y="725" width="1" height="15" fill="rgb(235,36,37)"/><text x="67.00" y="735.50"></text></g><g><title>rte_pause (34 samples, 0.07%)</title><rect x="64" y="709" width="1" height="15" fill="rgb(215,27,22)"/><text x="67.00" y="719.50"></text></g><g><title>_mm_pause (34 samples, 0.07%)</title><rect x="64" y="693" width="1" height="15" fill="rgb(252,86,34)"/><text x="67.00" y="703.50"></text></g><g><title>i40e_get_cap (6 samples, 0.01%)</title><rect x="65" y="773" width="0" height="15" fill="rgb(241,138,25)"/><text x="68.00" y="783.50"></text></g><g><title>i40e_aq_discover_capabilities (6 samples, 0.01%)</title><rect x="65" y="757" width="0" height="15" fill="rgb(219,40,7)"/><text x="68.00" y="767.50"></text></g><g><title>i40e_init_adminq (8 samples, 0.02%)</title><rect x="65" y="773" width="0" height="15" fill="rgb(229,202,41)"/><text x="68.00" y="783.50"></text></g><g><title>i40e_read_nvm_word (5 samples, 0.01%)</title><rect x="65" y="757" width="0" height="15" fill="rgb(228,210,30)"/><text x="68.00" y="767.50"></text></g><g><title>rte_get_timer_cycles (13 samples, 0.03%)</title><rect x="65" y="741" width="0" height="15" fill="rgb(221,19,16)"/><text x="68.00" y="751.50"></text></g><g><title>rte_get_tsc_cycles (13 samples, 0.03%)</title><rect x="65" y="725" width="0" height="15" fill="rgb(205,45,1)"/><text x="68.00" y="735.50"></text></g><g><title>rte_rdtsc (13 samples, 0.03%)</title><rect x="65" y="709" width="0" height="15" fill="rgb(239,113,11)"/><text x="68.00" y="719.50"></text></g><g><title>i40e_pf_reset (77 samples, 0.16%)</title><rect x="65" y="773" width="2" height="15" fill="rgb(207,95,1)"/><text x="68.00" y="783.50"></text></g><g><title>rte_delay_us_block (77 samples, 0.16%)</title><rect x="65" y="757" width="2" height="15" fill="rgb(217,176,52)"/><text x="68.00" y="767.50"></text></g><g><title>rte_pause (64 samples, 0.13%)</title><rect x="65" y="741" width="2" height="15" fill="rgb(247,105,31)"/><text x="68.00" y="751.50"></text></g><g><title>_mm_pause (64 samples, 0.13%)</title><rect x="65" y="725" width="2" height="15" fill="rgb(220,200,19)"/><text x="68.00" y="735.50"></text></g><g><title>i40e_update_flow_control (20 samples, 0.04%)</title><rect x="67" y="757" width="0" height="15" fill="rgb(233,169,16)"/><text x="70.00" y="767.50"></text></g><g><title>i40e_aq_get_link_info (20 samples, 0.04%)</title><rect x="67" y="741" width="0" height="15" fill="rgb(248,211,18)"/><text x="70.00" y="751.50"></text></g><g><title>i40e_asq_send_command (20 samples, 0.04%)</title><rect x="67" y="725" width="0" height="15" fill="rgb(241,196,1)"/><text x="70.00" y="735.50"></text></g><g><title>rte_delay_us_block (20 samples, 0.04%)</title><rect x="67" y="709" width="0" height="15" fill="rgb(224,162,22)"/><text x="70.00" y="719.50"></text></g><g><title>rte_pause (18 samples, 0.04%)</title><rect x="67" y="693" width="0" height="15" fill="rgb(218,134,5)"/><text x="70.00" y="703.50"></text></g><g><title>_mm_pause (18 samples, 0.04%)</title><rect x="67" y="677" width="0" height="15" fill="rgb(248,214,22)"/><text x="70.00" y="687.50"></text></g><g><title>i40e_pf_setup (30 samples, 0.06%)</title><rect x="67" y="773" width="1" height="15" fill="rgb(241,225,34)"/><text x="70.00" y="783.50"></text></g><g><title>i40e_vsi_setup (8 samples, 0.02%)</title><rect x="67" y="757" width="1" height="15" fill="rgb(235,171,24)"/><text x="70.00" y="767.50"></text></g><g><title>i40e_aq_get_phy_capabilities (37 samples, 0.08%)</title><rect x="68" y="757" width="1" height="15" fill="rgb(234,161,43)"/><text x="71.00" y="767.50"></text></g><g><title>i40e_asq_send_command (37 samples, 0.08%)</title><rect x="68" y="741" width="1" height="15" fill="rgb(213,220,20)"/><text x="71.00" y="751.50"></text></g><g><title>rte_delay_us_block (37 samples, 0.08%)</title><rect x="68" y="725" width="1" height="15" fill="rgb(222,72,38)"/><text x="71.00" y="735.50"></text></g><g><title>rte_pause (34 samples, 0.07%)</title><rect x="68" y="709" width="1" height="15" fill="rgb(222,21,25)"/><text x="71.00" y="719.50"></text></g><g><title>_mm_pause (34 samples, 0.07%)</title><rect x="68" y="693" width="1" height="15" fill="rgb(207,214,46)"/><text x="71.00" y="703.50"></text></g><g><title>i40e_aq_get_link_info (20 samples, 0.04%)</title><rect x="69" y="741" width="0" height="15" fill="rgb(235,135,14)"/><text x="72.00" y="751.50"></text></g><g><title>i40e_asq_send_command (20 samples, 0.04%)</title><rect x="69" y="725" width="0" height="15" fill="rgb(216,195,9)"/><text x="72.00" y="735.50"></text></g><g><title>rte_delay_us_block (20 samples, 0.04%)</title><rect x="69" y="709" width="0" height="15" fill="rgb(244,35,44)"/><text x="72.00" y="719.50"></text></g><g><title>rte_pause (17 samples, 0.03%)</title><rect x="69" y="693" width="0" height="15" fill="rgb(214,123,50)"/><text x="72.00" y="703.50"></text></g><g><title>_mm_pause (17 samples, 0.03%)</title><rect x="69" y="677" width="0" height="15" fill="rgb(245,42,33)"/><text x="72.00" y="687.50"></text></g><g><title>rte_get_timer_cycles (5 samples, 0.01%)</title><rect x="69" y="693" width="0" height="15" fill="rgb(248,221,35)"/><text x="72.00" y="703.50"></text></g><g><title>rte_get_tsc_cycles (5 samples, 0.01%)</title><rect x="69" y="677" width="0" height="15" fill="rgb(205,172,28)"/><text x="72.00" y="687.50"></text></g><g><title>rte_rdtsc (5 samples, 0.01%)</title><rect x="69" y="661" width="0" height="15" fill="rgb(241,124,15)"/><text x="72.00" y="671.50"></text></g><g><title>i40e_set_fc (93 samples, 0.19%)</title><rect x="68" y="773" width="2" height="15" fill="rgb(242,175,21)"/><text x="71.00" y="783.50"></text></g><g><title>i40e_update_link_info (56 samples, 0.11%)</title><rect x="69" y="757" width="1" height="15" fill="rgb(211,209,44)"/><text x="72.00" y="767.50"></text></g><g><title>i40e_aq_get_phy_capabilities (36 samples, 0.07%)</title><rect x="69" y="741" width="1" height="15" fill="rgb(215,208,5)"/><text x="72.00" y="751.50"></text></g><g><title>i40e_asq_send_command (36 samples, 0.07%)</title><rect x="69" y="725" width="1" height="15" fill="rgb(217,211,35)"/><text x="72.00" y="735.50"></text></g><g><title>rte_delay_us_block (36 samples, 0.07%)</title><rect x="69" y="709" width="1" height="15" fill="rgb(235,218,38)"/><text x="72.00" y="719.50"></text></g><g><title>rte_pause (31 samples, 0.06%)</title><rect x="69" y="693" width="1" height="15" fill="rgb(246,214,36)"/><text x="72.00" y="703.50"></text></g><g><title>_mm_pause (31 samples, 0.06%)</title><rect x="69" y="677" width="1" height="15" fill="rgb(230,82,52)"/><text x="72.00" y="687.50"></text></g><g><title>attach_pmd_device (290 samples, 0.59%)</title><rect x="63" y="901" width="7" height="15" fill="rgb(241,29,19)"/><text x="66.00" y="911.50"></text></g><g><title>rte_eth_dev_attach (290 samples, 0.59%)</title><rect x="63" y="885" width="7" height="15" fill="rgb(222,95,4)"/><text x="66.00" y="895.50"></text></g><g><title>rte_eal_hotplug_add (290 samples, 0.59%)</title><rect x="63" y="869" width="7" height="15" fill="rgb(232,117,29)"/><text x="66.00" y="879.50"></text></g><g><title>pci_probe_all_drivers (290 samples, 0.59%)</title><rect x="63" y="853" width="7" height="15" fill="rgb(250,139,2)"/><text x="66.00" y="863.50"></text></g><g><title>rte_pci_probe_one_driver (290 samples, 0.59%)</title><rect x="63" y="837" width="7" height="15" fill="rgb(225,130,43)"/><text x="66.00" y="847.50"></text></g><g><title>eth_i40e_pci_probe (290 samples, 0.59%)</title><rect x="63" y="821" width="7" height="15" fill="rgb(217,56,54)"/><text x="66.00" y="831.50"></text></g><g><title>rte_eth_dev_pci_generic_probe (290 samples, 0.59%)</title><rect x="63" y="805" width="7" height="15" fill="rgb(210,179,32)"/><text x="66.00" y="815.50"></text></g><g><title>eth_i40e_dev_init (290 samples, 0.59%)</title><rect x="63" y="789" width="7" height="15" fill="rgb(244,197,16)"/><text x="66.00" y="799.50"></text></g><g><title>i40e_dev_init_vlan (8 samples, 0.02%)</title><rect x="70" y="853" width="0" height="15" fill="rgb(219,10,20)"/><text x="73.00" y="863.50"></text></g><g><title>i40e_vlan_offload_set (8 samples, 0.02%)</title><rect x="70" y="837" width="0" height="15" fill="rgb(242,156,35)"/><text x="73.00" y="847.50"></text></g><g><title>i40e_vsi_config_vlan_filter (8 samples, 0.02%)</title><rect x="70" y="821" width="0" height="15" fill="rgb(234,13,25)"/><text x="73.00" y="831.50"></text></g><g><title>rte_get_timer_cycles (5 samples, 0.01%)</title><rect x="70" y="789" width="0" height="15" fill="rgb(209,11,20)"/><text x="73.00" y="799.50"></text></g><g><title>rte_get_tsc_cycles (5 samples, 0.01%)</title><rect x="70" y="773" width="0" height="15" fill="rgb(210,218,52)"/><text x="73.00" y="783.50"></text></g><g><title>rte_rdtsc (5 samples, 0.01%)</title><rect x="70" y="757" width="0" height="15" fill="rgb(221,111,50)"/><text x="73.00" y="767.50"></text></g><g><title>rte_eth_dev_configure (44 samples, 0.09%)</title><rect x="70" y="885" width="1" height="15" fill="rgb(248,41,36)"/><text x="73.00" y="895.50"></text></g><g><title>i40e_dev_configure (44 samples, 0.09%)</title><rect x="70" y="869" width="1" height="15" fill="rgb(235,48,34)"/><text x="73.00" y="879.50"></text></g><g><title>i40e_dev_sync_phy_type (36 samples, 0.07%)</title><rect x="70" y="853" width="1" height="15" fill="rgb(226,206,10)"/><text x="73.00" y="863.50"></text></g><g><title>i40e_aq_get_phy_capabilities (36 samples, 0.07%)</title><rect x="70" y="837" width="1" height="15" fill="rgb(237,130,46)"/><text x="73.00" y="847.50"></text></g><g><title>i40e_asq_send_command (36 samples, 0.07%)</title><rect x="70" y="821" width="1" height="15" fill="rgb(229,212,25)"/><text x="73.00" y="831.50"></text></g><g><title>rte_delay_us_block (36 samples, 0.07%)</title><rect x="70" y="805" width="1" height="15" fill="rgb(206,21,33)"/><text x="73.00" y="815.50"></text></g><g><title>rte_pause (31 samples, 0.06%)</title><rect x="70" y="789" width="1" height="15" fill="rgb(242,119,43)"/><text x="73.00" y="799.50"></text></g><g><title>_mm_pause (31 samples, 0.06%)</title><rect x="70" y="773" width="1" height="15" fill="rgb(240,66,7)"/><text x="73.00" y="783.50"></text></g><g><title>i40e_dev_link_update (20 samples, 0.04%)</title><rect x="71" y="869" width="0" height="15" fill="rgb(231,140,9)"/><text x="74.00" y="879.50"></text></g><g><title>i40e_aq_get_link_info (20 samples, 0.04%)</title><rect x="71" y="853" width="0" height="15" fill="rgb(222,227,37)"/><text x="74.00" y="863.50"></text></g><g><title>i40e_asq_send_command (20 samples, 0.04%)</title><rect x="71" y="837" width="0" height="15" fill="rgb(227,24,44)"/><text x="74.00" y="847.50"></text></g><g><title>rte_delay_us_block (20 samples, 0.04%)</title><rect x="71" y="821" width="0" height="15" fill="rgb(231,204,5)"/><text x="74.00" y="831.50"></text></g><g><title>rte_pause (19 samples, 0.04%)</title><rect x="71" y="805" width="0" height="15" fill="rgb(226,35,12)"/><text x="74.00" y="815.50"></text></g><g><title>_mm_pause (19 samples, 0.04%)</title><rect x="71" y="789" width="0" height="15" fill="rgb(215,190,1)"/><text x="74.00" y="799.50"></text></g><g><title>i40e_aq_set_phy_int_mask (12 samples, 0.02%)</title><rect x="71" y="853" width="1" height="15" fill="rgb(233,111,33)"/><text x="74.00" y="863.50"></text></g><g><title>i40e_asq_send_command (12 samples, 0.02%)</title><rect x="71" y="837" width="1" height="15" fill="rgb(250,129,46)"/><text x="74.00" y="847.50"></text></g><g><title>rte_delay_us_block (12 samples, 0.02%)</title><rect x="71" y="821" width="1" height="15" fill="rgb(224,117,38)"/><text x="74.00" y="831.50"></text></g><g><title>rte_pause (11 samples, 0.02%)</title><rect x="71" y="805" width="1" height="15" fill="rgb(249,176,52)"/><text x="74.00" y="815.50"></text></g><g><title>_mm_pause (11 samples, 0.02%)</title><rect x="71" y="789" width="1" height="15" fill="rgb(215,171,39)"/><text x="74.00" y="799.50"></text></g><g><title>i40e_dev_link_update (21 samples, 0.04%)</title><rect x="72" y="853" width="0" height="15" fill="rgb(247,58,21)"/><text x="75.00" y="863.50"></text></g><g><title>i40e_aq_get_link_info (21 samples, 0.04%)</title><rect x="72" y="837" width="0" height="15" fill="rgb(221,94,27)"/><text x="75.00" y="847.50"></text></g><g><title>i40e_asq_send_command (21 samples, 0.04%)</title><rect x="72" y="821" width="0" height="15" fill="rgb(206,128,39)"/><text x="75.00" y="831.50"></text></g><g><title>rte_delay_us_block (20 samples, 0.04%)</title><rect x="72" y="805" width="0" height="15" fill="rgb(226,99,21)"/><text x="75.00" y="815.50"></text></g><g><title>rte_pause (17 samples, 0.03%)</title><rect x="72" y="789" width="0" height="15" fill="rgb(244,64,17)"/><text x="75.00" y="799.50"></text></g><g><title>_mm_pause (17 samples, 0.03%)</title><rect x="72" y="773" width="0" height="15" fill="rgb(229,18,39)"/><text x="75.00" y="783.50"></text></g><g><title>i40e_set_rss_key (6 samples, 0.01%)</title><rect x="72" y="773" width="0" height="15" fill="rgb(233,200,52)"/><text x="75.00" y="783.50"></text></g><g><title>i40e_write_rx_ctl (6 samples, 0.01%)</title><rect x="72" y="757" width="0" height="15" fill="rgb(239,178,41)"/><text x="75.00" y="767.50"></text></g><g><title>i40e_aq_rx_ctl_write_register (6 samples, 0.01%)</title><rect x="72" y="741" width="0" height="15" fill="rgb(207,126,40)"/><text x="75.00" y="751.50"></text></g><g><title>i40e_asq_send_command (6 samples, 0.01%)</title><rect x="72" y="725" width="0" height="15" fill="rgb(241,86,45)"/><text x="75.00" y="735.50"></text></g><g><title>rte_delay_us_block (6 samples, 0.01%)</title><rect x="72" y="709" width="0" height="15" fill="rgb(226,88,36)"/><text x="75.00" y="719.50"></text></g><g><title>rte_pause (5 samples, 0.01%)</title><rect x="72" y="693" width="0" height="15" fill="rgb(205,23,53)"/><text x="75.00" y="703.50"></text></g><g><title>_mm_pause (5 samples, 0.01%)</title><rect x="72" y="677" width="0" height="15" fill="rgb(217,50,10)"/><text x="75.00" y="687.50"></text></g><g><title>i40e_dev_rxtx_init (8 samples, 0.02%)</title><rect x="72" y="853" width="0" height="15" fill="rgb(228,148,36)"/><text x="75.00" y="863.50"></text></g><g><title>i40e_dev_rx_init (8 samples, 0.02%)</title><rect x="72" y="837" width="0" height="15" fill="rgb(209,92,9)"/><text x="75.00" y="847.50"></text></g><g><title>i40e_pf_config_mq_rx (8 samples, 0.02%)</title><rect x="72" y="821" width="0" height="15" fill="rgb(221,72,49)"/><text x="75.00" y="831.50"></text></g><g><title>i40e_pf_config_rss (8 samples, 0.02%)</title><rect x="72" y="805" width="0" height="15" fill="rgb(247,10,21)"/><text x="75.00" y="815.50"></text></g><g><title>i40e_hw_rss_hash_set (8 samples, 0.02%)</title><rect x="72" y="789" width="0" height="15" fill="rgb(242,123,22)"/><text x="75.00" y="799.50"></text></g><g><title>i40e_dev_switch_rx_queues (16 samples, 0.03%)</title><rect x="72" y="837" width="1" height="15" fill="rgb(252,168,12)"/><text x="75.00" y="847.50"></text></g><g><title>i40e_dev_rx_queue_start (16 samples, 0.03%)</title><rect x="72" y="821" width="1" height="15" fill="rgb(213,140,31)"/><text x="75.00" y="831.50"></text></g><g><title>i40e_switch_rx_queue (16 samples, 0.03%)</title><rect x="72" y="805" width="1" height="15" fill="rgb(223,172,4)"/><text x="75.00" y="815.50"></text></g><g><title>rte_delay_us_block (16 samples, 0.03%)</title><rect x="72" y="789" width="1" height="15" fill="rgb(207,107,12)"/><text x="75.00" y="799.50"></text></g><g><title>rte_pause (14 samples, 0.03%)</title><rect x="72" y="773" width="1" height="15" fill="rgb(254,17,16)"/><text x="75.00" y="783.50"></text></g><g><title>_mm_pause (14 samples, 0.03%)</title><rect x="72" y="757" width="1" height="15" fill="rgb(228,220,15)"/><text x="75.00" y="767.50"></text></g><g><title>i40e_dev_start (73 samples, 0.15%)</title><rect x="71" y="869" width="2" height="15" fill="rgb(210,47,44)"/><text x="74.00" y="879.50"></text></g><g><title>i40e_dev_switch_queues (32 samples, 0.07%)</title><rect x="72" y="853" width="1" height="15" fill="rgb(216,225,42)"/><text x="75.00" y="863.50"></text></g><g><title>i40e_dev_switch_tx_queues (16 samples, 0.03%)</title><rect x="73" y="837" width="0" height="15" fill="rgb(222,2,43)"/><text x="76.00" y="847.50"></text></g><g><title>i40e_dev_tx_queue_start (16 samples, 0.03%)</title><rect x="73" y="821" width="0" height="15" fill="rgb(228,206,6)"/><text x="76.00" y="831.50"></text></g><g><title>i40e_switch_tx_queue (16 samples, 0.03%)</title><rect x="73" y="805" width="0" height="15" fill="rgb(231,6,5)"/><text x="76.00" y="815.50"></text></g><g><title>rte_delay_us_block (16 samples, 0.03%)</title><rect x="73" y="789" width="0" height="15" fill="rgb(243,92,41)"/><text x="76.00" y="799.50"></text></g><g><title>rte_pause (15 samples, 0.03%)</title><rect x="73" y="773" width="0" height="15" fill="rgb(238,205,29)"/><text x="76.00" y="783.50"></text></g><g><title>_mm_pause (15 samples, 0.03%)</title><rect x="73" y="757" width="0" height="15" fill="rgb(216,81,29)"/><text x="76.00" y="767.50"></text></g><g><title>rte_eth_dev_start (96 samples, 0.20%)</title><rect x="71" y="885" width="2" height="15" fill="rgb(214,106,21)"/><text x="74.00" y="895.50"></text></g><g><title>e2d2::interface::port::phy_port::PmdPort::new_dpdk_port (432 samples, 0.88%)</title><rect x="63" y="917" width="10" height="15" fill="rgb(244,12,2)"/><text x="66.00" y="927.50"></text></g><g><title>init_pmd_port (142 samples, 0.29%)</title><rect x="70" y="901" width="3" height="15" fill="rgb(235,218,4)"/><text x="73.00" y="911.50"></text></g><g><title>e2d2::scheduler::context::initialize_system (433 samples, 0.88%)</title><rect x="63" y="933" width="10" height="15" fill="rgb(250,177,38)"/><text x="66.00" y="943.50"></text></g><g><title>__libc_start_main (447 samples, 0.91%)</title><rect x="63" y="997" width="10" height="15" fill="rgb(207,162,14)"/><text x="66.00" y="1007.50"></text></g><g><title>main (447 samples, 0.91%)</title><rect x="63" y="981" width="10" height="15" fill="rgb(240,100,8)"/><text x="66.00" y="991.50"></text></g><g><title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::hc87de8565012a906 (446 samples, 0.91%)</title><rect x="63" y="965" width="10" height="15" fill="rgb(244,116,25)"/><text x="66.00" y="975.50"></text></g><g><title>pvn_tls::main (446 samples, 0.91%)</title><rect x="63" y="949" width="10" height="15" fill="rgb(234,170,12)"/><text x="66.00" y="959.50"></text></g><g><title>std::thread::sleep (5 samples, 0.01%)</title><rect x="73" y="933" width="0" height="15" fill="rgb(242,44,17)"/><text x="76.00" y="943.50"></text></g><g><title>std::sys::unix::thread::Thread::sleep (5 samples, 0.01%)</title><rect x="73" y="917" width="0" height="15" fill="rgb(213,0,20)"/><text x="76.00" y="927.50"></text></g><g><title>__GI___nanosleep (5 samples, 0.01%)</title><rect x="73" y="901" width="0" height="15" fill="rgb(233,50,36)"/><text x="76.00" y="911.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.01%)</title><rect x="73" y="885" width="0" height="15" fill="rgb(241,96,51)"/><text x="76.00" y="895.50"></text></g><g><title>do_syscall_64 (5 samples, 0.01%)</title><rect x="73" y="869" width="0" height="15" fill="rgb(219,157,5)"/><text x="76.00" y="879.50"></text></g><g><title>_start (448 samples, 0.91%)</title><rect x="63" y="1013" width="10" height="15" fill="rgb(219,21,13)"/><text x="66.00" y="1023.50"></text></g><g><title>pvn-tls (2,664 samples, 5.41%)</title><rect x="10" y="1029" width="64" height="15" fill="rgb(207,110,7)"/><text x="13.00" y="1039.50">pvn-tls</text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (122 samples, 0.25%)</title><rect x="74" y="1013" width="2" height="15" fill="rgb(223,222,9)"/><text x="77.00" y="1023.50"></text></g><g><title>[libzcsi.so] (119 samples, 0.24%)</title><rect x="76" y="1013" width="3" height="15" fill="rgb(242,217,26)"/><text x="79.00" y="1023.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (119 samples, 0.24%)</title><rect x="76" y="997" width="3" height="15" fill="rgb(230,127,30)"/><text x="79.00" y="1007.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (55 samples, 0.11%)</title><rect x="78" y="981" width="1" height="15" fill="rgb(250,88,40)"/><text x="81.00" y="991.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (55 samples, 0.11%)</title><rect x="78" y="965" width="1" height="15" fill="rgb(213,88,18)"/><text x="81.00" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (192 samples, 0.39%)</title><rect x="79" y="997" width="5" height="15" fill="rgb(224,205,12)"/><text x="82.00" y="1007.50"></text></g><g><title>e2d2::interface::port::&lt;impl e2d2::interface::PacketRx for e2d2::allocators::cache_aligned::CacheAligned&lt;T&gt;&gt;::recv (137 samples, 0.28%)</title><rect x="92" y="885" width="3" height="15" fill="rgb(238,43,53)"/><text x="95.00" y="895.50"></text></g><g><title>&lt;e2d2::interface::port::phy_port::PortQueue as e2d2::interface::PacketRx&gt;::recv (137 samples, 0.28%)</title><rect x="92" y="869" width="3" height="15" fill="rgb(228,146,21)"/><text x="95.00" y="879.50"></text></g><g><title>e2d2::interface::port::phy_port::PortQueue::recv_queue (137 samples, 0.28%)</title><rect x="92" y="853" width="3" height="15" fill="rgb(212,204,11)"/><text x="95.00" y="863.50"></text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (597 samples, 1.21%)</title><rect x="84" y="997" width="14" height="15" fill="rgb(207,146,54)"/><text x="87.00" y="1007.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (255 samples, 0.52%)</title><rect x="92" y="981" width="6" height="15" fill="rgb(208,210,28)"/><text x="95.00" y="991.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (255 samples, 0.52%)</title><rect x="92" y="965" width="6" height="15" fill="rgb(246,167,17)"/><text x="95.00" y="975.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (255 samples, 0.52%)</title><rect x="92" y="949" width="6" height="15" fill="rgb(247,133,3)"/><text x="95.00" y="959.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (255 samples, 0.52%)</title><rect x="92" y="933" width="6" height="15" fill="rgb(217,121,7)"/><text x="95.00" y="943.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (255 samples, 0.52%)</title><rect x="92" y="917" width="6" height="15" fill="rgb(252,178,32)"/><text x="95.00" y="927.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (255 samples, 0.52%)</title><rect x="92" y="901" width="6" height="15" fill="rgb(232,75,19)"/><text x="95.00" y="911.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (118 samples, 0.24%)</title><rect x="95" y="885" width="3" height="15" fill="rgb(231,48,13)"/><text x="98.00" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (118 samples, 0.24%)</title><rect x="95" y="869" width="3" height="15" fill="rgb(208,214,32)"/><text x="98.00" y="879.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (54 samples, 0.11%)</title><rect x="101" y="981" width="2" height="15" fill="rgb(217,83,42)"/><text x="104.00" y="991.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (54 samples, 0.11%)</title><rect x="101" y="965" width="2" height="15" fill="rgb(226,225,24)"/><text x="104.00" y="975.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (1,395 samples, 2.83%)</title><rect x="98" y="997" width="34" height="15" fill="rgb(237,79,43)"/><text x="101.00" y="1007.50">&lt;e..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (1,215 samples, 2.47%)</title><rect x="103" y="981" width="29" height="15" fill="rgb(206,25,40)"/><text x="106.00" y="991.50">&lt;e..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (1,215 samples, 2.47%)</title><rect x="103" y="965" width="29" height="15" fill="rgb(207,98,24)"/><text x="106.00" y="975.50">&lt;e..</text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (76 samples, 0.15%)</title><rect x="130" y="949" width="2" height="15" fill="rgb(231,196,41)"/><text x="133.00" y="959.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::act (76 samples, 0.15%)</title><rect x="130" y="933" width="2" height="15" fill="rgb(211,191,36)"/><text x="133.00" y="943.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (331 samples, 0.67%)</title><rect x="132" y="997" width="8" height="15" fill="rgb(250,81,21)"/><text x="135.00" y="1007.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (184 samples, 0.37%)</title><rect x="135" y="981" width="5" height="15" fill="rgb(233,212,44)"/><text x="138.00" y="991.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (184 samples, 0.37%)</title><rect x="135" y="965" width="5" height="15" fill="rgb(246,145,51)"/><text x="138.00" y="975.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (130 samples, 0.26%)</title><rect x="140" y="997" width="3" height="15" fill="rgb(225,184,21)"/><text x="143.00" y="1007.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (849 samples, 1.73%)</title><rect x="143" y="997" width="20" height="15" fill="rgb(244,139,44)"/><text x="146.00" y="1007.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (23 samples, 0.05%)</title><rect x="163" y="981" width="0" height="15" fill="rgb(253,85,22)"/><text x="166.00" y="991.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (23 samples, 0.05%)</title><rect x="163" y="965" width="0" height="15" fill="rgb(216,138,32)"/><text x="166.00" y="975.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (23 samples, 0.05%)</title><rect x="163" y="949" width="0" height="15" fill="rgb(206,122,51)"/><text x="166.00" y="959.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (23 samples, 0.05%)</title><rect x="163" y="933" width="0" height="15" fill="rgb(246,47,33)"/><text x="166.00" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (23 samples, 0.05%)</title><rect x="163" y="917" width="0" height="15" fill="rgb(211,104,39)"/><text x="166.00" y="927.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (120 samples, 0.24%)</title><rect x="176" y="965" width="3" height="15" fill="rgb(233,58,36)"/><text x="179.00" y="975.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (117 samples, 0.24%)</title><rect x="179" y="965" width="2" height="15" fill="rgb(242,186,19)"/><text x="182.00" y="975.50"></text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;::execute (1,168 samples, 2.37%)</title><rect x="163" y="997" width="28" height="15" fill="rgb(246,21,23)"/><text x="166.00" y="1007.50">&lt;..</text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::act (643 samples, 1.31%)</title><rect x="176" y="981" width="15" height="15" fill="rgb(232,4,47)"/><text x="179.00" y="991.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (406 samples, 0.83%)</title><rect x="181" y="965" width="10" height="15" fill="rgb(210,199,49)"/><text x="184.00" y="975.50"></text></g><g><title>__GI___pthread_mutex_lock (133 samples, 0.27%)</title><rect x="191" y="997" width="3" height="15" fill="rgb(232,112,26)"/><text x="194.00" y="1007.50"></text></g><g><title>i40e_recv_pkts_vec (451 samples, 0.92%)</title><rect x="194" y="997" width="11" height="15" fill="rgb(216,104,53)"/><text x="197.00" y="1007.50"></text></g><g><title>[unknown] (5,577 samples, 11.33%)</title><rect x="79" y="1013" width="134" height="15" fill="rgb(207,94,46)"/><text x="82.00" y="1023.50">[unknown]</text></g><g><title>recv_pkts (331 samples, 0.67%)</title><rect x="205" y="997" width="8" height="15" fill="rgb(219,68,52)"/><text x="208.00" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (231 samples, 0.47%)</title><rect x="241" y="693" width="5" height="15" fill="rgb(250,208,27)"/><text x="244.00" y="703.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (123 samples, 0.25%)</title><rect x="244" y="677" width="2" height="15" fill="rgb(220,148,12)"/><text x="247.00" y="687.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (123 samples, 0.25%)</title><rect x="244" y="661" width="2" height="15" fill="rgb(251,107,11)"/><text x="247.00" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (99 samples, 0.20%)</title><rect x="253" y="613" width="2" height="15" fill="rgb(212,222,13)"/><text x="256.00" y="623.50"></text></g><g><title>_$LT$e2d2..operators..receive_batch..ReceiveBatch$LT$T$GT$$u20$as$u20$e2d2..operators..act..Act$GT$::act::_$u7b$$u7b$closure$u7d$$u7d$::h04d16e535da9b6c3 (99 samples, 0.20%)</title><rect x="253" y="597" width="2" height="15" fill="rgb(240,101,5)"/><text x="256.00" y="607.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (115 samples, 0.23%)</title><rect x="255" y="597" width="3" height="15" fill="rgb(246,2,45)"/><text x="258.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (1,870 samples, 3.80%)</title><rect x="246" y="693" width="45" height="15" fill="rgb(216,118,29)"/><text x="249.00" y="703.50">&lt;e2d..</text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (1,739 samples, 3.53%)</title><rect x="250" y="677" width="41" height="15" fill="rgb(208,9,27)"/><text x="253.00" y="687.50">&lt;e2..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (1,739 samples, 3.53%)</title><rect x="250" y="661" width="41" height="15" fill="rgb(216,180,49)"/><text x="253.00" y="671.50">&lt;e2..</text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (1,612 samples, 3.28%)</title><rect x="253" y="645" width="38" height="15" fill="rgb(216,87,51)"/><text x="256.00" y="655.50">&lt;e2..</text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (1,612 samples, 3.28%)</title><rect x="253" y="629" width="38" height="15" fill="rgb(227,50,26)"/><text x="256.00" y="639.50">&lt;e2..</text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (1,513 samples, 3.07%)</title><rect x="255" y="613" width="36" height="15" fill="rgb(214,220,40)"/><text x="258.00" y="623.50">e2d..</text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (1,398 samples, 2.84%)</title><rect x="258" y="597" width="33" height="15" fill="rgb(246,14,13)"/><text x="261.00" y="607.50">e2..</text></g><g><title>e2d2::interface::port::&lt;impl e2d2::interface::PacketRx for e2d2::allocators::cache_aligned::CacheAligned&lt;T&gt;&gt;::recv (1,271 samples, 2.58%)</title><rect x="261" y="581" width="30" height="15" fill="rgb(211,112,40)"/><text x="264.00" y="591.50">e2..</text></g><g><title>&lt;e2d2::interface::port::phy_port::PortQueue as e2d2::interface::PacketRx&gt;::recv (1,271 samples, 2.58%)</title><rect x="261" y="565" width="30" height="15" fill="rgb(213,46,43)"/><text x="264.00" y="575.50">&lt;e..</text></g><g><title>e2d2::interface::port::phy_port::PortQueue::recv_queue (1,271 samples, 2.58%)</title><rect x="261" y="549" width="30" height="15" fill="rgb(245,25,24)"/><text x="264.00" y="559.50">e2..</text></g><g><title>recv_pkts (1,271 samples, 2.58%)</title><rect x="261" y="533" width="30" height="15" fill="rgb(223,50,32)"/><text x="264.00" y="543.50">re..</text></g><g><title>rte_eth_rx_burst (1,153 samples, 2.34%)</title><rect x="264" y="517" width="27" height="15" fill="rgb(216,126,36)"/><text x="267.00" y="527.50">r..</text></g><g><title>i40e_recv_pkts_vec (482 samples, 0.98%)</title><rect x="280" y="501" width="11" height="15" fill="rgb(233,54,0)"/><text x="283.00" y="511.50"></text></g><g><title>_recv_raw_pkts_vec (346 samples, 0.70%)</title><rect x="283" y="485" width="8" height="15" fill="rgb(237,153,39)"/><text x="286.00" y="495.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (526 samples, 1.07%)</title><rect x="318" y="629" width="12" height="15" fill="rgb(222,177,54)"/><text x="321.00" y="639.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (408 samples, 0.83%)</title><rect x="320" y="613" width="10" height="15" fill="rgb(254,177,8)"/><text x="323.00" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (45 samples, 0.09%)</title><rect x="334" y="533" width="1" height="15" fill="rgb(220,175,50)"/><text x="337.00" y="543.50"></text></g><g><title>_$LT$e2d2..operators..receive_batch..ReceiveBatch$LT$T$GT$$u20$as$u20$e2d2..operators..act..Act$GT$::act::_$u7b$$u7b$closure$u7d$$u7d$::h8d1298e4bf1f28cf (45 samples, 0.09%)</title><rect x="334" y="517" width="1" height="15" fill="rgb(210,193,9)"/><text x="337.00" y="527.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (83 samples, 0.17%)</title><rect x="336" y="517" width="2" height="15" fill="rgb(213,206,34)"/><text x="339.00" y="527.50"></text></g><g><title>core::cmp::min (62 samples, 0.13%)</title><rect x="338" y="469" width="2" height="15" fill="rgb(222,84,23)"/><text x="341.00" y="479.50"></text></g><g><title>core::cmp::Ord::min (62 samples, 0.13%)</title><rect x="338" y="453" width="2" height="15" fill="rgb(233,143,53)"/><text x="341.00" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::le (38 samples, 0.08%)</title><rect x="339" y="437" width="1" height="15" fill="rgb(212,24,1)"/><text x="342.00" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (14 samples, 0.03%)</title><rect x="340" y="469" width="0" height="15" fill="rgb(251,96,39)"/><text x="343.00" y="479.50"></text></g><g><title>&lt;e2d2::queues::mpsc_mbuf_queue::MpscConsumer as e2d2::interface::PacketRx&gt;::recv (103 samples, 0.21%)</title><rect x="338" y="501" width="2" height="15" fill="rgb(228,101,41)"/><text x="341.00" y="511.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::dequeue (103 samples, 0.21%)</title><rect x="338" y="485" width="2" height="15" fill="rgb(227,72,35)"/><text x="341.00" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (8 samples, 0.02%)</title><rect x="340" y="469" width="0" height="15" fill="rgb(236,212,25)"/><text x="343.00" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (8 samples, 0.02%)</title><rect x="340" y="453" width="0" height="15" fill="rgb(233,93,26)"/><text x="343.00" y="463.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::add_to_batch (76 samples, 0.15%)</title><rect x="340" y="501" width="2" height="15" fill="rgb(233,171,22)"/><text x="343.00" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (76 samples, 0.15%)</title><rect x="340" y="485" width="2" height="15" fill="rgb(236,2,25)"/><text x="343.00" y="495.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (453 samples, 0.92%)</title><rect x="333" y="565" width="11" height="15" fill="rgb(240,72,5)"/><text x="336.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (405 samples, 0.82%)</title><rect x="334" y="549" width="10" height="15" fill="rgb(209,165,26)"/><text x="337.00" y="559.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (360 samples, 0.73%)</title><rect x="335" y="533" width="9" height="15" fill="rgb(234,105,3)"/><text x="338.00" y="543.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (262 samples, 0.53%)</title><rect x="338" y="517" width="6" height="15" fill="rgb(214,28,54)"/><text x="341.00" y="527.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (78 samples, 0.16%)</title><rect x="342" y="501" width="2" height="15" fill="rgb(236,17,6)"/><text x="345.00" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (78 samples, 0.16%)</title><rect x="342" y="485" width="2" height="15" fill="rgb(241,177,51)"/><text x="345.00" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (54 samples, 0.11%)</title><rect x="342" y="469" width="2" height="15" fill="rgb(246,53,23)"/><text x="345.00" y="479.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (731 samples, 1.49%)</title><rect x="332" y="597" width="17" height="15" fill="rgb(226,59,0)"/><text x="335.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::act (731 samples, 1.49%)</title><rect x="332" y="581" width="17" height="15" fill="rgb(246,51,35)"/><text x="335.00" y="591.50"></text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (219 samples, 0.45%)</title><rect x="344" y="565" width="5" height="15" fill="rgb(205,78,31)"/><text x="347.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (219 samples, 0.45%)</title><rect x="344" y="549" width="5" height="15" fill="rgb(225,93,3)"/><text x="347.00" y="559.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (219 samples, 0.45%)</title><rect x="344" y="533" width="5" height="15" fill="rgb(219,126,25)"/><text x="347.00" y="543.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (219 samples, 0.45%)</title><rect x="344" y="517" width="5" height="15" fill="rgb(239,147,45)"/><text x="347.00" y="527.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (2,314 samples, 4.70%)</title><rect x="295" y="645" width="55" height="15" fill="rgb(206,189,42)"/><text x="298.00" y="655.50">&lt;e2d2..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (843 samples, 1.71%)</title><rect x="330" y="629" width="20" height="15" fill="rgb(224,71,50)"/><text x="333.00" y="639.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (843 samples, 1.71%)</title><rect x="330" y="613" width="20" height="15" fill="rgb(249,2,39)"/><text x="333.00" y="623.50"></text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (57 samples, 0.12%)</title><rect x="349" y="597" width="1" height="15" fill="rgb(229,102,42)"/><text x="352.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (57 samples, 0.12%)</title><rect x="349" y="581" width="1" height="15" fill="rgb(217,53,46)"/><text x="352.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (57 samples, 0.12%)</title><rect x="349" y="565" width="1" height="15" fill="rgb(228,161,6)"/><text x="352.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (57 samples, 0.12%)</title><rect x="349" y="549" width="1" height="15" fill="rgb(237,224,36)"/><text x="352.00" y="559.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (57 samples, 0.12%)</title><rect x="349" y="533" width="1" height="15" fill="rgb(216,73,31)"/><text x="352.00" y="543.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (57 samples, 0.12%)</title><rect x="349" y="517" width="1" height="15" fill="rgb(244,191,42)"/><text x="352.00" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (54 samples, 0.11%)</title><rect x="352" y="613" width="1" height="15" fill="rgb(253,77,29)"/><text x="355.00" y="623.50"></text></g><g><title>_$LT$e2d2..operators..receive_batch..ReceiveBatch$LT$T$GT$$u20$as$u20$e2d2..operators..act..Act$GT$::act::_$u7b$$u7b$closure$u7d$$u7d$::h8d1298e4bf1f28cf (54 samples, 0.11%)</title><rect x="352" y="597" width="1" height="15" fill="rgb(250,16,0)"/><text x="355.00" y="607.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (240 samples, 0.49%)</title><rect x="354" y="597" width="6" height="15" fill="rgb(210,205,31)"/><text x="357.00" y="607.50"></text></g><g><title>core::cmp::min (49 samples, 0.10%)</title><rect x="361" y="549" width="1" height="15" fill="rgb(227,55,5)"/><text x="364.00" y="559.50"></text></g><g><title>core::cmp::Ord::min (49 samples, 0.10%)</title><rect x="361" y="533" width="1" height="15" fill="rgb(227,169,28)"/><text x="364.00" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::le (30 samples, 0.06%)</title><rect x="361" y="517" width="1" height="15" fill="rgb(252,151,39)"/><text x="364.00" y="527.50"></text></g><g><title>&lt;e2d2::queues::mpsc_mbuf_queue::MpscConsumer as e2d2::interface::PacketRx&gt;::recv (101 samples, 0.21%)</title><rect x="361" y="581" width="2" height="15" fill="rgb(227,87,18)"/><text x="364.00" y="591.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::dequeue (101 samples, 0.21%)</title><rect x="361" y="565" width="2" height="15" fill="rgb(252,84,21)"/><text x="364.00" y="575.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (41 samples, 0.08%)</title><rect x="362" y="549" width="1" height="15" fill="rgb(225,166,29)"/><text x="365.00" y="559.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::add_to_batch (36 samples, 0.07%)</title><rect x="363" y="581" width="1" height="15" fill="rgb(208,92,15)"/><text x="366.00" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (36 samples, 0.07%)</title><rect x="363" y="565" width="1" height="15" fill="rgb(246,127,54)"/><text x="366.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (2,996 samples, 6.09%)</title><rect x="295" y="661" width="72" height="15" fill="rgb(254,229,31)"/><text x="298.00" y="671.50">&lt;e2d2::o..</text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (682 samples, 1.39%)</title><rect x="350" y="645" width="17" height="15" fill="rgb(219,152,28)"/><text x="353.00" y="655.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (616 samples, 1.25%)</title><rect x="352" y="629" width="15" height="15" fill="rgb(227,124,28)"/><text x="355.00" y="639.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (562 samples, 1.14%)</title><rect x="353" y="613" width="14" height="15" fill="rgb(253,185,29)"/><text x="356.00" y="623.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (301 samples, 0.61%)</title><rect x="360" y="597" width="7" height="15" fill="rgb(250,216,53)"/><text x="363.00" y="607.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (121 samples, 0.25%)</title><rect x="364" y="581" width="3" height="15" fill="rgb(211,50,22)"/><text x="367.00" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (121 samples, 0.25%)</title><rect x="364" y="565" width="3" height="15" fill="rgb(238,34,26)"/><text x="367.00" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (65 samples, 0.13%)</title><rect x="365" y="549" width="2" height="15" fill="rgb(230,74,15)"/><text x="368.00" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (108 samples, 0.22%)</title><rect x="375" y="613" width="3" height="15" fill="rgb(247,35,35)"/><text x="378.00" y="623.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (108 samples, 0.22%)</title><rect x="375" y="597" width="3" height="15" fill="rgb(229,171,32)"/><text x="378.00" y="607.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (108 samples, 0.22%)</title><rect x="375" y="581" width="3" height="15" fill="rgb(217,34,0)"/><text x="378.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (708 samples, 1.44%)</title><rect x="367" y="661" width="17" height="15" fill="rgb(231,138,13)"/><text x="370.00" y="671.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (595 samples, 1.21%)</title><rect x="369" y="645" width="15" height="15" fill="rgb(230,132,10)"/><text x="372.00" y="655.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (595 samples, 1.21%)</title><rect x="369" y="629" width="15" height="15" fill="rgb(250,173,0)"/><text x="372.00" y="639.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (236 samples, 0.48%)</title><rect x="378" y="613" width="6" height="15" fill="rgb(246,224,37)"/><text x="381.00" y="623.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (118 samples, 0.24%)</title><rect x="381" y="597" width="3" height="15" fill="rgb(223,67,42)"/><text x="384.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (118 samples, 0.24%)</title><rect x="381" y="581" width="3" height="15" fill="rgb(211,26,45)"/><text x="384.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (118 samples, 0.24%)</title><rect x="381" y="565" width="3" height="15" fill="rgb(211,173,40)"/><text x="384.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (18 samples, 0.04%)</title><rect x="383" y="549" width="1" height="15" fill="rgb(246,210,46)"/><text x="386.00" y="559.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::done (18 samples, 0.04%)</title><rect x="383" y="533" width="1" height="15" fill="rgb(238,22,25)"/><text x="386.00" y="543.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::done (15 samples, 0.03%)</title><rect x="383" y="517" width="1" height="15" fill="rgb(229,132,7)"/><text x="386.00" y="527.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (15 samples, 0.03%)</title><rect x="383" y="501" width="1" height="15" fill="rgb(234,144,20)"/><text x="386.00" y="511.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (15 samples, 0.03%)</title><rect x="383" y="485" width="1" height="15" fill="rgb(230,47,44)"/><text x="386.00" y="495.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::free_packet_batch (15 samples, 0.03%)</title><rect x="383" y="469" width="1" height="15" fill="rgb(213,210,24)"/><text x="386.00" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (20 samples, 0.04%)</title><rect x="388" y="597" width="1" height="15" fill="rgb(245,216,4)"/><text x="391.00" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (15 samples, 0.03%)</title><rect x="388" y="581" width="1" height="15" fill="rgb(213,143,5)"/><text x="391.00" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (15 samples, 0.03%)</title><rect x="388" y="565" width="1" height="15" fill="rgb(222,37,15)"/><text x="391.00" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (98 samples, 0.20%)</title><rect x="388" y="613" width="3" height="15" fill="rgb(235,74,16)"/><text x="391.00" y="623.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (78 samples, 0.16%)</title><rect x="389" y="597" width="2" height="15" fill="rgb(249,198,54)"/><text x="392.00" y="607.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (78 samples, 0.16%)</title><rect x="389" y="581" width="2" height="15" fill="rgb(208,50,2)"/><text x="392.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (1,356 samples, 2.76%)</title><rect x="384" y="661" width="32" height="15" fill="rgb(225,185,36)"/><text x="387.00" y="671.50">&lt;e..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (1,289 samples, 2.62%)</title><rect x="385" y="645" width="31" height="15" fill="rgb(221,178,54)"/><text x="388.00" y="655.50">&lt;e..</text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (1,286 samples, 2.61%)</title><rect x="385" y="629" width="31" height="15" fill="rgb(227,13,24)"/><text x="388.00" y="639.50">&lt;e..</text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (1,067 samples, 2.17%)</title><rect x="391" y="613" width="25" height="15" fill="rgb(219,178,10)"/><text x="394.00" y="623.50">&lt;..</text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;::execute (5,557 samples, 11.29%)</title><rect x="291" y="693" width="134" height="15" fill="rgb(209,66,22)"/><text x="294.00" y="703.50">&lt;e2d2::operators..</text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::act (5,406 samples, 10.99%)</title><rect x="295" y="677" width="130" height="15" fill="rgb(205,211,16)"/><text x="298.00" y="687.50">&lt;e2d2::operators..</text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::act::Act&gt;::send_q (346 samples, 0.70%)</title><rect x="416" y="661" width="9" height="15" fill="rgb(226,92,41)"/><text x="419.00" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (123 samples, 0.25%)</title><rect x="422" y="645" width="3" height="15" fill="rgb(223,71,9)"/><text x="425.00" y="655.50"></text></g><g><title>e2d2::utils::asm::rdtsc_unsafe (1,797 samples, 3.65%)</title><rect x="425" y="693" width="43" height="15" fill="rgb(244,101,12)"/><text x="428.00" y="703.50">e2d2..</text></g><g><title>core::ptr::real_drop_in_place (3,005 samples, 6.11%)</title><rect x="479" y="661" width="72" height="15" fill="rgb(238,34,8)"/><text x="482.00" y="671.50">core::pt..</text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,005 samples, 6.11%)</title><rect x="479" y="645" width="72" height="15" fill="rgb(221,170,29)"/><text x="482.00" y="655.50">&lt;std::sy..</text></g><g><title>std::sys_common::mutex::Mutex::raw_unlock (3,005 samples, 6.11%)</title><rect x="479" y="629" width="72" height="15" fill="rgb(226,19,13)"/><text x="482.00" y="639.50">std::sys..</text></g><g><title>std::sys::unix::mutex::Mutex::unlock (3,005 samples, 6.11%)</title><rect x="479" y="613" width="72" height="15" fill="rgb(240,38,12)"/><text x="482.00" y="623.50">std::sys..</text></g><g><title>__GI___pthread_mutex_unlock (3,005 samples, 6.11%)</title><rect x="479" y="597" width="72" height="15" fill="rgb(209,176,53)"/><text x="482.00" y="607.50">__GI___p..</text></g><g><title>__pthread_mutex_unlock_usercnt (2,788 samples, 5.67%)</title><rect x="484" y="581" width="67" height="15" fill="rgb(228,7,43)"/><text x="487.00" y="591.50">__pthre..</text></g><g><title>std::sys_common::poison::Flag::get (135 samples, 0.27%)</title><rect x="551" y="613" width="3" height="15" fill="rgb(223,212,26)"/><text x="554.00" y="623.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (135 samples, 0.27%)</title><rect x="551" y="597" width="3" height="15" fill="rgb(216,160,15)"/><text x="554.00" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (135 samples, 0.27%)</title><rect x="551" y="581" width="3" height="15" fill="rgb(228,209,42)"/><text x="554.00" y="591.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (268 samples, 0.54%)</title><rect x="551" y="645" width="6" height="15" fill="rgb(220,202,43)"/><text x="554.00" y="655.50"></text></g><g><title>std::sys_common::poison::Flag::borrow (268 samples, 0.54%)</title><rect x="551" y="629" width="6" height="15" fill="rgb(224,215,35)"/><text x="554.00" y="639.50"></text></g><g><title>std::thread::panicking (133 samples, 0.27%)</title><rect x="554" y="613" width="3" height="15" fill="rgb(238,46,39)"/><text x="557.00" y="623.50"></text></g><g><title>std::panicking::panicking (133 samples, 0.27%)</title><rect x="554" y="597" width="3" height="15" fill="rgb(222,178,6)"/><text x="557.00" y="607.50"></text></g><g><title>std::panicking::update_panic_count (133 samples, 0.27%)</title><rect x="554" y="581" width="3" height="15" fill="rgb(225,219,41)"/><text x="557.00" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (133 samples, 0.27%)</title><rect x="554" y="565" width="3" height="15" fill="rgb(235,174,50)"/><text x="557.00" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (133 samples, 0.27%)</title><rect x="554" y="549" width="3" height="15" fill="rgb(217,160,37)"/><text x="557.00" y="559.50"></text></g><g><title>std::panicking::update_panic_count::_$u7b$$u7b$closure$u7d$$u7d$::hdd6811239ad811d8 (133 samples, 0.27%)</title><rect x="554" y="533" width="3" height="15" fill="rgb(205,227,5)"/><text x="557.00" y="543.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (133 samples, 0.27%)</title><rect x="554" y="517" width="3" height="15" fill="rgb(227,8,10)"/><text x="557.00" y="527.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request (17,108 samples, 34.77%)</title><rect x="213" y="741" width="410" height="15" fill="rgb(239,129,21)"/><text x="216.00" y="751.50">e2d2::scheduler::standalone_scheduler::StandaloneSchedu..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_loop (17,108 samples, 34.77%)</title><rect x="213" y="725" width="410" height="15" fill="rgb(241,229,24)"/><text x="216.00" y="735.50">e2d2::scheduler::standalone_scheduler::StandaloneSchedu..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_internal (16,886 samples, 34.31%)</title><rect x="218" y="709" width="405" height="15" fill="rgb(245,20,44)"/><text x="221.00" y="719.50">e2d2::scheduler::standalone_scheduler::StandaloneSchedu..</text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (6,490 samples, 13.19%)</title><rect x="468" y="693" width="155" height="15" fill="rgb(213,206,7)"/><text x="471.00" y="703.50">std::sync::mpsc::Re..</text></g><g><title>std::sync::mpsc::sync::Packet&lt;T&gt;::try_recv (6,147 samples, 12.49%)</title><rect x="476" y="677" width="147" height="15" fill="rgb(226,195,8)"/><text x="479.00" y="687.50">std::sync::mpsc::s..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (3,029 samples, 6.16%)</title><rect x="551" y="661" width="72" height="15" fill="rgb(234,106,50)"/><text x="554.00" y="671.50">std::syn..</text></g><g><title>std::sys_common::mutex::Mutex::raw_lock (2,761 samples, 5.61%)</title><rect x="557" y="645" width="66" height="15" fill="rgb(217,155,54)"/><text x="560.00" y="655.50">std::sy..</text></g><g><title>std::sys::unix::mutex::Mutex::lock (2,761 samples, 5.61%)</title><rect x="557" y="629" width="66" height="15" fill="rgb(212,220,14)"/><text x="560.00" y="639.50">std::sy..</text></g><g><title>__GI___pthread_mutex_lock (2,761 samples, 5.61%)</title><rect x="557" y="613" width="66" height="15" fill="rgb(221,8,52)"/><text x="560.00" y="623.50">__GI___..</text></g><g><title>__GI___clone (17,115 samples, 34.78%)</title><rect x="213" y="1013" width="410" height="15" fill="rgb(235,102,2)"/><text x="216.00" y="1023.50">__GI___clone</text></g><g><title>start_thread (17,115 samples, 34.78%)</title><rect x="213" y="997" width="410" height="15" fill="rgb(234,74,37)"/><text x="216.00" y="1007.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (17,115 samples, 34.78%)</title><rect x="213" y="981" width="410" height="15" fill="rgb(245,150,21)"/><text x="216.00" y="991.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys_common::thread::start_thread (17,115 samples, 34.78%)</title><rect x="213" y="965" width="410" height="15" fill="rgb(226,106,53)"/><text x="216.00" y="975.50">std::sys_common::thread::start_thread</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (17,115 samples, 34.78%)</title><rect x="213" y="949" width="410" height="15" fill="rgb(211,31,23)"/><text x="216.00" y="959.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (17,115 samples, 34.78%)</title><rect x="213" y="933" width="410" height="15" fill="rgb(227,205,21)"/><text x="216.00" y="943.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;..</text></g><g><title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h85f59d60f147d050 (17,115 samples, 34.78%)</title><rect x="213" y="917" width="410" height="15" fill="rgb(237,70,3)"/><text x="216.00" y="927.50">core::ops::function::FnOnce::call_once$u7b$$u7b$vtable...</text></g><g><title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::hdf1901ae8223da03 (17,115 samples, 34.78%)</title><rect x="213" y="901" width="410" height="15" fill="rgb(218,47,19)"/><text x="216.00" y="911.50">std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closu..</text></g><g><title>std::panic::catch_unwind (17,115 samples, 34.78%)</title><rect x="213" y="885" width="410" height="15" fill="rgb(222,54,46)"/><text x="216.00" y="895.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (17,115 samples, 34.78%)</title><rect x="213" y="869" width="410" height="15" fill="rgb(219,154,39)"/><text x="216.00" y="879.50">std::panicking::try</text></g><g><title>__rust_maybe_catch_panic (17,115 samples, 34.78%)</title><rect x="213" y="853" width="410" height="15" fill="rgb(233,68,48)"/><text x="216.00" y="863.50">__rust_maybe_catch_panic</text></g><g><title>std::panicking::try::do_call (17,115 samples, 34.78%)</title><rect x="213" y="837" width="410" height="15" fill="rgb(232,161,47)"/><text x="216.00" y="847.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (17,115 samples, 34.78%)</title><rect x="213" y="821" width="410" height="15" fill="rgb(234,71,29)"/><text x="216.00" y="831.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function..</text></g><g><title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h4bd6a348999fe437 (17,115 samples, 34.78%)</title><rect x="213" y="805" width="410" height="15" fill="rgb(247,99,7)"/><text x="216.00" y="815.50">std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closu..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (17,115 samples, 34.78%)</title><rect x="213" y="789" width="410" height="15" fill="rgb(237,176,47)"/><text x="216.00" y="799.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>e2d2::scheduler::context::NetBricksContext::start_scheduler::_$u7b$$u7b$closure$u7d$$u7d$::h008d40440c8a9600 (17,115 samples, 34.78%)</title><rect x="213" y="773" width="410" height="15" fill="rgb(221,188,39)"/><text x="216.00" y="783.50">e2d2::scheduler::context::NetBricksContext::start_sched..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_requests (17,115 samples, 34.78%)</title><rect x="213" y="757" width="410" height="15" fill="rgb(218,211,35)"/><text x="216.00" y="767.50">e2d2::scheduler::standalone_scheduler::StandaloneSchedu..</text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (7 samples, 0.01%)</title><rect x="623" y="741" width="0" height="15" fill="rgb(237,79,21)"/><text x="626.00" y="751.50"></text></g><g><title>std::sync::mpsc::sync::Packet&lt;T&gt;::recv (7 samples, 0.01%)</title><rect x="623" y="725" width="0" height="15" fill="rgb(227,27,40)"/><text x="626.00" y="735.50"></text></g><g><title>std::sync::mpsc::sync::wait (7 samples, 0.01%)</title><rect x="623" y="709" width="0" height="15" fill="rgb(205,118,46)"/><text x="626.00" y="719.50"></text></g><g><title>std::sync::mpsc::blocking::WaitToken::wait (7 samples, 0.01%)</title><rect x="623" y="693" width="0" height="15" fill="rgb(249,23,50)"/><text x="626.00" y="703.50"></text></g><g><title>std::thread::park (7 samples, 0.01%)</title><rect x="623" y="677" width="0" height="15" fill="rgb(229,180,45)"/><text x="626.00" y="687.50"></text></g><g><title>std::sync::condvar::Condvar::wait (7 samples, 0.01%)</title><rect x="623" y="661" width="0" height="15" fill="rgb(230,35,1)"/><text x="626.00" y="671.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (7 samples, 0.01%)</title><rect x="623" y="645" width="0" height="15" fill="rgb(231,165,9)"/><text x="626.00" y="655.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (7 samples, 0.01%)</title><rect x="623" y="629" width="0" height="15" fill="rgb(253,17,29)"/><text x="626.00" y="639.50"></text></g><g><title>__pthread_cond_wait (7 samples, 0.01%)</title><rect x="623" y="613" width="0" height="15" fill="rgb(213,151,23)"/><text x="626.00" y="623.50"></text></g><g><title>__pthread_cond_wait_common (7 samples, 0.01%)</title><rect x="623" y="597" width="0" height="15" fill="rgb(218,128,18)"/><text x="626.00" y="607.50"></text></g><g><title>futex_wait_cancelable (7 samples, 0.01%)</title><rect x="623" y="581" width="0" height="15" fill="rgb(244,91,9)"/><text x="626.00" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.01%)</title><rect x="623" y="565" width="0" height="15" fill="rgb(245,198,22)"/><text x="626.00" y="575.50"></text></g><g><title>do_syscall_64 (7 samples, 0.01%)</title><rect x="623" y="549" width="0" height="15" fill="rgb(225,220,10)"/><text x="626.00" y="559.50"></text></g><g><title>sys_futex (7 samples, 0.01%)</title><rect x="623" y="533" width="0" height="15" fill="rgb(231,65,27)"/><text x="626.00" y="543.50"></text></g><g><title>do_futex (7 samples, 0.01%)</title><rect x="623" y="517" width="0" height="15" fill="rgb(209,125,44)"/><text x="626.00" y="527.50"></text></g><g><title>futex_wait (7 samples, 0.01%)</title><rect x="623" y="501" width="0" height="15" fill="rgb(224,4,1)"/><text x="626.00" y="511.50"></text></g><g><title>futex_wait_queue_me (7 samples, 0.01%)</title><rect x="623" y="485" width="0" height="15" fill="rgb(210,134,37)"/><text x="626.00" y="495.50"></text></g><g><title>schedule (7 samples, 0.01%)</title><rect x="623" y="469" width="0" height="15" fill="rgb(216,200,51)"/><text x="626.00" y="479.50"></text></g><g><title>__schedule (7 samples, 0.01%)</title><rect x="623" y="453" width="0" height="15" fill="rgb(225,99,26)"/><text x="626.00" y="463.50"></text></g><g><title>finish_task_switch (7 samples, 0.01%)</title><rect x="623" y="437" width="0" height="15" fill="rgb(214,114,9)"/><text x="626.00" y="447.50"></text></g><g><title>__perf_event_task_sched_in (7 samples, 0.01%)</title><rect x="623" y="421" width="0" height="15" fill="rgb(224,65,26)"/><text x="626.00" y="431.50"></text></g><g><title>x86_pmu_enable (7 samples, 0.01%)</title><rect x="623" y="405" width="0" height="15" fill="rgb(232,141,33)"/><text x="626.00" y="415.50"></text></g><g><title>intel_pmu_enable_all (7 samples, 0.01%)</title><rect x="623" y="389" width="0" height="15" fill="rgb(210,193,12)"/><text x="626.00" y="399.50"></text></g><g><title>__intel_pmu_enable_all.constprop.19 (7 samples, 0.01%)</title><rect x="623" y="373" width="0" height="15" fill="rgb(246,204,27)"/><text x="626.00" y="383.50"></text></g><g><title>core::ptr::real_drop_in_place (107 samples, 0.22%)</title><rect x="626" y="933" width="3" height="15" fill="rgb(226,219,33)"/><text x="629.00" y="943.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (107 samples, 0.22%)</title><rect x="626" y="917" width="3" height="15" fill="rgb(208,77,37)"/><text x="629.00" y="927.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_unlock (107 samples, 0.22%)</title><rect x="626" y="901" width="3" height="15" fill="rgb(210,159,19)"/><text x="629.00" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (107 samples, 0.22%)</title><rect x="626" y="885" width="3" height="15" fill="rgb(210,147,42)"/><text x="629.00" y="895.50"></text></g><g><title>sched-2 (23,268 samples, 47.28%)</title><rect x="74" y="1029" width="557" height="15" fill="rgb(210,130,34)"/><text x="77.00" y="1039.50">sched-2</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request (335 samples, 0.68%)</title><rect x="623" y="1013" width="8" height="15" fill="rgb(253,226,8)"/><text x="626.00" y="1023.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_loop (335 samples, 0.68%)</title><rect x="623" y="997" width="8" height="15" fill="rgb(252,166,36)"/><text x="626.00" y="1007.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_internal (335 samples, 0.68%)</title><rect x="623" y="981" width="8" height="15" fill="rgb(234,85,16)"/><text x="626.00" y="991.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (230 samples, 0.47%)</title><rect x="626" y="965" width="5" height="15" fill="rgb(238,169,47)"/><text x="629.00" y="975.50"></text></g><g><title>std::sync::mpsc::sync::Packet&lt;T&gt;::try_recv (230 samples, 0.47%)</title><rect x="626" y="949" width="5" height="15" fill="rgb(237,88,53)"/><text x="629.00" y="959.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (123 samples, 0.25%)</title><rect x="629" y="933" width="2" height="15" fill="rgb(229,41,26)"/><text x="632.00" y="943.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_lock (123 samples, 0.25%)</title><rect x="629" y="917" width="2" height="15" fill="rgb(212,118,49)"/><text x="632.00" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (123 samples, 0.25%)</title><rect x="629" y="901" width="2" height="15" fill="rgb(249,218,40)"/><text x="632.00" y="911.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="632" y="1013" width="0" height="15" fill="rgb(250,220,48)"/><text x="635.00" y="1023.50"></text></g><g><title>task_tick_fair (10 samples, 0.02%)</title><rect x="1187" y="341" width="0" height="15" fill="rgb(222,13,36)"/><text x="1190.00" y="351.50"></text></g><g><title>__hrtimer_run_queues (21 samples, 0.04%)</title><rect x="1186" y="421" width="1" height="15" fill="rgb(225,86,38)"/><text x="1189.00" y="431.50"></text></g><g><title>tick_sched_timer (20 samples, 0.04%)</title><rect x="1186" y="405" width="1" height="15" fill="rgb(244,44,37)"/><text x="1189.00" y="415.50"></text></g><g><title>tick_sched_handle (19 samples, 0.04%)</title><rect x="1186" y="389" width="1" height="15" fill="rgb(212,46,4)"/><text x="1189.00" y="399.50"></text></g><g><title>update_process_times (18 samples, 0.04%)</title><rect x="1186" y="373" width="1" height="15" fill="rgb(213,58,28)"/><text x="1189.00" y="383.50"></text></g><g><title>scheduler_tick (13 samples, 0.03%)</title><rect x="1187" y="357" width="0" height="15" fill="rgb(231,42,43)"/><text x="1190.00" y="367.50"></text></g><g><title>hrtimer_interrupt (30 samples, 0.06%)</title><rect x="1186" y="437" width="1" height="15" fill="rgb(205,76,39)"/><text x="1189.00" y="447.50"></text></g><g><title>tick_program_event (6 samples, 0.01%)</title><rect x="1187" y="421" width="0" height="15" fill="rgb(218,10,40)"/><text x="1190.00" y="431.50"></text></g><g><title>clockevents_program_event (6 samples, 0.01%)</title><rect x="1187" y="405" width="0" height="15" fill="rgb(231,122,24)"/><text x="1190.00" y="415.50"></text></g><g><title>lapic_next_deadline (5 samples, 0.01%)</title><rect x="1187" y="389" width="0" height="15" fill="rgb(246,117,1)"/><text x="1190.00" y="399.50"></text></g><g><title>apic_timer_interrupt (35 samples, 0.07%)</title><rect x="1186" y="469" width="1" height="15" fill="rgb(215,98,1)"/><text x="1189.00" y="479.50"></text></g><g><title>smp_apic_timer_interrupt (32 samples, 0.07%)</title><rect x="1186" y="453" width="1" height="15" fill="rgb(235,39,50)"/><text x="1189.00" y="463.50"></text></g><g><title>native_irq_return_iret (6 samples, 0.01%)</title><rect x="1187" y="469" width="0" height="15" fill="rgb(235,99,46)"/><text x="1190.00" y="479.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (12 samples, 0.02%)</title><rect x="1187" y="469" width="1" height="15" fill="rgb(233,95,14)"/><text x="1190.00" y="479.50"></text></g><g><title>prepare_exit_to_usermode (10 samples, 0.02%)</title><rect x="1187" y="453" width="1" height="15" fill="rgb(220,153,14)"/><text x="1190.00" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (7,664 samples, 15.57%)</title><rect x="1004" y="517" width="184" height="15" fill="rgb(230,204,11)"/><text x="1007.00" y="527.50">&lt;alloc::vec::Vec&lt;T&gt; as ..</text></g><g><title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (7,664 samples, 15.57%)</title><rect x="1004" y="501" width="184" height="15" fill="rgb(238,162,29)"/><text x="1007.00" y="511.50">core::slice::&lt;impl core..</text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (7,664 samples, 15.57%)</title><rect x="1004" y="485" width="184" height="15" fill="rgb(240,97,51)"/><text x="1007.00" y="495.50">&lt;usize as core::slice::..</text></g><g><title>hrtimer_interrupt (5 samples, 0.01%)</title><rect x="1188" y="485" width="0" height="15" fill="rgb(218,155,45)"/><text x="1191.00" y="495.50"></text></g><g><title>apic_timer_interrupt (8 samples, 0.02%)</title><rect x="1188" y="517" width="0" height="15" fill="rgb(221,170,44)"/><text x="1191.00" y="527.50"></text></g><g><title>smp_apic_timer_interrupt (7 samples, 0.01%)</title><rect x="1188" y="501" width="0" height="15" fill="rgb(236,181,54)"/><text x="1191.00" y="511.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (8 samples, 0.02%)</title><rect x="1188" y="517" width="0" height="15" fill="rgb(223,174,27)"/><text x="1191.00" y="527.50"></text></g><g><title>prepare_exit_to_usermode (5 samples, 0.01%)</title><rect x="1188" y="501" width="0" height="15" fill="rgb(236,131,18)"/><text x="1191.00" y="511.50"></text></g><g><title>e2d2::state::reordered_buffer::reordered_buffer::ReorderedBuffer::out_of_order_insert (23,189 samples, 47.12%)</title><rect x="632" y="565" width="556" height="15" fill="rgb(252,29,37)"/><text x="635.00" y="575.50">e2d2::state::reordered_buffer::reordered_buffer::ReorderedBuffer::out_of_ord..</text></g><g><title>e2d2::state::reordered_buffer::reordered_buffer::SegmentList::insert_segment (23,189 samples, 47.12%)</title><rect x="632" y="549" width="556" height="15" fill="rgb(208,144,45)"/><text x="635.00" y="559.50">e2d2::state::reordered_buffer::reordered_buffer::SegmentList::insert_segment</text></g><g><title>e2d2::state::reordered_buffer::reordered_buffer::SegmentList::merge_at_idx (23,189 samples, 47.12%)</title><rect x="632" y="533" width="556" height="15" fill="rgb(207,4,27)"/><text x="635.00" y="543.50">e2d2::state::reordered_buffer::reordered_buffer::SegmentList::merge_at_idx</text></g><g><title>select_task_rq_fair (5 samples, 0.01%)</title><rect x="1189" y="37" width="0" height="15" fill="rgb(246,222,19)"/><text x="1192.00" y="47.50"></text></g><g><title>pty_write (18 samples, 0.04%)</title><rect x="1188" y="149" width="1" height="15" fill="rgb(246,21,23)"/><text x="1191.00" y="159.50"></text></g><g><title>tty_flip_buffer_push (16 samples, 0.03%)</title><rect x="1188" y="133" width="1" height="15" fill="rgb(222,186,13)"/><text x="1191.00" y="143.50"></text></g><g><title>queue_work_on (16 samples, 0.03%)</title><rect x="1188" y="117" width="1" height="15" fill="rgb(241,13,9)"/><text x="1191.00" y="127.50"></text></g><g><title>__queue_work (16 samples, 0.03%)</title><rect x="1188" y="101" width="1" height="15" fill="rgb(215,77,52)"/><text x="1191.00" y="111.50"></text></g><g><title>insert_work (14 samples, 0.03%)</title><rect x="1189" y="85" width="0" height="15" fill="rgb(205,171,48)"/><text x="1192.00" y="95.50"></text></g><g><title>wake_up_process (11 samples, 0.02%)</title><rect x="1189" y="69" width="0" height="15" fill="rgb(226,159,9)"/><text x="1192.00" y="79.50"></text></g><g><title>try_to_wake_up (11 samples, 0.02%)</title><rect x="1189" y="53" width="0" height="15" fill="rgb(237,148,8)"/><text x="1192.00" y="63.50"></text></g><g><title>n_tty_write (21 samples, 0.04%)</title><rect x="1188" y="165" width="1" height="15" fill="rgb(253,142,49)"/><text x="1191.00" y="175.50"></text></g><g><title>__vfs_write (26 samples, 0.05%)</title><rect x="1188" y="197" width="1" height="15" fill="rgb(218,14,43)"/><text x="1191.00" y="207.50"></text></g><g><title>tty_write (26 samples, 0.05%)</title><rect x="1188" y="181" width="1" height="15" fill="rgb(224,32,23)"/><text x="1191.00" y="191.50"></text></g><g><title>do_syscall_64 (31 samples, 0.06%)</title><rect x="1188" y="245" width="1" height="15" fill="rgb(206,85,45)"/><text x="1191.00" y="255.50"></text></g><g><title>sys_write (29 samples, 0.06%)</title><rect x="1188" y="229" width="1" height="15" fill="rgb(214,30,41)"/><text x="1191.00" y="239.50"></text></g><g><title>vfs_write (29 samples, 0.06%)</title><rect x="1188" y="213" width="1" height="15" fill="rgb(214,144,29)"/><text x="1191.00" y="223.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (32 samples, 0.07%)</title><rect x="1188" y="261" width="1" height="15" fill="rgb(250,76,15)"/><text x="1191.00" y="271.50"></text></g><g><title>&lt;std::io::buffered::LineWriter&lt;W&gt; as std::io::Write&gt;::write (37 samples, 0.08%)</title><rect x="1188" y="405" width="1" height="15" fill="rgb(207,18,45)"/><text x="1191.00" y="415.50"></text></g><g><title>&lt;std::io::buffered::LineWriter&lt;W&gt; as std::io::Write&gt;::flush (37 samples, 0.08%)</title><rect x="1188" y="389" width="1" height="15" fill="rgb(222,72,2)"/><text x="1191.00" y="399.50"></text></g><g><title>&lt;std::io::buffered::BufWriter&lt;W&gt; as std::io::Write&gt;::flush (37 samples, 0.08%)</title><rect x="1188" y="373" width="1" height="15" fill="rgb(235,128,35)"/><text x="1191.00" y="383.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (37 samples, 0.08%)</title><rect x="1188" y="357" width="1" height="15" fill="rgb(218,145,7)"/><text x="1191.00" y="367.50"></text></g><g><title>&lt;std::io::stdio::Maybe&lt;W&gt; as std::io::Write&gt;::write (37 samples, 0.08%)</title><rect x="1188" y="341" width="1" height="15" fill="rgb(235,18,41)"/><text x="1191.00" y="351.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (37 samples, 0.08%)</title><rect x="1188" y="325" width="1" height="15" fill="rgb(247,143,27)"/><text x="1191.00" y="335.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (37 samples, 0.08%)</title><rect x="1188" y="309" width="1" height="15" fill="rgb(222,45,30)"/><text x="1191.00" y="319.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (37 samples, 0.08%)</title><rect x="1188" y="293" width="1" height="15" fill="rgb(221,46,7)"/><text x="1191.00" y="303.50"></text></g><g><title>__libc_write (37 samples, 0.08%)</title><rect x="1188" y="277" width="1" height="15" fill="rgb(250,225,40)"/><text x="1191.00" y="287.50"></text></g><g><title>std::io::Write::write_fmt (38 samples, 0.08%)</title><rect x="1188" y="485" width="1" height="15" fill="rgb(240,158,42)"/><text x="1191.00" y="495.50"></text></g><g><title>core::fmt::write (38 samples, 0.08%)</title><rect x="1188" y="469" width="1" height="15" fill="rgb(242,35,52)"/><text x="1191.00" y="479.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (38 samples, 0.08%)</title><rect x="1188" y="453" width="1" height="15" fill="rgb(217,82,23)"/><text x="1191.00" y="463.50"></text></g><g><title>std::io::Write::write_all (38 samples, 0.08%)</title><rect x="1188" y="437" width="1" height="15" fill="rgb(215,118,27)"/><text x="1191.00" y="447.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (38 samples, 0.08%)</title><rect x="1188" y="421" width="1" height="15" fill="rgb(241,38,1)"/><text x="1191.00" y="431.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (40 samples, 0.08%)</title><rect x="1188" y="501" width="1" height="15" fill="rgb(231,24,7)"/><text x="1191.00" y="511.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (23,239 samples, 47.22%)</title><rect x="632" y="661" width="557" height="15" fill="rgb(237,179,29)"/><text x="635.00" y="671.50">&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::ac..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (23,239 samples, 47.22%)</title><rect x="632" y="645" width="557" height="15" fill="rgb(214,44,46)"/><text x="635.00" y="655.50">&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act:..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (23,239 samples, 47.22%)</title><rect x="632" y="629" width="557" height="15" fill="rgb(222,6,27)"/><text x="635.00" y="639.50">&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act:..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (23,239 samples, 47.22%)</title><rect x="632" y="613" width="557" height="15" fill="rgb(247,162,48)"/><text x="635.00" y="623.50">&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::a..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut (23,239 samples, 47.22%)</title><rect x="632" y="597" width="557" height="15" fill="rgb(216,50,11)"/><text x="635.00" y="607.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut</text></g><g><title>pvn_tls::nf::lib::validator::_$u7b$$u7b$closure$u7d$$u7d$::h0de64372acadfb90 (23,239 samples, 47.22%)</title><rect x="632" y="581" width="557" height="15" fill="rgb(212,187,13)"/><text x="635.00" y="591.50">pvn_tls::nf::lib::validator::_$u7b$$u7b$closure$u7d$$u7d$::h0de64372acadfb90</text></g><g><title>std::io::stdio::_print (42 samples, 0.09%)</title><rect x="1188" y="565" width="1" height="15" fill="rgb(227,168,5)"/><text x="1191.00" y="575.50"></text></g><g><title>std::io::stdio::print_to (42 samples, 0.09%)</title><rect x="1188" y="549" width="1" height="15" fill="rgb(212,88,46)"/><text x="1191.00" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (42 samples, 0.09%)</title><rect x="1188" y="533" width="1" height="15" fill="rgb(206,173,43)"/><text x="1191.00" y="543.50"></text></g><g><title>std::io::stdio::print_to::_$u7b$$u7b$closure$u7d$$u7d$::h0249537fb9ef42b4 (42 samples, 0.09%)</title><rect x="1188" y="517" width="1" height="15" fill="rgb(230,8,35)"/><text x="1191.00" y="527.50"></text></g><g><title>__GI___clone (23,245 samples, 47.24%)</title><rect x="632" y="1013" width="557" height="15" fill="rgb(245,196,30)"/><text x="635.00" y="1023.50">__GI___clone</text></g><g><title>start_thread (23,245 samples, 47.24%)</title><rect x="632" y="997" width="557" height="15" fill="rgb(245,71,13)"/><text x="635.00" y="1007.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (23,245 samples, 47.24%)</title><rect x="632" y="981" width="557" height="15" fill="rgb(245,152,15)"/><text x="635.00" y="991.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys_common::thread::start_thread (23,245 samples, 47.24%)</title><rect x="632" y="965" width="557" height="15" fill="rgb(209,161,18)"/><text x="635.00" y="975.50">std::sys_common::thread::start_thread</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (23,245 samples, 47.24%)</title><rect x="632" y="949" width="557" height="15" fill="rgb(231,17,43)"/><text x="635.00" y="959.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (23,245 samples, 47.24%)</title><rect x="632" y="933" width="557" height="15" fill="rgb(207,117,31)"/><text x="635.00" y="943.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h85f59d60f147d050 (23,245 samples, 47.24%)</title><rect x="632" y="917" width="557" height="15" fill="rgb(208,128,11)"/><text x="635.00" y="927.50">core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h85f5..</text></g><g><title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::hdf1901ae8223da03 (23,245 samples, 47.24%)</title><rect x="632" y="901" width="557" height="15" fill="rgb(249,210,0)"/><text x="635.00" y="911.50">std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::hdf1901..</text></g><g><title>std::panic::catch_unwind (23,245 samples, 47.24%)</title><rect x="632" y="885" width="557" height="15" fill="rgb(237,43,54)"/><text x="635.00" y="895.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (23,245 samples, 47.24%)</title><rect x="632" y="869" width="557" height="15" fill="rgb(216,199,10)"/><text x="635.00" y="879.50">std::panicking::try</text></g><g><title>__rust_maybe_catch_panic (23,245 samples, 47.24%)</title><rect x="632" y="853" width="557" height="15" fill="rgb(253,50,36)"/><text x="635.00" y="863.50">__rust_maybe_catch_panic</text></g><g><title>std::panicking::try::do_call (23,245 samples, 47.24%)</title><rect x="632" y="837" width="557" height="15" fill="rgb(218,119,54)"/><text x="635.00" y="847.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (23,245 samples, 47.24%)</title><rect x="632" y="821" width="557" height="15" fill="rgb(210,209,45)"/><text x="635.00" y="831.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;</text></g><g><title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h4bd6a348999fe437 (23,245 samples, 47.24%)</title><rect x="632" y="805" width="557" height="15" fill="rgb(222,194,10)"/><text x="635.00" y="815.50">std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (23,245 samples, 47.24%)</title><rect x="632" y="789" width="557" height="15" fill="rgb(237,203,24)"/><text x="635.00" y="799.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>e2d2::scheduler::context::NetBricksContext::start_scheduler::_$u7b$$u7b$closure$u7d$$u7d$::h008d40440c8a9600 (23,245 samples, 47.24%)</title><rect x="632" y="773" width="557" height="15" fill="rgb(231,161,48)"/><text x="635.00" y="783.50">e2d2::scheduler::context::NetBricksContext::start_scheduler::_$u7b$$u7b$clos..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_requests (23,245 samples, 47.24%)</title><rect x="632" y="757" width="557" height="15" fill="rgb(220,184,42)"/><text x="635.00" y="767.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_requests</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request (23,245 samples, 47.24%)</title><rect x="632" y="741" width="557" height="15" fill="rgb(236,110,37)"/><text x="635.00" y="751.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_loop (23,245 samples, 47.24%)</title><rect x="632" y="725" width="557" height="15" fill="rgb(251,193,4)"/><text x="635.00" y="735.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_loop</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_internal (23,245 samples, 47.24%)</title><rect x="632" y="709" width="557" height="15" fill="rgb(241,183,27)"/><text x="635.00" y="719.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_internal</text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;::execute (23,241 samples, 47.23%)</title><rect x="632" y="693" width="557" height="15" fill="rgb(213,64,31)"/><text x="635.00" y="703.50">&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executab..</text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::act (23,241 samples, 47.23%)</title><rect x="632" y="677" width="557" height="15" fill="rgb(218,32,40)"/><text x="635.00" y="687.50">&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act..</text></g><g><title>sched-3 (23,262 samples, 47.27%)</title><rect x="631" y="1029" width="558" height="15" fill="rgb(249,48,49)"/><text x="634.00" y="1039.50">sched-3</text></g><g><title>__pthread_setaffinity_new (7 samples, 0.01%)</title><rect x="1189" y="709" width="0" height="15" fill="rgb(239,160,32)"/><text x="1192.00" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.01%)</title><rect x="1189" y="693" width="0" height="15" fill="rgb(250,108,44)"/><text x="1192.00" y="703.50"></text></g><g><title>do_syscall_64 (7 samples, 0.01%)</title><rect x="1189" y="677" width="0" height="15" fill="rgb(251,118,5)"/><text x="1192.00" y="687.50"></text></g><g><title>sys_sched_setaffinity (7 samples, 0.01%)</title><rect x="1189" y="661" width="0" height="15" fill="rgb(251,180,41)"/><text x="1192.00" y="671.50"></text></g><g><title>sched_setaffinity (7 samples, 0.01%)</title><rect x="1189" y="645" width="0" height="15" fill="rgb(213,70,44)"/><text x="1192.00" y="655.50"></text></g><g><title>__set_cpus_allowed_ptr (7 samples, 0.01%)</title><rect x="1189" y="629" width="0" height="15" fill="rgb(213,131,1)"/><text x="1192.00" y="639.50"></text></g><g><title>stop_one_cpu (7 samples, 0.01%)</title><rect x="1189" y="613" width="0" height="15" fill="rgb(226,43,2)"/><text x="1192.00" y="623.50"></text></g><g><title>_cond_resched (7 samples, 0.01%)</title><rect x="1189" y="597" width="0" height="15" fill="rgb(218,122,24)"/><text x="1192.00" y="607.50"></text></g><g><title>__schedule (7 samples, 0.01%)</title><rect x="1189" y="581" width="0" height="15" fill="rgb(233,212,17)"/><text x="1192.00" y="591.50"></text></g><g><title>finish_task_switch (7 samples, 0.01%)</title><rect x="1189" y="565" width="0" height="15" fill="rgb(221,37,29)"/><text x="1192.00" y="575.50"></text></g><g><title>__perf_event_task_sched_in (7 samples, 0.01%)</title><rect x="1189" y="549" width="0" height="15" fill="rgb(205,130,39)"/><text x="1192.00" y="559.50"></text></g><g><title>x86_pmu_enable (7 samples, 0.01%)</title><rect x="1189" y="533" width="0" height="15" fill="rgb(225,83,9)"/><text x="1192.00" y="543.50"></text></g><g><title>intel_pmu_enable_all (7 samples, 0.01%)</title><rect x="1189" y="517" width="0" height="15" fill="rgb(213,19,1)"/><text x="1192.00" y="527.50"></text></g><g><title>__intel_pmu_enable_all.constprop.19 (7 samples, 0.01%)</title><rect x="1189" y="501" width="0" height="15" fill="rgb(236,150,0)"/><text x="1192.00" y="511.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.02%)</title><rect x="1189" y="885" width="0" height="15" fill="rgb(208,60,36)"/><text x="1192.00" y="895.50"></text></g><g><title>std::panicking::try (8 samples, 0.02%)</title><rect x="1189" y="869" width="0" height="15" fill="rgb(209,21,9)"/><text x="1192.00" y="879.50"></text></g><g><title>__rust_maybe_catch_panic (8 samples, 0.02%)</title><rect x="1189" y="853" width="0" height="15" fill="rgb(242,3,44)"/><text x="1192.00" y="863.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.02%)</title><rect x="1189" y="837" width="0" height="15" fill="rgb(207,3,11)"/><text x="1192.00" y="847.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (8 samples, 0.02%)</title><rect x="1189" y="821" width="0" height="15" fill="rgb(213,34,30)"/><text x="1192.00" y="831.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h4bd6a348999fe437 (8 samples, 0.02%)</title><rect x="1189" y="805" width="0" height="15" fill="rgb(238,127,18)"/><text x="1192.00" y="815.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (8 samples, 0.02%)</title><rect x="1189" y="789" width="0" height="15" fill="rgb(222,83,13)"/><text x="1192.00" y="799.50"></text></g><g><title>e2d2::scheduler::context::NetBricksContext::start_scheduler::_$u7b$$u7b$closure$u7d$$u7d$::h008d40440c8a9600 (8 samples, 0.02%)</title><rect x="1189" y="773" width="0" height="15" fill="rgb(211,195,22)"/><text x="1192.00" y="783.50"></text></g><g><title>e2d2::interface::dpdk::init_thread (8 samples, 0.02%)</title><rect x="1189" y="757" width="0" height="15" fill="rgb(223,68,49)"/><text x="1192.00" y="767.50"></text></g><g><title>init_thread (8 samples, 0.02%)</title><rect x="1189" y="741" width="0" height="15" fill="rgb(239,18,19)"/><text x="1192.00" y="751.50"></text></g><g><title>rte_thread_set_affinity (8 samples, 0.02%)</title><rect x="1189" y="725" width="0" height="15" fill="rgb(208,111,50)"/><text x="1192.00" y="735.50"></text></g><g><title>all (49,210 samples, 100%)</title><rect x="10" y="1045" width="1180" height="15" fill="rgb(222,180,47)"/><text x="13.00" y="1055.50"></text></g><g><title>sched-4 (9 samples, 0.02%)</title><rect x="1189" y="1029" width="1" height="15" fill="rgb(227,16,52)"/><text x="1192.00" y="1039.50"></text></g><g><title>__GI___clone (9 samples, 0.02%)</title><rect x="1189" y="1013" width="1" height="15" fill="rgb(217,6,47)"/><text x="1192.00" y="1023.50"></text></g><g><title>start_thread (9 samples, 0.02%)</title><rect x="1189" y="997" width="1" height="15" fill="rgb(208,8,30)"/><text x="1192.00" y="1007.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (9 samples, 0.02%)</title><rect x="1189" y="981" width="1" height="15" fill="rgb(228,118,16)"/><text x="1192.00" y="991.50"></text></g><g><title>std::sys_common::thread::start_thread (9 samples, 0.02%)</title><rect x="1189" y="965" width="1" height="15" fill="rgb(238,28,9)"/><text x="1192.00" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (9 samples, 0.02%)</title><rect x="1189" y="949" width="1" height="15" fill="rgb(212,82,36)"/><text x="1192.00" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (9 samples, 0.02%)</title><rect x="1189" y="933" width="1" height="15" fill="rgb(254,120,46)"/><text x="1192.00" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h85f59d60f147d050 (9 samples, 0.02%)</title><rect x="1189" y="917" width="1" height="15" fill="rgb(254,97,16)"/><text x="1192.00" y="927.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::hdf1901ae8223da03 (9 samples, 0.02%)</title><rect x="1189" y="901" width="1" height="15" fill="rgb(243,81,9)"/><text x="1192.00" y="911.50"></text></g></g></svg>