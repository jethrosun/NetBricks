<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="966" fill="url(#background)"/><text id="title" x="600.00" y="24.00">Flame Graph</text><text id="details" x="10.00" y="949.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="949.00"> </text><g id="frames"><g><title>e2d2::interface::port::phy_port::PmdPort::new_dpdk_port (35 samples, 0.01%)</title><rect x="10" y="805" width="0" height="15" fill="rgb(227,127,27)"/><text x="13.00" y="815.50"></text></g><g><title>init_pmd_port (35 samples, 0.01%)</title><rect x="10" y="789" width="0" height="15" fill="rgb(224,168,2)"/><text x="13.00" y="799.50"></text></g><g><title>rte_eth_dev_start (35 samples, 0.01%)</title><rect x="10" y="773" width="0" height="15" fill="rgb(249,145,30)"/><text x="13.00" y="783.50"></text></g><g><title>i40e_dev_start (35 samples, 0.01%)</title><rect x="10" y="757" width="0" height="15" fill="rgb(228,94,25)"/><text x="13.00" y="767.50"></text></g><g><title>i40e_apply_link_speed (35 samples, 0.01%)</title><rect x="10" y="741" width="0" height="15" fill="rgb(227,81,11)"/><text x="13.00" y="751.50"></text></g><g><title>i40e_phy_conf_link (35 samples, 0.01%)</title><rect x="10" y="725" width="0" height="15" fill="rgb(217,160,53)"/><text x="13.00" y="735.50"></text></g><g><title>i40e_aq_get_phy_capabilities (35 samples, 0.01%)</title><rect x="10" y="709" width="0" height="15" fill="rgb(254,128,29)"/><text x="13.00" y="719.50"></text></g><g><title>i40e_asq_send_command (35 samples, 0.01%)</title><rect x="10" y="693" width="0" height="15" fill="rgb(234,13,23)"/><text x="13.00" y="703.50"></text></g><g><title>rte_delay_us_block (35 samples, 0.01%)</title><rect x="10" y="677" width="0" height="15" fill="rgb(209,198,45)"/><text x="13.00" y="687.50"></text></g><g><title>rte_pause (31 samples, 0.01%)</title><rect x="10" y="661" width="0" height="15" fill="rgb(223,84,3)"/><text x="13.00" y="671.50"></text></g><g><title>_mm_pause (31 samples, 0.01%)</title><rect x="10" y="645" width="0" height="15" fill="rgb(209,20,7)"/><text x="13.00" y="655.50"></text></g><g><title>main (42 samples, 0.02%)</title><rect x="10" y="869" width="0" height="15" fill="rgb(239,134,33)"/><text x="13.00" y="879.50"></text></g><g><title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::hc87de8565012a906 (42 samples, 0.02%)</title><rect x="10" y="853" width="0" height="15" fill="rgb(254,218,41)"/><text x="13.00" y="863.50"></text></g><g><title>pvn_tls::main (42 samples, 0.02%)</title><rect x="10" y="837" width="0" height="15" fill="rgb(239,89,54)"/><text x="13.00" y="847.50"></text></g><g><title>e2d2::scheduler::context::initialize_system (42 samples, 0.02%)</title><rect x="10" y="821" width="0" height="15" fill="rgb(228,116,21)"/><text x="13.00" y="831.50"></text></g><g><title>clear_huge_page (60 samples, 0.02%)</title><rect x="10" y="549" width="0" height="15" fill="rgb(229,122,2)"/><text x="13.00" y="559.50"></text></g><g><title>pvn_tls::main (2,139 samples, 0.80%)</title><rect x="10" y="869" width="9" height="15" fill="rgb(229,200,26)"/><text x="13.00" y="879.50"></text></g><g><title>e2d2::scheduler::context::initialize_system (2,139 samples, 0.80%)</title><rect x="10" y="853" width="9" height="15" fill="rgb(239,70,36)"/><text x="13.00" y="863.50"></text></g><g><title>init_system_whitelisted (2,139 samples, 0.80%)</title><rect x="10" y="837" width="9" height="15" fill="rgb(242,100,5)"/><text x="13.00" y="847.50"></text></g><g><title>init_eal (2,139 samples, 0.80%)</title><rect x="10" y="821" width="9" height="15" fill="rgb(214,13,45)"/><text x="13.00" y="831.50"></text></g><g><title>rte_eal_init (2,139 samples, 0.80%)</title><rect x="10" y="805" width="9" height="15" fill="rgb(241,13,37)"/><text x="13.00" y="815.50"></text></g><g><title>rte_eal_memory_init (2,139 samples, 0.80%)</title><rect x="10" y="789" width="9" height="15" fill="rgb(236,197,49)"/><text x="13.00" y="799.50"></text></g><g><title>rte_eal_hugepage_init (2,139 samples, 0.80%)</title><rect x="10" y="773" width="9" height="15" fill="rgb(218,117,50)"/><text x="13.00" y="783.50"></text></g><g><title>map_all_hugepages (2,139 samples, 0.80%)</title><rect x="10" y="757" width="9" height="15" fill="rgb(205,61,14)"/><text x="13.00" y="767.50"></text></g><g><title>__GI___mmap64 (2,139 samples, 0.80%)</title><rect x="10" y="741" width="9" height="15" fill="rgb(216,171,3)"/><text x="13.00" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,139 samples, 0.80%)</title><rect x="10" y="725" width="9" height="15" fill="rgb(230,207,2)"/><text x="13.00" y="735.50"></text></g><g><title>do_syscall_64 (2,139 samples, 0.80%)</title><rect x="10" y="709" width="9" height="15" fill="rgb(241,214,37)"/><text x="13.00" y="719.50"></text></g><g><title>sys_mmap (2,139 samples, 0.80%)</title><rect x="10" y="693" width="9" height="15" fill="rgb(236,78,49)"/><text x="13.00" y="703.50"></text></g><g><title>sys_mmap_pgoff (2,139 samples, 0.80%)</title><rect x="10" y="677" width="9" height="15" fill="rgb(248,185,54)"/><text x="13.00" y="687.50"></text></g><g><title>vm_mmap_pgoff (2,139 samples, 0.80%)</title><rect x="10" y="661" width="9" height="15" fill="rgb(240,47,45)"/><text x="13.00" y="671.50"></text></g><g><title>__mm_populate (2,139 samples, 0.80%)</title><rect x="10" y="645" width="9" height="15" fill="rgb(247,127,37)"/><text x="13.00" y="655.50"></text></g><g><title>populate_vma_page_range (2,139 samples, 0.80%)</title><rect x="10" y="629" width="9" height="15" fill="rgb(211,83,5)"/><text x="13.00" y="639.50"></text></g><g><title>__get_user_pages (2,139 samples, 0.80%)</title><rect x="10" y="613" width="9" height="15" fill="rgb(213,195,4)"/><text x="13.00" y="623.50"></text></g><g><title>follow_hugetlb_page (2,139 samples, 0.80%)</title><rect x="10" y="597" width="9" height="15" fill="rgb(207,108,14)"/><text x="13.00" y="607.50"></text></g><g><title>hugetlb_fault (2,119 samples, 0.80%)</title><rect x="10" y="581" width="9" height="15" fill="rgb(249,100,23)"/><text x="13.00" y="591.50"></text></g><g><title>hugetlb_no_page (2,119 samples, 0.80%)</title><rect x="10" y="565" width="9" height="15" fill="rgb(230,220,17)"/><text x="13.00" y="575.50"></text></g><g><title>clear_page_erms (2,037 samples, 0.76%)</title><rect x="10" y="549" width="9" height="15" fill="rgb(207,179,7)"/><text x="13.00" y="559.50"></text></g><g><title>[unknown] (2,220 samples, 0.83%)</title><rect x="10" y="885" width="9" height="15" fill="rgb(221,157,42)"/><text x="13.00" y="895.50"></text></g><g><title>i40e_dev_sync_phy_type (57 samples, 0.02%)</title><rect x="20" y="645" width="0" height="15" fill="rgb(242,118,38)"/><text x="23.00" y="655.50"></text></g><g><title>i40e_aq_get_phy_capabilities (57 samples, 0.02%)</title><rect x="20" y="629" width="0" height="15" fill="rgb(227,20,37)"/><text x="23.00" y="639.50"></text></g><g><title>i40e_asq_send_command (36 samples, 0.01%)</title><rect x="20" y="613" width="0" height="15" fill="rgb(236,114,1)"/><text x="23.00" y="623.50"></text></g><g><title>rte_delay_us_block (36 samples, 0.01%)</title><rect x="20" y="597" width="0" height="15" fill="rgb(222,37,24)"/><text x="23.00" y="607.50"></text></g><g><title>rte_pause (34 samples, 0.01%)</title><rect x="20" y="581" width="0" height="15" fill="rgb(231,136,50)"/><text x="23.00" y="591.50"></text></g><g><title>_mm_pause (34 samples, 0.01%)</title><rect x="20" y="565" width="0" height="15" fill="rgb(238,63,27)"/><text x="23.00" y="575.50"></text></g><g><title>i40e_pf_reset (77 samples, 0.03%)</title><rect x="20" y="645" width="0" height="15" fill="rgb(214,31,48)"/><text x="23.00" y="655.50"></text></g><g><title>rte_delay_us_block (77 samples, 0.03%)</title><rect x="20" y="629" width="0" height="15" fill="rgb(240,156,5)"/><text x="23.00" y="639.50"></text></g><g><title>rte_pause (71 samples, 0.03%)</title><rect x="20" y="613" width="0" height="15" fill="rgb(251,108,45)"/><text x="23.00" y="623.50"></text></g><g><title>_mm_pause (71 samples, 0.03%)</title><rect x="20" y="597" width="0" height="15" fill="rgb(226,156,13)"/><text x="23.00" y="607.50"></text></g><g><title>i40e_update_flow_control (27 samples, 0.01%)</title><rect x="20" y="629" width="0" height="15" fill="rgb(247,134,22)"/><text x="23.00" y="639.50"></text></g><g><title>i40e_aq_get_link_info (27 samples, 0.01%)</title><rect x="20" y="613" width="0" height="15" fill="rgb(231,46,18)"/><text x="23.00" y="623.50"></text></g><g><title>i40e_asq_send_command (27 samples, 0.01%)</title><rect x="20" y="597" width="0" height="15" fill="rgb(213,97,9)"/><text x="23.00" y="607.50"></text></g><g><title>rte_delay_us_block (27 samples, 0.01%)</title><rect x="20" y="581" width="0" height="15" fill="rgb(226,132,19)"/><text x="23.00" y="591.50"></text></g><g><title>rte_pause (23 samples, 0.01%)</title><rect x="20" y="565" width="0" height="15" fill="rgb(220,74,47)"/><text x="23.00" y="575.50"></text></g><g><title>_mm_pause (23 samples, 0.01%)</title><rect x="20" y="549" width="0" height="15" fill="rgb(242,213,7)"/><text x="23.00" y="559.50"></text></g><g><title>i40e_pf_setup (37 samples, 0.01%)</title><rect x="20" y="645" width="0" height="15" fill="rgb(246,121,48)"/><text x="23.00" y="655.50"></text></g><g><title>i40e_aq_get_phy_capabilities (36 samples, 0.01%)</title><rect x="20" y="629" width="1" height="15" fill="rgb(231,131,22)"/><text x="23.00" y="639.50"></text></g><g><title>i40e_asq_send_command (36 samples, 0.01%)</title><rect x="20" y="613" width="1" height="15" fill="rgb(243,203,46)"/><text x="23.00" y="623.50"></text></g><g><title>rte_delay_us_block (36 samples, 0.01%)</title><rect x="20" y="597" width="1" height="15" fill="rgb(247,65,49)"/><text x="23.00" y="607.50"></text></g><g><title>rte_pause (29 samples, 0.01%)</title><rect x="20" y="581" width="1" height="15" fill="rgb(221,201,36)"/><text x="23.00" y="591.50"></text></g><g><title>_mm_pause (29 samples, 0.01%)</title><rect x="20" y="565" width="1" height="15" fill="rgb(217,13,10)"/><text x="23.00" y="575.50"></text></g><g><title>i40e_set_fc (92 samples, 0.03%)</title><rect x="20" y="645" width="1" height="15" fill="rgb(218,38,24)"/><text x="23.00" y="655.50"></text></g><g><title>i40e_update_link_info (56 samples, 0.02%)</title><rect x="21" y="629" width="0" height="15" fill="rgb(225,65,26)"/><text x="24.00" y="639.50"></text></g><g><title>i40e_aq_get_phy_capabilities (36 samples, 0.01%)</title><rect x="21" y="613" width="0" height="15" fill="rgb(221,10,9)"/><text x="24.00" y="623.50"></text></g><g><title>i40e_asq_send_command (36 samples, 0.01%)</title><rect x="21" y="597" width="0" height="15" fill="rgb(237,161,23)"/><text x="24.00" y="607.50"></text></g><g><title>rte_delay_us_block (36 samples, 0.01%)</title><rect x="21" y="581" width="0" height="15" fill="rgb(236,69,37)"/><text x="24.00" y="591.50"></text></g><g><title>rte_pause (31 samples, 0.01%)</title><rect x="21" y="565" width="0" height="15" fill="rgb(245,92,17)"/><text x="24.00" y="575.50"></text></g><g><title>_mm_pause (31 samples, 0.01%)</title><rect x="21" y="549" width="0" height="15" fill="rgb(247,89,6)"/><text x="24.00" y="559.50"></text></g><g><title>attach_pmd_device (302 samples, 0.11%)</title><rect x="19" y="773" width="2" height="15" fill="rgb(250,8,32)"/><text x="22.00" y="783.50"></text></g><g><title>rte_eth_dev_attach (302 samples, 0.11%)</title><rect x="19" y="757" width="2" height="15" fill="rgb(218,177,11)"/><text x="22.00" y="767.50"></text></g><g><title>rte_eal_hotplug_add (302 samples, 0.11%)</title><rect x="19" y="741" width="2" height="15" fill="rgb(224,104,9)"/><text x="22.00" y="751.50"></text></g><g><title>pci_probe_all_drivers (302 samples, 0.11%)</title><rect x="19" y="725" width="2" height="15" fill="rgb(218,104,28)"/><text x="22.00" y="735.50"></text></g><g><title>rte_pci_probe_one_driver (302 samples, 0.11%)</title><rect x="19" y="709" width="2" height="15" fill="rgb(230,42,42)"/><text x="22.00" y="719.50"></text></g><g><title>eth_i40e_pci_probe (302 samples, 0.11%)</title><rect x="19" y="693" width="2" height="15" fill="rgb(222,181,50)"/><text x="22.00" y="703.50"></text></g><g><title>rte_eth_dev_pci_generic_probe (302 samples, 0.11%)</title><rect x="19" y="677" width="2" height="15" fill="rgb(207,165,27)"/><text x="22.00" y="687.50"></text></g><g><title>eth_i40e_dev_init (302 samples, 0.11%)</title><rect x="19" y="661" width="2" height="15" fill="rgb(251,178,27)"/><text x="22.00" y="671.50"></text></g><g><title>rte_eth_dev_configure (43 samples, 0.02%)</title><rect x="21" y="757" width="0" height="15" fill="rgb(218,17,44)"/><text x="24.00" y="767.50"></text></g><g><title>i40e_dev_configure (43 samples, 0.02%)</title><rect x="21" y="741" width="0" height="15" fill="rgb(229,175,46)"/><text x="24.00" y="751.50"></text></g><g><title>i40e_dev_sync_phy_type (35 samples, 0.01%)</title><rect x="21" y="725" width="0" height="15" fill="rgb(208,204,1)"/><text x="24.00" y="735.50"></text></g><g><title>i40e_aq_get_phy_capabilities (35 samples, 0.01%)</title><rect x="21" y="709" width="0" height="15" fill="rgb(225,75,41)"/><text x="24.00" y="719.50"></text></g><g><title>i40e_asq_send_command (35 samples, 0.01%)</title><rect x="21" y="693" width="0" height="15" fill="rgb(211,169,1)"/><text x="24.00" y="703.50"></text></g><g><title>rte_delay_us_block (35 samples, 0.01%)</title><rect x="21" y="677" width="0" height="15" fill="rgb(249,160,46)"/><text x="24.00" y="687.50"></text></g><g><title>rte_pause (29 samples, 0.01%)</title><rect x="21" y="661" width="0" height="15" fill="rgb(232,128,23)"/><text x="24.00" y="671.50"></text></g><g><title>_mm_pause (29 samples, 0.01%)</title><rect x="21" y="645" width="0" height="15" fill="rgb(229,182,22)"/><text x="24.00" y="655.50"></text></g><g><title>i40e_dev_start (61 samples, 0.02%)</title><rect x="21" y="741" width="0" height="15" fill="rgb(221,1,36)"/><text x="24.00" y="751.50"></text></g><g><title>i40e_dev_switch_queues (32 samples, 0.01%)</title><rect x="21" y="725" width="0" height="15" fill="rgb(228,56,42)"/><text x="24.00" y="735.50"></text></g><g><title>rte_eth_dev_start (83 samples, 0.03%)</title><rect x="21" y="757" width="0" height="15" fill="rgb(230,139,27)"/><text x="24.00" y="767.50"></text></g><g><title>e2d2::scheduler::context::initialize_system (430 samples, 0.16%)</title><rect x="19" y="805" width="2" height="15" fill="rgb(231,28,26)"/><text x="22.00" y="815.50"></text></g><g><title>e2d2::interface::port::phy_port::PmdPort::new_dpdk_port (430 samples, 0.16%)</title><rect x="19" y="789" width="2" height="15" fill="rgb(244,92,12)"/><text x="22.00" y="799.50"></text></g><g><title>init_pmd_port (128 samples, 0.05%)</title><rect x="21" y="773" width="0" height="15" fill="rgb(240,108,44)"/><text x="24.00" y="783.50"></text></g><g><title>_start (447 samples, 0.17%)</title><rect x="19" y="885" width="2" height="15" fill="rgb(241,163,26)"/><text x="22.00" y="895.50"></text></g><g><title>__libc_start_main (447 samples, 0.17%)</title><rect x="19" y="869" width="2" height="15" fill="rgb(205,204,23)"/><text x="22.00" y="879.50"></text></g><g><title>main (447 samples, 0.17%)</title><rect x="19" y="853" width="2" height="15" fill="rgb(235,52,22)"/><text x="22.00" y="863.50"></text></g><g><title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::hc87de8565012a906 (447 samples, 0.17%)</title><rect x="19" y="837" width="2" height="15" fill="rgb(225,196,38)"/><text x="22.00" y="847.50"></text></g><g><title>pvn_tls::main (447 samples, 0.17%)</title><rect x="19" y="821" width="2" height="15" fill="rgb(220,90,46)"/><text x="22.00" y="831.50"></text></g><g><title>pvn-tls (2,690 samples, 1.01%)</title><rect x="10" y="901" width="11" height="15" fill="rgb(234,109,3)"/><text x="13.00" y="911.50"></text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (648 samples, 0.24%)</title><rect x="21" y="885" width="3" height="15" fill="rgb(206,16,5)"/><text x="24.00" y="895.50"></text></g><g><title>[libzcsi.so] (672 samples, 0.25%)</title><rect x="24" y="885" width="3" height="15" fill="rgb(238,126,24)"/><text x="27.00" y="895.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (672 samples, 0.25%)</title><rect x="24" y="869" width="3" height="15" fill="rgb(206,111,46)"/><text x="27.00" y="879.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (341 samples, 0.13%)</title><rect x="26" y="853" width="1" height="15" fill="rgb(225,161,40)"/><text x="29.00" y="863.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (341 samples, 0.13%)</title><rect x="26" y="837" width="1" height="15" fill="rgb(213,191,47)"/><text x="29.00" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2,040 samples, 0.77%)</title><rect x="27" y="869" width="9" height="15" fill="rgb(209,183,52)"/><text x="30.00" y="879.50"></text></g><g><title>e2d2::interface::port::&lt;impl e2d2::interface::PacketRx for e2d2::allocators::cache_aligned::CacheAligned&lt;T&gt;&gt;::recv (638 samples, 0.24%)</title><rect x="45" y="757" width="2" height="15" fill="rgb(228,88,31)"/><text x="48.00" y="767.50"></text></g><g><title>&lt;e2d2::interface::port::phy_port::PortQueue as e2d2::interface::PacketRx&gt;::recv (638 samples, 0.24%)</title><rect x="45" y="741" width="2" height="15" fill="rgb(220,193,36)"/><text x="48.00" y="751.50"></text></g><g><title>e2d2::interface::port::phy_port::PortQueue::recv_queue (638 samples, 0.24%)</title><rect x="45" y="725" width="2" height="15" fill="rgb(242,110,22)"/><text x="48.00" y="735.50"></text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (3,169 samples, 1.19%)</title><rect x="36" y="869" width="14" height="15" fill="rgb(219,46,13)"/><text x="39.00" y="879.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (1,299 samples, 0.49%)</title><rect x="45" y="853" width="5" height="15" fill="rgb(251,78,29)"/><text x="48.00" y="863.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (1,299 samples, 0.49%)</title><rect x="45" y="837" width="5" height="15" fill="rgb(231,194,4)"/><text x="48.00" y="847.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (1,299 samples, 0.49%)</title><rect x="45" y="821" width="5" height="15" fill="rgb(209,179,8)"/><text x="48.00" y="831.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (1,299 samples, 0.49%)</title><rect x="45" y="805" width="5" height="15" fill="rgb(251,98,35)"/><text x="48.00" y="815.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (1,299 samples, 0.49%)</title><rect x="45" y="789" width="5" height="15" fill="rgb(254,44,18)"/><text x="48.00" y="799.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (1,299 samples, 0.49%)</title><rect x="45" y="773" width="5" height="15" fill="rgb(210,68,37)"/><text x="48.00" y="783.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (661 samples, 0.25%)</title><rect x="47" y="757" width="3" height="15" fill="rgb(250,124,8)"/><text x="50.00" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (661 samples, 0.25%)</title><rect x="47" y="741" width="3" height="15" fill="rgb(249,192,9)"/><text x="50.00" y="751.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (9,588 samples, 3.60%)</title><rect x="50" y="869" width="43" height="15" fill="rgb(238,97,20)"/><text x="53.00" y="879.50">&lt;e2d..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (8,896 samples, 3.34%)</title><rect x="53" y="853" width="40" height="15" fill="rgb(236,177,8)"/><text x="56.00" y="863.50">&lt;e2..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (8,896 samples, 3.34%)</title><rect x="53" y="837" width="40" height="15" fill="rgb(225,106,16)"/><text x="56.00" y="847.50">&lt;e2..</text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (572 samples, 0.21%)</title><rect x="90" y="821" width="3" height="15" fill="rgb(209,205,27)"/><text x="93.00" y="831.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::act (572 samples, 0.21%)</title><rect x="90" y="805" width="3" height="15" fill="rgb(242,22,50)"/><text x="93.00" y="815.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (849 samples, 0.32%)</title><rect x="96" y="853" width="3" height="15" fill="rgb(237,44,50)"/><text x="99.00" y="863.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (849 samples, 0.32%)</title><rect x="96" y="837" width="3" height="15" fill="rgb(220,117,10)"/><text x="99.00" y="847.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (1,492 samples, 0.56%)</title><rect x="93" y="869" width="6" height="15" fill="rgb(207,49,1)"/><text x="96.00" y="879.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (620 samples, 0.23%)</title><rect x="99" y="869" width="3" height="15" fill="rgb(211,45,6)"/><text x="102.00" y="879.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (5,267 samples, 1.98%)</title><rect x="102" y="869" width="24" height="15" fill="rgb(218,144,7)"/><text x="105.00" y="879.50">&lt;..</text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (555 samples, 0.21%)</title><rect x="123" y="853" width="3" height="15" fill="rgb(221,135,33)"/><text x="126.00" y="863.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (555 samples, 0.21%)</title><rect x="123" y="837" width="3" height="15" fill="rgb(252,90,13)"/><text x="126.00" y="847.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (555 samples, 0.21%)</title><rect x="123" y="821" width="3" height="15" fill="rgb(218,182,23)"/><text x="126.00" y="831.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (555 samples, 0.21%)</title><rect x="123" y="805" width="3" height="15" fill="rgb(211,189,43)"/><text x="126.00" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (555 samples, 0.21%)</title><rect x="123" y="789" width="3" height="15" fill="rgb(239,143,17)"/><text x="126.00" y="799.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (690 samples, 0.26%)</title><rect x="137" y="837" width="3" height="15" fill="rgb(227,140,27)"/><text x="140.00" y="847.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (651 samples, 0.24%)</title><rect x="140" y="837" width="3" height="15" fill="rgb(205,4,0)"/><text x="143.00" y="847.50"></text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;::execute (6,607 samples, 2.48%)</title><rect x="126" y="869" width="29" height="15" fill="rgb(229,71,24)"/><text x="129.00" y="879.50">&lt;e..</text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::act (3,965 samples, 1.49%)</title><rect x="137" y="853" width="18" height="15" fill="rgb(223,38,46)"/><text x="140.00" y="863.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (2,624 samples, 0.98%)</title><rect x="143" y="837" width="12" height="15" fill="rgb(242,85,39)"/><text x="146.00" y="847.50"></text></g><g><title>__GI___pthread_mutex_lock (650 samples, 0.24%)</title><rect x="155" y="869" width="3" height="15" fill="rgb(236,49,23)"/><text x="158.00" y="879.50"></text></g><g><title>i40e_recv_pkts_vec (2,519 samples, 0.95%)</title><rect x="158" y="869" width="11" height="15" fill="rgb(251,224,53)"/><text x="161.00" y="879.50"></text></g><g><title>[unknown] (33,970 samples, 12.75%)</title><rect x="27" y="885" width="151" height="15" fill="rgb(206,211,35)"/><text x="30.00" y="895.50">[unknown]</text></g><g><title>recv_pkts (2,018 samples, 0.76%)</title><rect x="169" y="869" width="9" height="15" fill="rgb(241,102,43)"/><text x="172.00" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1,237 samples, 0.46%)</title><rect x="205" y="677" width="5" height="15" fill="rgb(244,218,24)"/><text x="208.00" y="687.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (611 samples, 0.23%)</title><rect x="208" y="661" width="2" height="15" fill="rgb(254,102,13)"/><text x="211.00" y="671.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (611 samples, 0.23%)</title><rect x="208" y="645" width="2" height="15" fill="rgb(208,175,7)"/><text x="211.00" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (588 samples, 0.22%)</title><rect x="216" y="597" width="3" height="15" fill="rgb(227,217,23)"/><text x="219.00" y="607.50"></text></g><g><title>_$LT$e2d2..operators..receive_batch..ReceiveBatch$LT$T$GT$$u20$as$u20$e2d2..operators..act..Act$GT$::act::_$u7b$$u7b$closure$u7d$$u7d$::h04d16e535da9b6c3 (588 samples, 0.22%)</title><rect x="216" y="581" width="3" height="15" fill="rgb(218,67,32)"/><text x="219.00" y="591.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (583 samples, 0.22%)</title><rect x="219" y="581" width="2" height="15" fill="rgb(242,162,45)"/><text x="222.00" y="591.50"></text></g><g><title>e2d2::interface::port::&lt;impl e2d2::interface::PacketRx for e2d2::allocators::cache_aligned::CacheAligned&lt;T&gt;&gt;::recv (6,929 samples, 2.60%)</title><rect x="224" y="565" width="31" height="15" fill="rgb(224,42,4)"/><text x="227.00" y="575.50">e2..</text></g><g><title>&lt;e2d2::interface::port::phy_port::PortQueue as e2d2::interface::PacketRx&gt;::recv (6,929 samples, 2.60%)</title><rect x="224" y="549" width="31" height="15" fill="rgb(216,86,19)"/><text x="227.00" y="559.50">&lt;e..</text></g><g><title>e2d2::interface::port::phy_port::PortQueue::recv_queue (6,929 samples, 2.60%)</title><rect x="224" y="533" width="31" height="15" fill="rgb(225,168,24)"/><text x="227.00" y="543.50">e2..</text></g><g><title>recv_pkts (6,927 samples, 2.60%)</title><rect x="224" y="517" width="31" height="15" fill="rgb(253,25,5)"/><text x="227.00" y="527.50">re..</text></g><g><title>rte_eth_rx_burst (6,269 samples, 2.35%)</title><rect x="227" y="501" width="28" height="15" fill="rgb(246,143,42)"/><text x="230.00" y="511.50">r..</text></g><g><title>i40e_recv_pkts_vec (2,558 samples, 0.96%)</title><rect x="243" y="485" width="12" height="15" fill="rgb(224,213,48)"/><text x="246.00" y="495.50"></text></g><g><title>_recv_raw_pkts_vec (1,901 samples, 0.71%)</title><rect x="246" y="469" width="9" height="15" fill="rgb(218,87,9)"/><text x="249.00" y="479.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (9,416 samples, 3.53%)</title><rect x="213" y="661" width="42" height="15" fill="rgb(239,121,11)"/><text x="216.00" y="671.50">&lt;e2..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (9,416 samples, 3.53%)</title><rect x="213" y="645" width="42" height="15" fill="rgb(219,164,43)"/><text x="216.00" y="655.50">&lt;e2..</text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (8,767 samples, 3.29%)</title><rect x="216" y="629" width="39" height="15" fill="rgb(237,178,1)"/><text x="219.00" y="639.50">&lt;e2..</text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (8,767 samples, 3.29%)</title><rect x="216" y="613" width="39" height="15" fill="rgb(232,199,41)"/><text x="219.00" y="623.50">&lt;e2..</text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (8,179 samples, 3.07%)</title><rect x="219" y="597" width="36" height="15" fill="rgb(214,188,12)"/><text x="222.00" y="607.50">e2d..</text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (7,596 samples, 2.85%)</title><rect x="221" y="581" width="34" height="15" fill="rgb(208,128,4)"/><text x="224.00" y="591.50">e2..</text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (10,086 samples, 3.79%)</title><rect x="210" y="677" width="45" height="15" fill="rgb(218,117,45)"/><text x="213.00" y="687.50">&lt;e2d..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (29 samples, 0.01%)</title><rect x="283" y="597" width="0" height="15" fill="rgb(241,129,5)"/><text x="286.00" y="607.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (28 samples, 0.01%)</title><rect x="283" y="581" width="0" height="15" fill="rgb(249,3,0)"/><text x="286.00" y="591.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (28 samples, 0.01%)</title><rect x="283" y="565" width="0" height="15" fill="rgb(246,39,15)"/><text x="286.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (3,653 samples, 1.37%)</title><rect x="280" y="613" width="16" height="15" fill="rgb(229,178,1)"/><text x="283.00" y="623.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (3,009 samples, 1.13%)</title><rect x="283" y="597" width="13" height="15" fill="rgb(226,220,20)"/><text x="286.00" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (289 samples, 0.11%)</title><rect x="300" y="517" width="1" height="15" fill="rgb(223,40,42)"/><text x="303.00" y="527.50"></text></g><g><title>_$LT$e2d2..operators..receive_batch..ReceiveBatch$LT$T$GT$$u20$as$u20$e2d2..operators..act..Act$GT$::act::_$u7b$$u7b$closure$u7d$$u7d$::h8d1298e4bf1f28cf (289 samples, 0.11%)</title><rect x="300" y="501" width="1" height="15" fill="rgb(254,1,5)"/><text x="303.00" y="511.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (687 samples, 0.26%)</title><rect x="301" y="501" width="3" height="15" fill="rgb(230,69,10)"/><text x="304.00" y="511.50"></text></g><g><title>core::cmp::min (385 samples, 0.14%)</title><rect x="305" y="453" width="1" height="15" fill="rgb(226,164,15)"/><text x="308.00" y="463.50"></text></g><g><title>core::cmp::Ord::min (385 samples, 0.14%)</title><rect x="305" y="437" width="1" height="15" fill="rgb(247,13,37)"/><text x="308.00" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::le (267 samples, 0.10%)</title><rect x="305" y="421" width="1" height="15" fill="rgb(237,126,13)"/><text x="308.00" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (63 samples, 0.02%)</title><rect x="306" y="453" width="1" height="15" fill="rgb(240,161,29)"/><text x="309.00" y="463.50"></text></g><g><title>&lt;e2d2::queues::mpsc_mbuf_queue::MpscConsumer as e2d2::interface::PacketRx&gt;::recv (559 samples, 0.21%)</title><rect x="304" y="485" width="3" height="15" fill="rgb(230,34,43)"/><text x="307.00" y="495.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::dequeue (559 samples, 0.21%)</title><rect x="304" y="469" width="3" height="15" fill="rgb(246,94,19)"/><text x="307.00" y="479.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::add_to_batch (478 samples, 0.18%)</title><rect x="307" y="485" width="2" height="15" fill="rgb(206,169,23)"/><text x="310.00" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (478 samples, 0.18%)</title><rect x="307" y="469" width="2" height="15" fill="rgb(249,84,27)"/><text x="310.00" y="479.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (2,395 samples, 0.90%)</title><rect x="300" y="533" width="11" height="15" fill="rgb(205,208,39)"/><text x="303.00" y="543.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (2,106 samples, 0.79%)</title><rect x="301" y="517" width="10" height="15" fill="rgb(224,71,24)"/><text x="304.00" y="527.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (1,412 samples, 0.53%)</title><rect x="304" y="501" width="7" height="15" fill="rgb(207,22,41)"/><text x="307.00" y="511.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (363 samples, 0.14%)</title><rect x="309" y="485" width="2" height="15" fill="rgb(207,149,5)"/><text x="312.00" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (363 samples, 0.14%)</title><rect x="309" y="469" width="2" height="15" fill="rgb(248,25,14)"/><text x="312.00" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (234 samples, 0.09%)</title><rect x="309" y="453" width="2" height="15" fill="rgb(239,139,32)"/><text x="312.00" y="463.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (2,756 samples, 1.03%)</title><rect x="298" y="549" width="13" height="15" fill="rgb(237,66,26)"/><text x="301.00" y="559.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (4,513 samples, 1.69%)</title><rect x="297" y="581" width="20" height="15" fill="rgb(207,144,5)"/><text x="300.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::act (4,513 samples, 1.69%)</title><rect x="297" y="565" width="20" height="15" fill="rgb(219,51,28)"/><text x="300.00" y="575.50"></text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (1,448 samples, 0.54%)</title><rect x="311" y="549" width="6" height="15" fill="rgb(227,229,28)"/><text x="314.00" y="559.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (1,448 samples, 0.54%)</title><rect x="311" y="533" width="6" height="15" fill="rgb(254,156,5)"/><text x="314.00" y="543.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (1,448 samples, 0.54%)</title><rect x="311" y="517" width="6" height="15" fill="rgb(229,154,38)"/><text x="314.00" y="527.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (1,448 samples, 0.54%)</title><rect x="311" y="501" width="6" height="15" fill="rgb(224,105,2)"/><text x="314.00" y="511.50"></text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (325 samples, 0.12%)</title><rect x="317" y="581" width="1" height="15" fill="rgb(221,18,6)"/><text x="320.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (325 samples, 0.12%)</title><rect x="317" y="565" width="1" height="15" fill="rgb(217,127,21)"/><text x="320.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (325 samples, 0.12%)</title><rect x="317" y="549" width="1" height="15" fill="rgb(210,94,7)"/><text x="320.00" y="559.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (325 samples, 0.12%)</title><rect x="317" y="533" width="1" height="15" fill="rgb(217,186,51)"/><text x="320.00" y="543.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (325 samples, 0.12%)</title><rect x="317" y="517" width="1" height="15" fill="rgb(246,154,23)"/><text x="320.00" y="527.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (325 samples, 0.12%)</title><rect x="317" y="501" width="1" height="15" fill="rgb(227,147,28)"/><text x="320.00" y="511.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (5,060 samples, 1.90%)</title><rect x="296" y="613" width="22" height="15" fill="rgb(239,173,24)"/><text x="299.00" y="623.50">&lt;..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (5,060 samples, 1.90%)</title><rect x="296" y="597" width="22" height="15" fill="rgb(212,122,14)"/><text x="299.00" y="607.50">&lt;..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (13,729 samples, 5.15%)</title><rect x="258" y="629" width="60" height="15" fill="rgb(221,224,30)"/><text x="261.00" y="639.50">&lt;e2d2:..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (335 samples, 0.13%)</title><rect x="320" y="597" width="1" height="15" fill="rgb(235,111,52)"/><text x="323.00" y="607.50"></text></g><g><title>_$LT$e2d2..operators..receive_batch..ReceiveBatch$LT$T$GT$$u20$as$u20$e2d2..operators..act..Act$GT$::act::_$u7b$$u7b$closure$u7d$$u7d$::h8d1298e4bf1f28cf (335 samples, 0.13%)</title><rect x="320" y="581" width="1" height="15" fill="rgb(224,9,45)"/><text x="323.00" y="591.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (1,037 samples, 0.39%)</title><rect x="321" y="581" width="5" height="15" fill="rgb(227,73,54)"/><text x="324.00" y="591.50"></text></g><g><title>core::cmp::min (588 samples, 0.22%)</title><rect x="326" y="533" width="2" height="15" fill="rgb(252,166,37)"/><text x="329.00" y="543.50"></text></g><g><title>core::cmp::Ord::min (588 samples, 0.22%)</title><rect x="326" y="517" width="2" height="15" fill="rgb(213,182,47)"/><text x="329.00" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::le (267 samples, 0.10%)</title><rect x="327" y="501" width="1" height="15" fill="rgb(239,147,37)"/><text x="330.00" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (161 samples, 0.06%)</title><rect x="328" y="533" width="1" height="15" fill="rgb(210,118,29)"/><text x="331.00" y="543.50"></text></g><g><title>&lt;e2d2::queues::mpsc_mbuf_queue::MpscConsumer as e2d2::interface::PacketRx&gt;::recv (887 samples, 0.33%)</title><rect x="326" y="565" width="4" height="15" fill="rgb(216,131,1)"/><text x="329.00" y="575.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::dequeue (887 samples, 0.33%)</title><rect x="326" y="549" width="4" height="15" fill="rgb(244,29,37)"/><text x="329.00" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (118 samples, 0.04%)</title><rect x="329" y="533" width="1" height="15" fill="rgb(233,70,54)"/><text x="332.00" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (118 samples, 0.04%)</title><rect x="329" y="517" width="1" height="15" fill="rgb(234,61,4)"/><text x="332.00" y="527.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::add_to_batch (582 samples, 0.22%)</title><rect x="330" y="565" width="2" height="15" fill="rgb(251,220,29)"/><text x="333.00" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (582 samples, 0.22%)</title><rect x="330" y="549" width="2" height="15" fill="rgb(244,47,54)"/><text x="333.00" y="559.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (321 samples, 0.12%)</title><rect x="332" y="565" width="2" height="15" fill="rgb(234,186,51)"/><text x="335.00" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (321 samples, 0.12%)</title><rect x="332" y="549" width="2" height="15" fill="rgb(218,190,13)"/><text x="335.00" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (259 samples, 0.10%)</title><rect x="333" y="533" width="1" height="15" fill="rgb(249,123,37)"/><text x="336.00" y="543.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (3,170 samples, 1.19%)</title><rect x="320" y="613" width="14" height="15" fill="rgb(212,25,22)"/><text x="323.00" y="623.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (2,835 samples, 1.06%)</title><rect x="321" y="597" width="13" height="15" fill="rgb(239,105,3)"/><text x="324.00" y="607.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (1,797 samples, 0.67%)</title><rect x="326" y="581" width="8" height="15" fill="rgb(213,184,42)"/><text x="329.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (17,193 samples, 6.45%)</title><rect x="258" y="645" width="76" height="15" fill="rgb(245,76,44)"/><text x="261.00" y="655.50">&lt;e2d2::o..</text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (3,464 samples, 1.30%)</title><rect x="318" y="629" width="16" height="15" fill="rgb(215,99,13)"/><text x="321.00" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (617 samples, 0.23%)</title><rect x="342" y="597" width="3" height="15" fill="rgb(227,63,32)"/><text x="345.00" y="607.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (617 samples, 0.23%)</title><rect x="342" y="581" width="3" height="15" fill="rgb(242,211,2)"/><text x="345.00" y="591.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (617 samples, 0.23%)</title><rect x="342" y="565" width="3" height="15" fill="rgb(209,207,17)"/><text x="345.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::done (38 samples, 0.01%)</title><rect x="350" y="501" width="1" height="15" fill="rgb(213,146,23)"/><text x="353.00" y="511.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (38 samples, 0.01%)</title><rect x="350" y="485" width="1" height="15" fill="rgb(227,174,33)"/><text x="353.00" y="495.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (38 samples, 0.01%)</title><rect x="350" y="469" width="1" height="15" fill="rgb(209,3,29)"/><text x="353.00" y="479.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::free_packet_batch (38 samples, 0.01%)</title><rect x="350" y="453" width="1" height="15" fill="rgb(248,114,27)"/><text x="353.00" y="463.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (1,341 samples, 0.50%)</title><rect x="345" y="597" width="6" height="15" fill="rgb(208,175,19)"/><text x="348.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (757 samples, 0.28%)</title><rect x="347" y="581" width="4" height="15" fill="rgb(211,203,50)"/><text x="350.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (757 samples, 0.28%)</title><rect x="347" y="565" width="4" height="15" fill="rgb(227,160,13)"/><text x="350.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (757 samples, 0.28%)</title><rect x="347" y="549" width="4" height="15" fill="rgb(241,32,1)"/><text x="350.00" y="559.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (275 samples, 0.10%)</title><rect x="349" y="533" width="2" height="15" fill="rgb(230,40,14)"/><text x="352.00" y="543.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::done (275 samples, 0.10%)</title><rect x="349" y="517" width="2" height="15" fill="rgb(232,3,37)"/><text x="352.00" y="527.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (3,190 samples, 1.20%)</title><rect x="337" y="613" width="14" height="15" fill="rgb(205,155,11)"/><text x="340.00" y="623.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (3,191 samples, 1.20%)</title><rect x="337" y="629" width="14" height="15" fill="rgb(210,208,45)"/><text x="340.00" y="639.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (3,815 samples, 1.43%)</title><rect x="334" y="645" width="17" height="15" fill="rgb(205,228,19)"/><text x="337.00" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (58 samples, 0.02%)</title><rect x="356" y="581" width="0" height="15" fill="rgb(215,160,48)"/><text x="359.00" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (52 samples, 0.02%)</title><rect x="356" y="565" width="0" height="15" fill="rgb(253,177,39)"/><text x="359.00" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (52 samples, 0.02%)</title><rect x="356" y="549" width="0" height="15" fill="rgb(205,130,16)"/><text x="359.00" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (654 samples, 0.25%)</title><rect x="356" y="597" width="3" height="15" fill="rgb(218,88,9)"/><text x="359.00" y="607.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (596 samples, 0.22%)</title><rect x="356" y="581" width="3" height="15" fill="rgb(254,143,41)"/><text x="359.00" y="591.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (596 samples, 0.22%)</title><rect x="356" y="565" width="3" height="15" fill="rgb(247,105,30)"/><text x="359.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (7,666 samples, 2.88%)</title><rect x="353" y="613" width="34" height="15" fill="rgb(235,226,18)"/><text x="356.00" y="623.50">&lt;e..</text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (6,468 samples, 2.43%)</title><rect x="359" y="597" width="28" height="15" fill="rgb(239,10,19)"/><text x="362.00" y="607.50">&lt;..</text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (8,278 samples, 3.11%)</title><rect x="351" y="645" width="36" height="15" fill="rgb(226,167,48)"/><text x="354.00" y="655.50">&lt;e2..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (7,671 samples, 2.88%)</title><rect x="353" y="629" width="34" height="15" fill="rgb(210,183,11)"/><text x="356.00" y="639.50">&lt;e..</text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::act::Act&gt;::send_q (1,665 samples, 0.62%)</title><rect x="387" y="645" width="8" height="15" fill="rgb(218,31,50)"/><text x="390.00" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (605 samples, 0.23%)</title><rect x="392" y="629" width="3" height="15" fill="rgb(209,229,53)"/><text x="395.00" y="639.50"></text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::act (30,953 samples, 11.62%)</title><rect x="258" y="661" width="137" height="15" fill="rgb(237,202,49)"/><text x="261.00" y="671.50">&lt;e2d2::operators:..</text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;::execute (31,563 samples, 11.85%)</title><rect x="255" y="677" width="140" height="15" fill="rgb(222,66,3)"/><text x="258.00" y="687.50">&lt;e2d2::operators:..</text></g><g><title>e2d2::utils::asm::rdtsc_unsafe (10,761 samples, 4.04%)</title><rect x="395" y="677" width="47" height="15" fill="rgb(231,150,31)"/><text x="398.00" y="687.50">e2d2..</text></g><g><title>core::ptr::real_drop_in_place (16,427 samples, 6.17%)</title><rect x="453" y="645" width="73" height="15" fill="rgb(212,70,26)"/><text x="456.00" y="655.50">core::pt..</text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16,427 samples, 6.17%)</title><rect x="453" y="629" width="73" height="15" fill="rgb(246,112,0)"/><text x="456.00" y="639.50">&lt;std::sy..</text></g><g><title>std::sys_common::mutex::Mutex::raw_unlock (16,427 samples, 6.17%)</title><rect x="453" y="613" width="73" height="15" fill="rgb(240,39,47)"/><text x="456.00" y="623.50">std::sys..</text></g><g><title>std::sys::unix::mutex::Mutex::unlock (16,427 samples, 6.17%)</title><rect x="453" y="597" width="73" height="15" fill="rgb(221,227,11)"/><text x="456.00" y="607.50">std::sys..</text></g><g><title>__GI___pthread_mutex_unlock (16,427 samples, 6.17%)</title><rect x="453" y="581" width="73" height="15" fill="rgb(249,36,14)"/><text x="456.00" y="591.50">__GI___p..</text></g><g><title>__pthread_mutex_unlock_usercnt (15,192 samples, 5.70%)</title><rect x="459" y="565" width="67" height="15" fill="rgb(217,203,54)"/><text x="462.00" y="575.50">__pthre..</text></g><g><title>std::sys_common::poison::Flag::get (658 samples, 0.25%)</title><rect x="526" y="597" width="3" height="15" fill="rgb(208,121,2)"/><text x="529.00" y="607.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (658 samples, 0.25%)</title><rect x="526" y="581" width="3" height="15" fill="rgb(222,138,47)"/><text x="529.00" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (658 samples, 0.25%)</title><rect x="526" y="565" width="3" height="15" fill="rgb(211,121,8)"/><text x="529.00" y="575.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1,338 samples, 0.50%)</title><rect x="526" y="629" width="6" height="15" fill="rgb(247,176,37)"/><text x="529.00" y="639.50"></text></g><g><title>std::sys_common::poison::Flag::borrow (1,338 samples, 0.50%)</title><rect x="526" y="613" width="6" height="15" fill="rgb(209,6,40)"/><text x="529.00" y="623.50"></text></g><g><title>std::thread::panicking (680 samples, 0.26%)</title><rect x="529" y="597" width="3" height="15" fill="rgb(212,168,2)"/><text x="532.00" y="607.50"></text></g><g><title>std::panicking::panicking (680 samples, 0.26%)</title><rect x="529" y="581" width="3" height="15" fill="rgb(209,110,42)"/><text x="532.00" y="591.50"></text></g><g><title>std::panicking::update_panic_count (680 samples, 0.26%)</title><rect x="529" y="565" width="3" height="15" fill="rgb(215,193,44)"/><text x="532.00" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (680 samples, 0.26%)</title><rect x="529" y="549" width="3" height="15" fill="rgb(215,221,32)"/><text x="532.00" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (680 samples, 0.26%)</title><rect x="529" y="533" width="3" height="15" fill="rgb(226,59,6)"/><text x="532.00" y="543.50"></text></g><g><title>std::panicking::update_panic_count::_$u7b$$u7b$closure$u7d$$u7d$::hdd6811239ad811d8 (680 samples, 0.26%)</title><rect x="529" y="517" width="3" height="15" fill="rgb(223,187,20)"/><text x="532.00" y="527.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (680 samples, 0.26%)</title><rect x="529" y="501" width="3" height="15" fill="rgb(239,156,29)"/><text x="532.00" y="511.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_lock (14,669 samples, 5.51%)</title><rect x="532" y="629" width="65" height="15" fill="rgb(206,26,20)"/><text x="535.00" y="639.50">std::sy..</text></g><g><title>std::sys::unix::mutex::Mutex::lock (14,669 samples, 5.51%)</title><rect x="532" y="613" width="65" height="15" fill="rgb(216,42,21)"/><text x="535.00" y="623.50">std::sy..</text></g><g><title>__GI___pthread_mutex_lock (14,669 samples, 5.51%)</title><rect x="532" y="597" width="65" height="15" fill="rgb(210,4,8)"/><text x="535.00" y="607.50">__GI___..</text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (34,932 samples, 13.11%)</title><rect x="442" y="677" width="155" height="15" fill="rgb(220,179,41)"/><text x="445.00" y="687.50">std::sync::mpsc::Re..</text></g><g><title>std::sync::mpsc::sync::Packet&lt;T&gt;::try_recv (33,070 samples, 12.41%)</title><rect x="451" y="661" width="146" height="15" fill="rgb(238,5,53)"/><text x="454.00" y="671.50">std::sync::mpsc::s..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16,008 samples, 6.01%)</title><rect x="526" y="645" width="71" height="15" fill="rgb(242,140,50)"/><text x="529.00" y="655.50">std::syn..</text></g><g><title>__GI___clone (94,677 samples, 35.54%)</title><rect x="178" y="885" width="419" height="15" fill="rgb(252,4,22)"/><text x="181.00" y="895.50">__GI___clone</text></g><g><title>start_thread (94,677 samples, 35.54%)</title><rect x="178" y="869" width="419" height="15" fill="rgb(243,37,23)"/><text x="181.00" y="879.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (94,677 samples, 35.54%)</title><rect x="178" y="853" width="419" height="15" fill="rgb(254,177,22)"/><text x="181.00" y="863.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys_common::thread::start_thread (94,677 samples, 35.54%)</title><rect x="178" y="837" width="419" height="15" fill="rgb(250,194,46)"/><text x="181.00" y="847.50">std::sys_common::thread::start_thread</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (94,677 samples, 35.54%)</title><rect x="178" y="821" width="419" height="15" fill="rgb(224,78,44)"/><text x="181.00" y="831.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (94,677 samples, 35.54%)</title><rect x="178" y="805" width="419" height="15" fill="rgb(238,35,19)"/><text x="181.00" y="815.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;:..</text></g><g><title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h85f59d60f147d050 (94,677 samples, 35.54%)</title><rect x="178" y="789" width="419" height="15" fill="rgb(220,25,47)"/><text x="181.00" y="799.50">core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.sh..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (94,676 samples, 35.54%)</title><rect x="178" y="773" width="419" height="15" fill="rgb(215,48,7)"/><text x="181.00" y="783.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>e2d2::scheduler::context::NetBricksContext::start_scheduler::_$u7b$$u7b$closure$u7d$$u7d$::h008d40440c8a9600 (94,676 samples, 35.54%)</title><rect x="178" y="757" width="419" height="15" fill="rgb(215,89,36)"/><text x="181.00" y="767.50">e2d2::scheduler::context::NetBricksContext::start_schedul..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_requests (94,675 samples, 35.54%)</title><rect x="178" y="741" width="419" height="15" fill="rgb(231,44,45)"/><text x="181.00" y="751.50">e2d2::scheduler::standalone_scheduler::StandaloneSchedule..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request (94,675 samples, 35.54%)</title><rect x="178" y="725" width="419" height="15" fill="rgb(213,11,36)"/><text x="181.00" y="735.50">e2d2::scheduler::standalone_scheduler::StandaloneSchedule..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_loop (94,675 samples, 35.54%)</title><rect x="178" y="709" width="419" height="15" fill="rgb(245,99,25)"/><text x="181.00" y="719.50">e2d2::scheduler::standalone_scheduler::StandaloneSchedule..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_internal (93,430 samples, 35.07%)</title><rect x="183" y="693" width="414" height="15" fill="rgb(231,167,10)"/><text x="186.00" y="703.50">e2d2::scheduler::standalone_scheduler::StandaloneSchedul..</text></g><g><title>core::ptr::real_drop_in_place (644 samples, 0.24%)</title><rect x="600" y="805" width="3" height="15" fill="rgb(209,171,34)"/><text x="603.00" y="815.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (644 samples, 0.24%)</title><rect x="600" y="789" width="3" height="15" fill="rgb(225,119,23)"/><text x="603.00" y="799.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_unlock (644 samples, 0.24%)</title><rect x="600" y="773" width="3" height="15" fill="rgb(207,81,16)"/><text x="603.00" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (644 samples, 0.24%)</title><rect x="600" y="757" width="3" height="15" fill="rgb(232,156,27)"/><text x="603.00" y="767.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request (1,898 samples, 0.71%)</title><rect x="597" y="885" width="8" height="15" fill="rgb(205,178,10)"/><text x="600.00" y="895.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_loop (1,898 samples, 0.71%)</title><rect x="597" y="869" width="8" height="15" fill="rgb(212,103,0)"/><text x="600.00" y="879.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_internal (1,898 samples, 0.71%)</title><rect x="597" y="853" width="8" height="15" fill="rgb(229,190,2)"/><text x="600.00" y="863.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (1,290 samples, 0.48%)</title><rect x="600" y="837" width="5" height="15" fill="rgb(226,41,17)"/><text x="603.00" y="847.50"></text></g><g><title>std::sync::mpsc::sync::Packet&lt;T&gt;::try_recv (1,290 samples, 0.48%)</title><rect x="600" y="821" width="5" height="15" fill="rgb(252,83,5)"/><text x="603.00" y="831.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (646 samples, 0.24%)</title><rect x="603" y="805" width="2" height="15" fill="rgb(216,81,48)"/><text x="606.00" y="815.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_lock (646 samples, 0.24%)</title><rect x="603" y="789" width="2" height="15" fill="rgb(239,98,46)"/><text x="606.00" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (646 samples, 0.24%)</title><rect x="603" y="773" width="2" height="15" fill="rgb(240,64,5)"/><text x="606.00" y="783.50"></text></g><g><title>sched-2 (131,866 samples, 49.50%)</title><rect x="21" y="901" width="584" height="15" fill="rgb(220,162,40)"/><text x="24.00" y="911.50">sched-2</text></g><g><title>hrtimer_interrupt (24 samples, 0.01%)</title><rect x="1188" y="405" width="0" height="15" fill="rgb(250,182,31)"/><text x="1191.00" y="415.50"></text></g><g><title>apic_timer_interrupt (27 samples, 0.01%)</title><rect x="1188" y="437" width="0" height="15" fill="rgb(251,140,35)"/><text x="1191.00" y="447.50"></text></g><g><title>smp_apic_timer_interrupt (26 samples, 0.01%)</title><rect x="1188" y="421" width="0" height="15" fill="rgb(254,223,54)"/><text x="1191.00" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (44,456 samples, 16.69%)</title><rect x="992" y="485" width="197" height="15" fill="rgb(244,199,22)"/><text x="995.00" y="495.50">&lt;alloc::vec::Vec&lt;T&gt; as co..</text></g><g><title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (44,456 samples, 16.69%)</title><rect x="992" y="469" width="197" height="15" fill="rgb(243,158,51)"/><text x="995.00" y="479.50">core::slice::&lt;impl core::..</text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (44,456 samples, 16.69%)</title><rect x="992" y="453" width="197" height="15" fill="rgb(215,93,44)"/><text x="995.00" y="463.50">&lt;usize as core::slice::Sl..</text></g><g><title>e2d2::state::reordered_buffer::reordered_buffer::ReorderedBuffer::add_data (131,627 samples, 49.41%)</title><rect x="606" y="549" width="583" height="15" fill="rgb(217,75,29)"/><text x="609.00" y="559.50">e2d2::state::reordered_buffer::reordered_buffer::ReorderedBuffer::add_data</text></g><g><title>e2d2::state::reordered_buffer::reordered_buffer::ReorderedBuffer::out_of_order_insert (131,627 samples, 49.41%)</title><rect x="606" y="533" width="583" height="15" fill="rgb(221,95,0)"/><text x="609.00" y="543.50">e2d2::state::reordered_buffer::reordered_buffer::ReorderedBuffer::out_of_order_i..</text></g><g><title>e2d2::state::reordered_buffer::reordered_buffer::SegmentList::insert_segment (131,627 samples, 49.41%)</title><rect x="606" y="517" width="583" height="15" fill="rgb(223,23,5)"/><text x="609.00" y="527.50">e2d2::state::reordered_buffer::reordered_buffer::SegmentList::insert_segment</text></g><g><title>e2d2::state::reordered_buffer::reordered_buffer::SegmentList::merge_at_idx (131,627 samples, 49.41%)</title><rect x="606" y="501" width="583" height="15" fill="rgb(215,5,45)"/><text x="609.00" y="511.50">e2d2::state::reordered_buffer::reordered_buffer::SegmentList::merge_at_idx</text></g><g><title>tty_flip_buffer_push (47 samples, 0.02%)</title><rect x="1189" y="117" width="0" height="15" fill="rgb(218,139,33)"/><text x="1192.00" y="127.50"></text></g><g><title>queue_work_on (47 samples, 0.02%)</title><rect x="1189" y="101" width="0" height="15" fill="rgb(212,67,12)"/><text x="1192.00" y="111.50"></text></g><g><title>__queue_work (45 samples, 0.02%)</title><rect x="1189" y="85" width="0" height="15" fill="rgb(212,154,47)"/><text x="1192.00" y="95.50"></text></g><g><title>insert_work (39 samples, 0.01%)</title><rect x="1189" y="69" width="0" height="15" fill="rgb(220,89,24)"/><text x="1192.00" y="79.50"></text></g><g><title>wake_up_process (36 samples, 0.01%)</title><rect x="1189" y="53" width="0" height="15" fill="rgb(241,175,40)"/><text x="1192.00" y="63.50"></text></g><g><title>try_to_wake_up (34 samples, 0.01%)</title><rect x="1189" y="37" width="0" height="15" fill="rgb(221,66,41)"/><text x="1192.00" y="47.50"></text></g><g><title>pty_write (54 samples, 0.02%)</title><rect x="1189" y="133" width="0" height="15" fill="rgb(228,148,29)"/><text x="1192.00" y="143.50"></text></g><g><title>n_tty_write (75 samples, 0.03%)</title><rect x="1189" y="149" width="0" height="15" fill="rgb(221,45,9)"/><text x="1192.00" y="159.50"></text></g><g><title>__vfs_write (86 samples, 0.03%)</title><rect x="1189" y="181" width="0" height="15" fill="rgb(231,154,17)"/><text x="1192.00" y="191.50"></text></g><g><title>tty_write (86 samples, 0.03%)</title><rect x="1189" y="165" width="0" height="15" fill="rgb(242,13,31)"/><text x="1192.00" y="175.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (115 samples, 0.04%)</title><rect x="1189" y="245" width="0" height="15" fill="rgb(234,177,10)"/><text x="1192.00" y="255.50"></text></g><g><title>do_syscall_64 (115 samples, 0.04%)</title><rect x="1189" y="229" width="0" height="15" fill="rgb(223,37,7)"/><text x="1192.00" y="239.50"></text></g><g><title>sys_write (100 samples, 0.04%)</title><rect x="1189" y="213" width="0" height="15" fill="rgb(242,202,48)"/><text x="1192.00" y="223.50"></text></g><g><title>vfs_write (95 samples, 0.04%)</title><rect x="1189" y="197" width="0" height="15" fill="rgb(241,102,19)"/><text x="1192.00" y="207.50"></text></g><g><title>&lt;std::io::buffered::LineWriter&lt;W&gt; as std::io::Write&gt;::flush (133 samples, 0.05%)</title><rect x="1189" y="373" width="0" height="15" fill="rgb(237,141,40)"/><text x="1192.00" y="383.50"></text></g><g><title>&lt;std::io::buffered::BufWriter&lt;W&gt; as std::io::Write&gt;::flush (133 samples, 0.05%)</title><rect x="1189" y="357" width="0" height="15" fill="rgb(243,5,2)"/><text x="1192.00" y="367.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (133 samples, 0.05%)</title><rect x="1189" y="341" width="0" height="15" fill="rgb(212,30,22)"/><text x="1192.00" y="351.50"></text></g><g><title>&lt;std::io::stdio::Maybe&lt;W&gt; as std::io::Write&gt;::write (133 samples, 0.05%)</title><rect x="1189" y="325" width="0" height="15" fill="rgb(218,105,54)"/><text x="1192.00" y="335.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (133 samples, 0.05%)</title><rect x="1189" y="309" width="0" height="15" fill="rgb(225,228,28)"/><text x="1192.00" y="319.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (133 samples, 0.05%)</title><rect x="1189" y="293" width="0" height="15" fill="rgb(223,43,36)"/><text x="1192.00" y="303.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (133 samples, 0.05%)</title><rect x="1189" y="277" width="0" height="15" fill="rgb(238,120,26)"/><text x="1192.00" y="287.50"></text></g><g><title>__libc_write (133 samples, 0.05%)</title><rect x="1189" y="261" width="0" height="15" fill="rgb(242,146,21)"/><text x="1192.00" y="271.50"></text></g><g><title>&lt;std::io::buffered::LineWriter&lt;W&gt; as std::io::Write&gt;::write (137 samples, 0.05%)</title><rect x="1189" y="389" width="0" height="15" fill="rgb(242,215,39)"/><text x="1192.00" y="399.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (141 samples, 0.05%)</title><rect x="1189" y="437" width="0" height="15" fill="rgb(224,117,49)"/><text x="1192.00" y="447.50"></text></g><g><title>std::io::Write::write_all (141 samples, 0.05%)</title><rect x="1189" y="421" width="0" height="15" fill="rgb(212,54,30)"/><text x="1192.00" y="431.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (140 samples, 0.05%)</title><rect x="1189" y="405" width="0" height="15" fill="rgb(249,152,10)"/><text x="1192.00" y="415.50"></text></g><g><title>std::io::Write::write_fmt (144 samples, 0.05%)</title><rect x="1189" y="469" width="0" height="15" fill="rgb(206,199,37)"/><text x="1192.00" y="479.50"></text></g><g><title>core::fmt::write (144 samples, 0.05%)</title><rect x="1189" y="453" width="0" height="15" fill="rgb(232,205,23)"/><text x="1192.00" y="463.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (151 samples, 0.06%)</title><rect x="1189" y="485" width="0" height="15" fill="rgb(230,20,7)"/><text x="1192.00" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut (131,816 samples, 49.48%)</title><rect x="606" y="581" width="583" height="15" fill="rgb(231,207,34)"/><text x="609.00" y="591.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut</text></g><g><title>pvn_tls::nf::validator::_$u7b$$u7b$closure$u7d$$u7d$::h98ce98c98d7b80a2 (131,816 samples, 49.48%)</title><rect x="606" y="565" width="583" height="15" fill="rgb(225,114,36)"/><text x="609.00" y="575.50">pvn_tls::nf::validator::_$u7b$$u7b$closure$u7d$$u7d$::h98ce98c98d7b80a2</text></g><g><title>std::io::stdio::_print (152 samples, 0.06%)</title><rect x="1189" y="549" width="0" height="15" fill="rgb(206,160,10)"/><text x="1192.00" y="559.50"></text></g><g><title>std::io::stdio::print_to (152 samples, 0.06%)</title><rect x="1189" y="533" width="0" height="15" fill="rgb(217,71,1)"/><text x="1192.00" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (152 samples, 0.06%)</title><rect x="1189" y="517" width="0" height="15" fill="rgb(227,198,34)"/><text x="1192.00" y="527.50"></text></g><g><title>std::io::stdio::print_to::_$u7b$$u7b$closure$u7d$$u7d$::h0249537fb9ef42b4 (152 samples, 0.06%)</title><rect x="1189" y="501" width="0" height="15" fill="rgb(251,219,45)"/><text x="1192.00" y="511.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (131,817 samples, 49.48%)</title><rect x="606" y="645" width="583" height="15" fill="rgb(229,39,5)"/><text x="609.00" y="655.50">&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::A..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (131,817 samples, 49.48%)</title><rect x="606" y="629" width="583" height="15" fill="rgb(207,64,12)"/><text x="609.00" y="639.50">&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (131,817 samples, 49.48%)</title><rect x="606" y="613" width="583" height="15" fill="rgb(211,157,31)"/><text x="609.00" y="623.50">&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (131,817 samples, 49.48%)</title><rect x="606" y="597" width="583" height="15" fill="rgb(213,132,5)"/><text x="609.00" y="607.50">&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::..</text></g><g><title>__GI___clone (131,832 samples, 49.48%)</title><rect x="606" y="885" width="583" height="15" fill="rgb(246,157,22)"/><text x="609.00" y="895.50">__GI___clone</text></g><g><title>start_thread (131,832 samples, 49.48%)</title><rect x="606" y="869" width="583" height="15" fill="rgb(242,215,7)"/><text x="609.00" y="879.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (131,832 samples, 49.48%)</title><rect x="606" y="853" width="583" height="15" fill="rgb(219,140,27)"/><text x="609.00" y="863.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys_common::thread::start_thread (131,832 samples, 49.48%)</title><rect x="606" y="837" width="583" height="15" fill="rgb(231,29,25)"/><text x="609.00" y="847.50">std::sys_common::thread::start_thread</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (131,832 samples, 49.48%)</title><rect x="606" y="821" width="583" height="15" fill="rgb(233,116,39)"/><text x="609.00" y="831.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (131,832 samples, 49.48%)</title><rect x="606" y="805" width="583" height="15" fill="rgb(240,78,26)"/><text x="609.00" y="815.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h85f59d60f147d050 (131,832 samples, 49.48%)</title><rect x="606" y="789" width="583" height="15" fill="rgb(216,36,6)"/><text x="609.00" y="799.50">core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h85f59d60..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (131,831 samples, 49.48%)</title><rect x="606" y="773" width="583" height="15" fill="rgb(213,5,26)"/><text x="609.00" y="783.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>e2d2::scheduler::context::NetBricksContext::start_scheduler::_$u7b$$u7b$closure$u7d$$u7d$::h008d40440c8a9600 (131,831 samples, 49.48%)</title><rect x="606" y="757" width="583" height="15" fill="rgb(251,125,35)"/><text x="609.00" y="767.50">e2d2::scheduler::context::NetBricksContext::start_scheduler::_$u7b$$u7b$closure$..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_requests (131,824 samples, 49.48%)</title><rect x="606" y="741" width="583" height="15" fill="rgb(227,193,12)"/><text x="609.00" y="751.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_requests</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request (131,824 samples, 49.48%)</title><rect x="606" y="725" width="583" height="15" fill="rgb(213,54,34)"/><text x="609.00" y="735.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_loop (131,824 samples, 49.48%)</title><rect x="606" y="709" width="583" height="15" fill="rgb(206,21,27)"/><text x="609.00" y="719.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_loop</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_internal (131,824 samples, 49.48%)</title><rect x="606" y="693" width="583" height="15" fill="rgb(229,191,2)"/><text x="609.00" y="703.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_internal</text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;::execute (131,818 samples, 49.48%)</title><rect x="606" y="677" width="583" height="15" fill="rgb(219,142,42)"/><text x="609.00" y="687.50">&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;:..</text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::act (131,818 samples, 49.48%)</title><rect x="606" y="661" width="583" height="15" fill="rgb(234,165,47)"/><text x="609.00" y="671.50">&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::a..</text></g><g><title>sched-3 (131,846 samples, 49.49%)</title><rect x="605" y="901" width="584" height="15" fill="rgb(217,15,27)"/><text x="608.00" y="911.50">sched-3</text></g><g><title>all (266,417 samples, 100%)</title><rect x="10" y="917" width="1180" height="15" fill="rgb(228,145,9)"/><text x="13.00" y="927.50"></text></g></g></svg>