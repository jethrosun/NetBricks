<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="694" fill="url(#background)"/><text id="title" x="600.00" y="24.00">Flame Graph</text><text id="details" x="10.00" y="677.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="677.00"> </text><g id="frames"><g><title>clear_huge_page (73 samples, 0.01%; 0.00%)</title><rect x="10" y="277" width="0" height="15" fill="rgb(255,255,255)"/><text x="13.00" y="287.50"></text></g><g><title>__mm_populate (2,115 samples, 0.28%; 0.00%)</title><rect x="10" y="373" width="3" height="15" fill="rgb(255,255,255)"/><text x="13.00" y="383.50"></text></g><g><title>populate_vma_page_range (2,115 samples, 0.28%; 0.00%)</title><rect x="10" y="357" width="3" height="15" fill="rgb(255,255,255)"/><text x="13.00" y="367.50"></text></g><g><title>__get_user_pages (2,115 samples, 0.28%; 0.00%)</title><rect x="10" y="341" width="3" height="15" fill="rgb(255,255,255)"/><text x="13.00" y="351.50"></text></g><g><title>follow_hugetlb_page (2,115 samples, 0.28%; 0.00%)</title><rect x="10" y="325" width="3" height="15" fill="rgb(255,255,255)"/><text x="13.00" y="335.50"></text></g><g><title>hugetlb_fault (2,095 samples, 0.28%; 0.00%)</title><rect x="10" y="309" width="3" height="15" fill="rgb(255,255,255)"/><text x="13.00" y="319.50"></text></g><g><title>hugetlb_no_page (2,095 samples, 0.28%; 0.00%)</title><rect x="10" y="293" width="3" height="15" fill="rgb(255,255,255)"/><text x="13.00" y="303.50"></text></g><g><title>clear_page_erms (2,008 samples, 0.26%; -0.00%)</title><rect x="10" y="277" width="3" height="15" fill="rgb(209,209,255)"/><text x="13.00" y="287.50"></text></g><g><title>pvn_tls::main (2,118 samples, 0.28%; 0.00%)</title><rect x="10" y="597" width="3" height="15" fill="rgb(255,255,255)"/><text x="13.00" y="607.50"></text></g><g><title>e2d2::scheduler::context::initialize_system (2,118 samples, 0.28%; 0.00%)</title><rect x="10" y="581" width="3" height="15" fill="rgb(255,255,255)"/><text x="13.00" y="591.50"></text></g><g><title>init_system_whitelisted (2,118 samples, 0.28%; 0.00%)</title><rect x="10" y="565" width="3" height="15" fill="rgb(255,255,255)"/><text x="13.00" y="575.50"></text></g><g><title>init_eal (2,118 samples, 0.28%; 0.00%)</title><rect x="10" y="549" width="3" height="15" fill="rgb(255,255,255)"/><text x="13.00" y="559.50"></text></g><g><title>rte_eal_init (2,118 samples, 0.28%; 0.00%)</title><rect x="10" y="533" width="3" height="15" fill="rgb(255,255,255)"/><text x="13.00" y="543.50"></text></g><g><title>rte_eal_memory_init (2,118 samples, 0.28%; 0.00%)</title><rect x="10" y="517" width="3" height="15" fill="rgb(255,255,255)"/><text x="13.00" y="527.50"></text></g><g><title>rte_eal_hugepage_init (2,118 samples, 0.28%; 0.00%)</title><rect x="10" y="501" width="3" height="15" fill="rgb(255,255,255)"/><text x="13.00" y="511.50"></text></g><g><title>map_all_hugepages (2,117 samples, 0.28%; 0.00%)</title><rect x="10" y="485" width="3" height="15" fill="rgb(255,255,255)"/><text x="13.00" y="495.50"></text></g><g><title>__GI___mmap64 (2,117 samples, 0.28%; 0.00%)</title><rect x="10" y="469" width="3" height="15" fill="rgb(255,255,255)"/><text x="13.00" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,117 samples, 0.28%; 0.00%)</title><rect x="10" y="453" width="3" height="15" fill="rgb(255,255,255)"/><text x="13.00" y="463.50"></text></g><g><title>do_syscall_64 (2,117 samples, 0.28%; +0.00%)</title><rect x="10" y="437" width="3" height="15" fill="rgb(255,209,209)"/><text x="13.00" y="447.50"></text></g><g><title>sys_mmap (2,116 samples, 0.28%; 0.00%)</title><rect x="10" y="421" width="3" height="15" fill="rgb(255,255,255)"/><text x="13.00" y="431.50"></text></g><g><title>sys_mmap_pgoff (2,116 samples, 0.28%; 0.00%)</title><rect x="10" y="405" width="3" height="15" fill="rgb(255,255,255)"/><text x="13.00" y="415.50"></text></g><g><title>vm_mmap_pgoff (2,116 samples, 0.28%; 0.00%)</title><rect x="10" y="389" width="3" height="15" fill="rgb(255,255,255)"/><text x="13.00" y="399.50"></text></g><g><title>[unknown] (2,194 samples, 0.29%; 0.00%)</title><rect x="10" y="613" width="3" height="15" fill="rgb(255,255,255)"/><text x="13.00" y="623.50"></text></g><g><title>i40e_pf_reset (75 samples, 0.01%; 0.00%)</title><rect x="13" y="373" width="0" height="15" fill="rgb(255,255,255)"/><text x="16.00" y="383.50"></text></g><g><title>rte_delay_us_block (75 samples, 0.01%; -0.00%)</title><rect x="13" y="357" width="0" height="15" fill="rgb(209,209,255)"/><text x="16.00" y="367.50"></text></g><g><title>rte_pause (67 samples, 0.01%; 0.00%)</title><rect x="13" y="341" width="0" height="15" fill="rgb(255,255,255)"/><text x="16.00" y="351.50"></text></g><g><title>_mm_pause (67 samples, 0.01%; +0.00%)</title><rect x="13" y="325" width="0" height="15" fill="rgb(255,209,209)"/><text x="16.00" y="335.50"></text></g><g><title>i40e_set_fc (93 samples, 0.01%; 0.00%)</title><rect x="13" y="373" width="0" height="15" fill="rgb(255,255,255)"/><text x="16.00" y="383.50"></text></g><g><title>rte_eal_hotplug_add (289 samples, 0.04%; 0.00%)</title><rect x="13" y="469" width="0" height="15" fill="rgb(255,255,255)"/><text x="16.00" y="479.50"></text></g><g><title>pci_probe_all_drivers (289 samples, 0.04%; 0.00%)</title><rect x="13" y="453" width="0" height="15" fill="rgb(255,255,255)"/><text x="16.00" y="463.50"></text></g><g><title>rte_pci_probe_one_driver (289 samples, 0.04%; 0.00%)</title><rect x="13" y="437" width="0" height="15" fill="rgb(255,255,255)"/><text x="16.00" y="447.50"></text></g><g><title>eth_i40e_pci_probe (289 samples, 0.04%; 0.00%)</title><rect x="13" y="421" width="0" height="15" fill="rgb(255,255,255)"/><text x="16.00" y="431.50"></text></g><g><title>rte_eth_dev_pci_generic_probe (289 samples, 0.04%; 0.00%)</title><rect x="13" y="405" width="0" height="15" fill="rgb(255,255,255)"/><text x="16.00" y="415.50"></text></g><g><title>eth_i40e_dev_init (289 samples, 0.04%; 0.00%)</title><rect x="13" y="389" width="0" height="15" fill="rgb(255,255,255)"/><text x="16.00" y="399.50"></text></g><g><title>attach_pmd_device (289 samples, 0.04%; 0.00%)</title><rect x="13" y="501" width="0" height="15" fill="rgb(255,255,255)"/><text x="16.00" y="511.50"></text></g><g><title>rte_eth_dev_attach (289 samples, 0.04%; 0.00%)</title><rect x="13" y="485" width="0" height="15" fill="rgb(255,255,255)"/><text x="16.00" y="495.50"></text></g><g><title>rte_eth_dev_start (83 samples, 0.01%; 0.00%)</title><rect x="13" y="485" width="1" height="15" fill="rgb(255,255,255)"/><text x="16.00" y="495.50"></text></g><g><title>e2d2::interface::port::phy_port::PmdPort::new_dpdk_port (418 samples, 0.06%; 0.00%)</title><rect x="13" y="517" width="1" height="15" fill="rgb(255,255,255)"/><text x="16.00" y="527.50"></text></g><g><title>init_pmd_port (129 samples, 0.02%; 0.00%)</title><rect x="13" y="501" width="1" height="15" fill="rgb(255,255,255)"/><text x="16.00" y="511.50"></text></g><g><title>e2d2::scheduler::context::initialize_system (419 samples, 0.06%; 0.00%)</title><rect x="13" y="533" width="1" height="15" fill="rgb(255,255,255)"/><text x="16.00" y="543.50"></text></g><g><title>__libc_start_main (460 samples, 0.06%; 0.00%)</title><rect x="13" y="597" width="1" height="15" fill="rgb(255,255,255)"/><text x="16.00" y="607.50"></text></g><g><title>main (460 samples, 0.06%; 0.00%)</title><rect x="13" y="581" width="1" height="15" fill="rgb(255,255,255)"/><text x="16.00" y="591.50"></text></g><g><title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::hc87de8565012a906 (459 samples, 0.06%; 0.00%)</title><rect x="13" y="565" width="1" height="15" fill="rgb(255,255,255)"/><text x="16.00" y="575.50"></text></g><g><title>pvn_tls::main (459 samples, 0.06%; 0.00%)</title><rect x="13" y="549" width="1" height="15" fill="rgb(255,255,255)"/><text x="16.00" y="559.50"></text></g><g><title>_start (461 samples, 0.06%; 0.00%)</title><rect x="13" y="613" width="1" height="15" fill="rgb(255,255,255)"/><text x="16.00" y="623.50"></text></g><g><title>pvn-tls (2,668 samples, 0.35%; 0.00%)</title><rect x="10" y="629" width="4" height="15" fill="rgb(255,255,255)"/><text x="13.00" y="639.50"></text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (1,927 samples, 0.25%; +0.25%)</title><rect x="14" y="613" width="3" height="15" fill="rgb(255,208,208)"/><text x="17.00" y="623.50"></text></g><g><title>[libzcsi.so] (1,978 samples, 0.26%; 0.00%)</title><rect x="17" y="613" width="3" height="15" fill="rgb(255,255,255)"/><text x="20.00" y="623.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (1,978 samples, 0.26%; +0.13%)</title><rect x="17" y="597" width="3" height="15" fill="rgb(255,209,209)"/><text x="20.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (963 samples, 0.13%; 0.00%)</title><rect x="18" y="581" width="2" height="15" fill="rgb(255,255,255)"/><text x="21.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (963 samples, 0.13%; +0.13%)</title><rect x="18" y="565" width="2" height="15" fill="rgb(255,209,209)"/><text x="21.00" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3,020 samples, 0.40%; +0.40%)</title><rect x="20" y="597" width="5" height="15" fill="rgb(255,207,207)"/><text x="23.00" y="607.50"></text></g><g><title>e2d2::interface::port::&lt;impl e2d2::interface::PacketRx for e2d2::allocators::cache_aligned::CacheAligned&lt;T&gt;&gt;::recv (1,920 samples, 0.25%; 0.00%)</title><rect x="34" y="485" width="3" height="15" fill="rgb(255,255,255)"/><text x="37.00" y="495.50"></text></g><g><title>&lt;e2d2::interface::port::phy_port::PortQueue as e2d2::interface::PacketRx&gt;::recv (1,920 samples, 0.25%; 0.00%)</title><rect x="34" y="469" width="3" height="15" fill="rgb(255,255,255)"/><text x="37.00" y="479.50"></text></g><g><title>e2d2::interface::port::phy_port::PortQueue::recv_queue (1,920 samples, 0.25%; +0.25%)</title><rect x="34" y="453" width="3" height="15" fill="rgb(255,208,208)"/><text x="37.00" y="463.50"></text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (9,740 samples, 1.28%; +0.77%)</title><rect x="25" y="597" width="15" height="15" fill="rgb(255,205,205)"/><text x="28.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (3,905 samples, 0.51%; 0.00%)</title><rect x="34" y="581" width="6" height="15" fill="rgb(255,255,255)"/><text x="37.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (3,905 samples, 0.51%; 0.00%)</title><rect x="34" y="565" width="6" height="15" fill="rgb(255,255,255)"/><text x="37.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (3,905 samples, 0.51%; 0.00%)</title><rect x="34" y="549" width="6" height="15" fill="rgb(255,255,255)"/><text x="37.00" y="559.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (3,905 samples, 0.51%; 0.00%)</title><rect x="34" y="533" width="6" height="15" fill="rgb(255,255,255)"/><text x="37.00" y="543.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (3,905 samples, 0.51%; 0.00%)</title><rect x="34" y="517" width="6" height="15" fill="rgb(255,255,255)"/><text x="37.00" y="527.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (3,905 samples, 0.51%; 0.00%)</title><rect x="34" y="501" width="6" height="15" fill="rgb(255,255,255)"/><text x="37.00" y="511.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (1,985 samples, 0.26%; 0.00%)</title><rect x="37" y="485" width="3" height="15" fill="rgb(255,255,255)"/><text x="40.00" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1,985 samples, 0.26%; +0.26%)</title><rect x="37" y="469" width="3" height="15" fill="rgb(255,208,208)"/><text x="40.00" y="479.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (1,013 samples, 0.13%; 0.00%)</title><rect x="43" y="581" width="1" height="15" fill="rgb(255,255,255)"/><text x="46.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (1,013 samples, 0.13%; +0.13%)</title><rect x="43" y="565" width="1" height="15" fill="rgb(255,209,209)"/><text x="46.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (22,335 samples, 2.94%; +0.26%)</title><rect x="40" y="597" width="34" height="15" fill="rgb(255,208,208)"/><text x="43.00" y="607.50">&lt;e..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (19,369 samples, 2.55%; 0.00%)</title><rect x="44" y="581" width="30" height="15" fill="rgb(255,255,255)"/><text x="47.00" y="591.50">&lt;e..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (19,369 samples, 2.55%; +2.38%)</title><rect x="44" y="565" width="30" height="15" fill="rgb(255,194,194)"/><text x="47.00" y="575.50">&lt;e..</text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (1,241 samples, 0.16%; 0.00%)</title><rect x="72" y="549" width="2" height="15" fill="rgb(255,255,255)"/><text x="75.00" y="559.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::act (1,241 samples, 0.16%; +0.16%)</title><rect x="72" y="533" width="2" height="15" fill="rgb(255,208,208)"/><text x="75.00" y="543.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (5,214 samples, 0.69%; +0.29%)</title><rect x="74" y="597" width="9" height="15" fill="rgb(255,208,208)"/><text x="77.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (3,008 samples, 0.40%; 0.00%)</title><rect x="78" y="581" width="5" height="15" fill="rgb(255,255,255)"/><text x="81.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (3,007 samples, 0.40%; +0.40%)</title><rect x="78" y="565" width="5" height="15" fill="rgb(255,207,207)"/><text x="81.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (1,837 samples, 0.24%; +0.24%)</title><rect x="83" y="597" width="2" height="15" fill="rgb(255,208,208)"/><text x="86.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (13,762 samples, 1.81%; +1.75%)</title><rect x="85" y="597" width="22" height="15" fill="rgb(255,198,198)"/><text x="88.00" y="607.50">&lt;..</text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (403 samples, 0.05%; 0.00%)</title><rect x="106" y="581" width="1" height="15" fill="rgb(255,255,255)"/><text x="109.00" y="591.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (403 samples, 0.05%; 0.00%)</title><rect x="106" y="565" width="1" height="15" fill="rgb(255,255,255)"/><text x="109.00" y="575.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (403 samples, 0.05%; 0.00%)</title><rect x="106" y="549" width="1" height="15" fill="rgb(255,255,255)"/><text x="109.00" y="559.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (403 samples, 0.05%; 0.00%)</title><rect x="106" y="533" width="1" height="15" fill="rgb(255,255,255)"/><text x="109.00" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (403 samples, 0.05%; +0.05%)</title><rect x="106" y="517" width="1" height="15" fill="rgb(255,209,209)"/><text x="109.00" y="527.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (1,886 samples, 0.25%; +0.25%)</title><rect x="120" y="565" width="3" height="15" fill="rgb(255,208,208)"/><text x="123.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (1,940 samples, 0.26%; +0.25%)</title><rect x="123" y="565" width="3" height="15" fill="rgb(255,208,208)"/><text x="126.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;::execute (18,231 samples, 2.40%; +1.08%)</title><rect x="107" y="597" width="28" height="15" fill="rgb(255,203,203)"/><text x="110.00" y="607.50">&lt;..</text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::act (9,988 samples, 1.32%; 0.00%)</title><rect x="120" y="581" width="15" height="15" fill="rgb(255,255,255)"/><text x="123.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (6,162 samples, 0.81%; +0.81%)</title><rect x="126" y="565" width="9" height="15" fill="rgb(255,204,204)"/><text x="129.00" y="575.50"></text></g><g><title>__GI___pthread_mutex_lock (2,290 samples, 0.30%; +0.30%)</title><rect x="135" y="597" width="4" height="15" fill="rgb(255,208,208)"/><text x="138.00" y="607.50"></text></g><g><title>core::ptr::real_drop_in_place (1,878 samples, 0.25%; 0.00%)</title><rect x="141" y="517" width="3" height="15" fill="rgb(255,255,255)"/><text x="144.00" y="527.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,878 samples, 0.25%; 0.00%)</title><rect x="141" y="501" width="3" height="15" fill="rgb(255,255,255)"/><text x="144.00" y="511.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_unlock (1,878 samples, 0.25%; 0.00%)</title><rect x="141" y="485" width="3" height="15" fill="rgb(255,255,255)"/><text x="144.00" y="495.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1,878 samples, 0.25%; +0.25%)</title><rect x="141" y="469" width="3" height="15" fill="rgb(255,208,208)"/><text x="144.00" y="479.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request (5,446 samples, 0.72%; 0.00%)</title><rect x="139" y="597" width="8" height="15" fill="rgb(255,255,255)"/><text x="142.00" y="607.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_loop (5,446 samples, 0.72%; 0.00%)</title><rect x="139" y="581" width="8" height="15" fill="rgb(255,255,255)"/><text x="142.00" y="591.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_internal (5,446 samples, 0.72%; +0.21%)</title><rect x="139" y="565" width="8" height="15" fill="rgb(255,208,208)"/><text x="142.00" y="575.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (3,848 samples, 0.51%; 0.00%)</title><rect x="141" y="549" width="6" height="15" fill="rgb(255,255,255)"/><text x="144.00" y="559.50"></text></g><g><title>std::sync::mpsc::sync::Packet&lt;T&gt;::try_recv (3,848 samples, 0.51%; 0.00%)</title><rect x="141" y="533" width="6" height="15" fill="rgb(255,255,255)"/><text x="144.00" y="543.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,970 samples, 0.26%; 0.00%)</title><rect x="144" y="517" width="3" height="15" fill="rgb(255,255,255)"/><text x="147.00" y="527.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_lock (1,970 samples, 0.26%; 0.00%)</title><rect x="144" y="501" width="3" height="15" fill="rgb(255,255,255)"/><text x="147.00" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1,970 samples, 0.26%; +0.26%)</title><rect x="144" y="485" width="3" height="15" fill="rgb(255,208,208)"/><text x="147.00" y="495.50"></text></g><g><title>i40e_recv_pkts_vec (7,760 samples, 1.02%; +1.02%)</title><rect x="147" y="597" width="12" height="15" fill="rgb(255,203,203)"/><text x="150.00" y="607.50"></text></g><g><title>[unknown] (95,442 samples, 12.58%; 0.00%)</title><rect x="20" y="613" width="148" height="15" fill="rgb(255,255,255)"/><text x="23.00" y="623.50">[unknown]</text></g><g><title>recv_pkts (5,807 samples, 0.77%; +0.76%)</title><rect x="159" y="597" width="9" height="15" fill="rgb(255,205,205)"/><text x="162.00" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (3,576 samples, 0.47%; +0.21%)</title><rect x="197" y="293" width="6" height="15" fill="rgb(255,208,208)"/><text x="200.00" y="303.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1,945 samples, 0.26%; 0.00%)</title><rect x="200" y="277" width="3" height="15" fill="rgb(255,255,255)"/><text x="203.00" y="287.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (1,945 samples, 0.26%; +0.26%)</title><rect x="200" y="261" width="3" height="15" fill="rgb(255,208,208)"/><text x="203.00" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1,918 samples, 0.25%; 0.00%)</title><rect x="209" y="213" width="3" height="15" fill="rgb(255,255,255)"/><text x="212.00" y="223.50"></text></g><g><title>_$LT$e2d2..operators..receive_batch..ReceiveBatch$LT$T$GT$$u20$as$u20$e2d2..operators..act..Act$GT$::act::_$u7b$$u7b$closure$u7d$$u7d$::h04d16e535da9b6c3 (1,918 samples, 0.25%; +0.25%)</title><rect x="209" y="197" width="3" height="15" fill="rgb(255,208,208)"/><text x="212.00" y="207.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (1,992 samples, 0.26%; +0.26%)</title><rect x="212" y="197" width="3" height="15" fill="rgb(255,208,208)"/><text x="215.00" y="207.50"></text></g><g><title>_recv_raw_pkts_vec (5,776 samples, 0.76%; +0.76%)</title><rect x="242" y="85" width="9" height="15" fill="rgb(255,205,205)"/><text x="245.00" y="95.50"></text></g><g><title>rte_eth_rx_burst (19,094 samples, 2.52%; +1.49%)</title><rect x="221" y="117" width="30" height="15" fill="rgb(255,200,200)"/><text x="224.00" y="127.50">rt..</text></g><g><title>i40e_recv_pkts_vec (7,763 samples, 1.02%; +0.26%)</title><rect x="239" y="101" width="12" height="15" fill="rgb(255,208,208)"/><text x="242.00" y="111.50"></text></g><g><title>e2d2::interface::port::&lt;impl e2d2::interface::PacketRx for e2d2::allocators::cache_aligned::CacheAligned&lt;T&gt;&gt;::recv (21,056 samples, 2.78%; 0.00%)</title><rect x="218" y="181" width="33" height="15" fill="rgb(255,255,255)"/><text x="221.00" y="191.50">e2..</text></g><g><title>&lt;e2d2::interface::port::phy_port::PortQueue as e2d2::interface::PacketRx&gt;::recv (21,056 samples, 2.78%; 0.00%)</title><rect x="218" y="165" width="33" height="15" fill="rgb(255,255,255)"/><text x="221.00" y="175.50">&lt;e..</text></g><g><title>e2d2::interface::port::phy_port::PortQueue::recv_queue (21,056 samples, 2.78%; +0.00%)</title><rect x="218" y="149" width="33" height="15" fill="rgb(255,209,209)"/><text x="221.00" y="159.50">e2..</text></g><g><title>recv_pkts (21,045 samples, 2.77%; +0.26%)</title><rect x="218" y="133" width="33" height="15" fill="rgb(255,208,208)"/><text x="221.00" y="143.50">re..</text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (28,829 samples, 3.80%; 0.00%)</title><rect x="206" y="277" width="45" height="15" fill="rgb(255,255,255)"/><text x="209.00" y="287.50">&lt;e2d..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (28,829 samples, 3.80%; +0.25%)</title><rect x="206" y="261" width="45" height="15" fill="rgb(255,208,208)"/><text x="209.00" y="271.50">&lt;e2d..</text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (26,921 samples, 3.55%; 0.00%)</title><rect x="209" y="245" width="42" height="15" fill="rgb(255,255,255)"/><text x="212.00" y="255.50">&lt;e2..</text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (26,921 samples, 3.55%; 0.00%)</title><rect x="209" y="229" width="42" height="15" fill="rgb(255,255,255)"/><text x="212.00" y="239.50">&lt;e2..</text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (25,003 samples, 3.30%; 0.00%)</title><rect x="212" y="213" width="39" height="15" fill="rgb(255,255,255)"/><text x="215.00" y="223.50">e2d..</text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (23,011 samples, 3.03%; +0.26%)</title><rect x="215" y="197" width="36" height="15" fill="rgb(255,208,208)"/><text x="218.00" y="207.50">e2d..</text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (30,792 samples, 4.06%; +0.26%)</title><rect x="203" y="293" width="48" height="15" fill="rgb(255,208,208)"/><text x="206.00" y="303.50">&lt;e2d..</text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (8,542 samples, 1.13%; +0.25%)</title><rect x="277" y="229" width="14" height="15" fill="rgb(255,208,208)"/><text x="280.00" y="239.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (6,622 samples, 0.87%; +0.87%)</title><rect x="280" y="213" width="11" height="15" fill="rgb(255,204,204)"/><text x="283.00" y="223.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (724 samples, 0.10%; 0.00%)</title><rect x="294" y="133" width="2" height="15" fill="rgb(255,255,255)"/><text x="297.00" y="143.50"></text></g><g><title>_$LT$e2d2..operators..receive_batch..ReceiveBatch$LT$T$GT$$u20$as$u20$e2d2..operators..act..Act$GT$::act::_$u7b$$u7b$closure$u7d$$u7d$::h8d1298e4bf1f28cf (724 samples, 0.10%; +0.09%)</title><rect x="294" y="117" width="2" height="15" fill="rgb(255,209,209)"/><text x="297.00" y="127.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (1,131 samples, 0.15%; +0.14%)</title><rect x="296" y="117" width="2" height="15" fill="rgb(255,209,209)"/><text x="299.00" y="127.50"></text></g><g><title>core::cmp::min (804 samples, 0.11%; 0.00%)</title><rect x="298" y="69" width="2" height="15" fill="rgb(255,255,255)"/><text x="301.00" y="79.50"></text></g><g><title>core::cmp::Ord::min (804 samples, 0.11%; +0.04%)</title><rect x="298" y="53" width="2" height="15" fill="rgb(255,209,209)"/><text x="301.00" y="63.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::le (530 samples, 0.07%; +0.07%)</title><rect x="299" y="37" width="1" height="15" fill="rgb(255,209,209)"/><text x="302.00" y="47.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (274 samples, 0.04%; +0.04%)</title><rect x="300" y="69" width="0" height="15" fill="rgb(255,209,209)"/><text x="303.00" y="79.50"></text></g><g><title>&lt;e2d2::queues::mpsc_mbuf_queue::MpscConsumer as e2d2::interface::PacketRx&gt;::recv (1,520 samples, 0.20%; 0.00%)</title><rect x="298" y="101" width="2" height="15" fill="rgb(255,255,255)"/><text x="301.00" y="111.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::dequeue (1,520 samples, 0.20%; +0.04%)</title><rect x="298" y="85" width="2" height="15" fill="rgb(255,209,209)"/><text x="301.00" y="95.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (133 samples, 0.02%; 0.00%)</title><rect x="300" y="69" width="0" height="15" fill="rgb(255,255,255)"/><text x="303.00" y="79.50"></text></g><g><title>core::sync::atomic::atomic_load (133 samples, 0.02%; +0.02%)</title><rect x="300" y="53" width="0" height="15" fill="rgb(255,209,209)"/><text x="303.00" y="63.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::add_to_batch (1,059 samples, 0.14%; 0.00%)</title><rect x="300" y="101" width="2" height="15" fill="rgb(255,255,255)"/><text x="303.00" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (1,059 samples, 0.14%; +0.14%)</title><rect x="300" y="85" width="2" height="15" fill="rgb(255,209,209)"/><text x="303.00" y="95.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (960 samples, 0.13%; +0.13%)</title><rect x="302" y="69" width="2" height="15" fill="rgb(255,209,209)"/><text x="305.00" y="79.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (6,095 samples, 0.80%; 0.00%)</title><rect x="294" y="149" width="10" height="15" fill="rgb(255,255,255)"/><text x="297.00" y="159.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (5,371 samples, 0.71%; +0.03%)</title><rect x="296" y="133" width="8" height="15" fill="rgb(255,209,209)"/><text x="299.00" y="143.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (4,020 samples, 0.53%; +0.01%)</title><rect x="298" y="117" width="6" height="15" fill="rgb(255,209,209)"/><text x="301.00" y="127.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (1,350 samples, 0.18%; 0.00%)</title><rect x="302" y="101" width="2" height="15" fill="rgb(255,255,255)"/><text x="305.00" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1,350 samples, 0.18%; +0.05%)</title><rect x="302" y="85" width="2" height="15" fill="rgb(255,209,209)"/><text x="305.00" y="95.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (7,026 samples, 0.93%; +0.12%)</title><rect x="293" y="165" width="11" height="15" fill="rgb(255,209,209)"/><text x="296.00" y="175.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (11,591 samples, 1.53%; 0.00%)</title><rect x="292" y="197" width="18" height="15" fill="rgb(255,255,255)"/><text x="295.00" y="207.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::act (11,591 samples, 1.53%; +0.10%)</title><rect x="292" y="181" width="18" height="15" fill="rgb(255,209,209)"/><text x="295.00" y="191.50"></text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (3,772 samples, 0.50%; 0.00%)</title><rect x="304" y="165" width="6" height="15" fill="rgb(255,255,255)"/><text x="307.00" y="175.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (3,772 samples, 0.50%; 0.00%)</title><rect x="304" y="149" width="6" height="15" fill="rgb(255,255,255)"/><text x="307.00" y="159.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (3,772 samples, 0.50%; 0.00%)</title><rect x="304" y="133" width="6" height="15" fill="rgb(255,255,255)"/><text x="307.00" y="143.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (3,772 samples, 0.50%; +0.50%)</title><rect x="304" y="117" width="6" height="15" fill="rgb(255,206,206)"/><text x="307.00" y="127.50"></text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (986 samples, 0.13%; 0.00%)</title><rect x="310" y="197" width="1" height="15" fill="rgb(255,255,255)"/><text x="313.00" y="207.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (986 samples, 0.13%; 0.00%)</title><rect x="310" y="181" width="1" height="15" fill="rgb(255,255,255)"/><text x="313.00" y="191.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (986 samples, 0.13%; 0.00%)</title><rect x="310" y="165" width="1" height="15" fill="rgb(255,255,255)"/><text x="313.00" y="175.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (986 samples, 0.13%; 0.00%)</title><rect x="310" y="149" width="1" height="15" fill="rgb(255,255,255)"/><text x="313.00" y="159.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (986 samples, 0.13%; 0.00%)</title><rect x="310" y="133" width="1" height="15" fill="rgb(255,255,255)"/><text x="313.00" y="143.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (986 samples, 0.13%; +0.13%)</title><rect x="310" y="117" width="1" height="15" fill="rgb(255,209,209)"/><text x="313.00" y="127.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (13,303 samples, 1.75%; 0.00%)</title><rect x="291" y="229" width="20" height="15" fill="rgb(255,255,255)"/><text x="294.00" y="239.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (13,303 samples, 1.75%; +0.09%)</title><rect x="291" y="213" width="20" height="15" fill="rgb(255,209,209)"/><text x="294.00" y="223.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (36,870 samples, 4.86%; +1.97%)</title><rect x="254" y="245" width="57" height="15" fill="rgb(255,197,197)"/><text x="257.00" y="255.50">&lt;e2d2:..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (672 samples, 0.09%; 0.00%)</title><rect x="313" y="213" width="1" height="15" fill="rgb(255,255,255)"/><text x="316.00" y="223.50"></text></g><g><title>_$LT$e2d2..operators..receive_batch..ReceiveBatch$LT$T$GT$$u20$as$u20$e2d2..operators..act..Act$GT$::act::_$u7b$$u7b$closure$u7d$$u7d$::h8d1298e4bf1f28cf (672 samples, 0.09%; +0.09%)</title><rect x="313" y="197" width="1" height="15" fill="rgb(255,209,209)"/><text x="316.00" y="207.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (3,780 samples, 0.50%; +0.49%)</title><rect x="314" y="197" width="6" height="15" fill="rgb(255,206,206)"/><text x="317.00" y="207.50"></text></g><g><title>core::cmp::min (740 samples, 0.10%; 0.00%)</title><rect x="321" y="149" width="1" height="15" fill="rgb(255,255,255)"/><text x="324.00" y="159.50"></text></g><g><title>core::cmp::Ord::min (740 samples, 0.10%; +0.03%)</title><rect x="321" y="133" width="1" height="15" fill="rgb(255,209,209)"/><text x="324.00" y="143.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::le (485 samples, 0.06%; +0.06%)</title><rect x="322" y="117" width="0" height="15" fill="rgb(255,209,209)"/><text x="325.00" y="127.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (567 samples, 0.07%; +0.07%)</title><rect x="322" y="149" width="1" height="15" fill="rgb(255,209,209)"/><text x="325.00" y="159.50"></text></g><g><title>&lt;e2d2::queues::mpsc_mbuf_queue::MpscConsumer as e2d2::interface::PacketRx&gt;::recv (1,460 samples, 0.19%; 0.00%)</title><rect x="321" y="181" width="2" height="15" fill="rgb(255,255,255)"/><text x="324.00" y="191.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::dequeue (1,460 samples, 0.19%; +0.02%)</title><rect x="321" y="165" width="2" height="15" fill="rgb(255,209,209)"/><text x="324.00" y="175.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::add_to_batch (575 samples, 0.08%; 0.00%)</title><rect x="323" y="181" width="1" height="15" fill="rgb(255,255,255)"/><text x="326.00" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (575 samples, 0.08%; +0.08%)</title><rect x="323" y="165" width="1" height="15" fill="rgb(255,209,209)"/><text x="326.00" y="175.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (9,336 samples, 1.23%; 0.00%)</title><rect x="313" y="229" width="14" height="15" fill="rgb(255,255,255)"/><text x="316.00" y="239.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (8,664 samples, 1.14%; +0.04%)</title><rect x="314" y="213" width="13" height="15" fill="rgb(255,209,209)"/><text x="317.00" y="223.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (4,609 samples, 0.61%; +0.06%)</title><rect x="320" y="197" width="7" height="15" fill="rgb(255,209,209)"/><text x="323.00" y="207.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (2,097 samples, 0.28%; 0.00%)</title><rect x="324" y="181" width="3" height="15" fill="rgb(255,255,255)"/><text x="327.00" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (2,097 samples, 0.28%; +0.12%)</title><rect x="324" y="165" width="3" height="15" fill="rgb(255,209,209)"/><text x="327.00" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,165 samples, 0.15%; +0.15%)</title><rect x="326" y="149" width="1" height="15" fill="rgb(255,209,209)"/><text x="329.00" y="159.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (47,132 samples, 6.21%; 0.00%)</title><rect x="254" y="261" width="73" height="15" fill="rgb(255,255,255)"/><text x="257.00" y="271.50">&lt;e2d2::o..</text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (10,262 samples, 1.35%; +0.12%)</title><rect x="311" y="245" width="16" height="15" fill="rgb(255,209,209)"/><text x="314.00" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1,931 samples, 0.25%; +0.00%)</title><rect x="337" y="213" width="3" height="15" fill="rgb(255,209,209)"/><text x="340.00" y="223.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1,928 samples, 0.25%; 0.00%)</title><rect x="337" y="197" width="3" height="15" fill="rgb(255,255,255)"/><text x="340.00" y="207.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (1,928 samples, 0.25%; +0.25%)</title><rect x="337" y="181" width="3" height="15" fill="rgb(255,208,208)"/><text x="340.00" y="191.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::done (302 samples, 0.04%; 0.00%)</title><rect x="346" y="117" width="1" height="15" fill="rgb(255,255,255)"/><text x="349.00" y="127.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (302 samples, 0.04%; 0.00%)</title><rect x="346" y="101" width="1" height="15" fill="rgb(255,255,255)"/><text x="349.00" y="111.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (302 samples, 0.04%; 0.00%)</title><rect x="346" y="85" width="1" height="15" fill="rgb(255,255,255)"/><text x="349.00" y="95.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::free_packet_batch (302 samples, 0.04%; +0.04%)</title><rect x="346" y="69" width="1" height="15" fill="rgb(255,209,209)"/><text x="349.00" y="79.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (358 samples, 0.05%; 0.00%)</title><rect x="346" y="149" width="1" height="15" fill="rgb(255,255,255)"/><text x="349.00" y="159.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::done (358 samples, 0.05%; +0.01%)</title><rect x="346" y="133" width="1" height="15" fill="rgb(255,209,209)"/><text x="349.00" y="143.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (2,358 samples, 0.31%; 0.00%)</title><rect x="343" y="181" width="4" height="15" fill="rgb(255,255,255)"/><text x="346.00" y="191.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (2,358 samples, 0.31%; +0.26%)</title><rect x="343" y="165" width="4" height="15" fill="rgb(255,208,208)"/><text x="346.00" y="175.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (10,384 samples, 1.37%; 0.00%)</title><rect x="330" y="245" width="17" height="15" fill="rgb(255,255,255)"/><text x="333.00" y="255.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (10,384 samples, 1.37%; +0.55%)</title><rect x="330" y="229" width="17" height="15" fill="rgb(255,206,206)"/><text x="333.00" y="239.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (4,268 samples, 0.56%; +0.25%)</title><rect x="340" y="213" width="7" height="15" fill="rgb(255,208,208)"/><text x="343.00" y="223.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (2,360 samples, 0.31%; 0.00%)</title><rect x="343" y="197" width="4" height="15" fill="rgb(255,255,255)"/><text x="346.00" y="207.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (12,358 samples, 1.63%; +0.26%)</title><rect x="327" y="261" width="20" height="15" fill="rgb(255,208,208)"/><text x="330.00" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (213 samples, 0.03%; +0.01%)</title><rect x="351" y="197" width="1" height="15" fill="rgb(255,209,209)"/><text x="354.00" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (159 samples, 0.02%; 0.00%)</title><rect x="351" y="181" width="1" height="15" fill="rgb(255,255,255)"/><text x="354.00" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (159 samples, 0.02%; +0.02%)</title><rect x="351" y="165" width="1" height="15" fill="rgb(255,209,209)"/><text x="354.00" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1,727 samples, 0.23%; 0.00%)</title><rect x="351" y="213" width="3" height="15" fill="rgb(255,255,255)"/><text x="354.00" y="223.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1,514 samples, 0.20%; 0.00%)</title><rect x="352" y="197" width="2" height="15" fill="rgb(255,255,255)"/><text x="355.00" y="207.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (1,514 samples, 0.20%; +0.20%)</title><rect x="352" y="181" width="2" height="15" fill="rgb(255,208,208)"/><text x="355.00" y="191.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (21,055 samples, 2.78%; +0.26%)</title><rect x="348" y="229" width="33" height="15" fill="rgb(255,208,208)"/><text x="351.00" y="239.50">&lt;e..</text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (17,322 samples, 2.28%; +2.27%)</title><rect x="354" y="213" width="27" height="15" fill="rgb(255,195,195)"/><text x="357.00" y="223.50">&lt;..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (21,128 samples, 2.79%; +0.01%)</title><rect x="348" y="245" width="33" height="15" fill="rgb(255,209,209)"/><text x="351.00" y="255.50">&lt;e..</text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (22,100 samples, 2.91%; +0.13%)</title><rect x="347" y="261" width="34" height="15" fill="rgb(255,209,209)"/><text x="350.00" y="271.50">&lt;e..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1,922 samples, 0.25%; +0.25%)</title><rect x="386" y="245" width="3" height="15" fill="rgb(255,208,208)"/><text x="389.00" y="255.50"></text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::act (86,708 samples, 11.43%; 0.00%)</title><rect x="254" y="277" width="135" height="15" fill="rgb(255,255,255)"/><text x="257.00" y="287.50">&lt;e2d2::operators:..</text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::act::Act&gt;::send_q (5,118 samples, 0.67%; +0.42%)</title><rect x="381" y="261" width="8" height="15" fill="rgb(255,207,207)"/><text x="384.00" y="271.50"></text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;::execute (88,704 samples, 11.69%; +0.26%)</title><rect x="251" y="293" width="138" height="15" fill="rgb(255,208,208)"/><text x="254.00" y="303.50">&lt;e2d2::operators:..</text></g><g><title>e2d2::utils::asm::rdtsc_unsafe (29,806 samples, 3.93%; +3.91%)</title><rect x="389" y="293" width="46" height="15" fill="rgb(255,185,185)"/><text x="392.00" y="303.50">e2d2..</text></g><g><title>__pthread_mutex_unlock_usercnt (45,877 samples, 6.05%; +6.02%)</title><rect x="453" y="181" width="71" height="15" fill="rgb(255,171,171)"/><text x="456.00" y="191.50">__pthrea..</text></g><g><title>core::ptr::real_drop_in_place (49,657 samples, 6.55%; 0.00%)</title><rect x="447" y="261" width="77" height="15" fill="rgb(255,255,255)"/><text x="450.00" y="271.50">core::pt..</text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (49,657 samples, 6.55%; 0.00%)</title><rect x="447" y="245" width="77" height="15" fill="rgb(255,255,255)"/><text x="450.00" y="255.50">&lt;std::sy..</text></g><g><title>std::sys_common::mutex::Mutex::raw_unlock (49,657 samples, 6.55%; 0.00%)</title><rect x="447" y="229" width="77" height="15" fill="rgb(255,255,255)"/><text x="450.00" y="239.50">std::sys..</text></g><g><title>std::sys::unix::mutex::Mutex::unlock (49,657 samples, 6.55%; 0.00%)</title><rect x="447" y="213" width="77" height="15" fill="rgb(255,255,255)"/><text x="450.00" y="223.50">std::sys..</text></g><g><title>__GI___pthread_mutex_unlock (49,653 samples, 6.55%; +0.50%)</title><rect x="447" y="197" width="77" height="15" fill="rgb(255,206,206)"/><text x="450.00" y="207.50">__GI___p..</text></g><g><title>std::sys_common::poison::Flag::get (1,946 samples, 0.26%; 0.00%)</title><rect x="524" y="213" width="3" height="15" fill="rgb(255,255,255)"/><text x="527.00" y="223.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1,946 samples, 0.26%; 0.00%)</title><rect x="524" y="197" width="3" height="15" fill="rgb(255,255,255)"/><text x="527.00" y="207.50"></text></g><g><title>core::sync::atomic::atomic_load (1,945 samples, 0.26%; +0.26%)</title><rect x="524" y="181" width="3" height="15" fill="rgb(255,208,208)"/><text x="527.00" y="191.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (3,888 samples, 0.51%; 0.00%)</title><rect x="524" y="245" width="6" height="15" fill="rgb(255,255,255)"/><text x="527.00" y="255.50"></text></g><g><title>std::sys_common::poison::Flag::borrow (3,888 samples, 0.51%; 0.00%)</title><rect x="524" y="229" width="6" height="15" fill="rgb(255,255,255)"/><text x="527.00" y="239.50"></text></g><g><title>std::thread::panicking (1,942 samples, 0.26%; 0.00%)</title><rect x="527" y="213" width="3" height="15" fill="rgb(255,255,255)"/><text x="530.00" y="223.50"></text></g><g><title>std::panicking::panicking (1,942 samples, 0.26%; 0.00%)</title><rect x="527" y="197" width="3" height="15" fill="rgb(255,255,255)"/><text x="530.00" y="207.50"></text></g><g><title>std::panicking::update_panic_count (1,942 samples, 0.26%; 0.00%)</title><rect x="527" y="181" width="3" height="15" fill="rgb(255,255,255)"/><text x="530.00" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,942 samples, 0.26%; 0.00%)</title><rect x="527" y="165" width="3" height="15" fill="rgb(255,255,255)"/><text x="530.00" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,942 samples, 0.26%; 0.00%)</title><rect x="527" y="149" width="3" height="15" fill="rgb(255,255,255)"/><text x="530.00" y="159.50"></text></g><g><title>std::panicking::update_panic_count::_$u7b$$u7b$closure$u7d$$u7d$::hdd6811239ad811d8 (1,942 samples, 0.26%; 0.00%)</title><rect x="527" y="133" width="3" height="15" fill="rgb(255,255,255)"/><text x="530.00" y="143.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1,942 samples, 0.26%; +0.25%)</title><rect x="527" y="117" width="3" height="15" fill="rgb(255,208,208)"/><text x="530.00" y="127.50"></text></g><g><title>std::sync::mpsc::sync::Packet&lt;T&gt;::try_recv (101,497 samples, 13.38%; +0.25%)</title><rect x="444" y="277" width="158" height="15" fill="rgb(255,208,208)"/><text x="447.00" y="287.50">std::sync::mpsc::syn..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (49,927 samples, 6.58%; +0.00%)</title><rect x="524" y="261" width="78" height="15" fill="rgb(255,209,209)"/><text x="527.00" y="271.50">std::sync..</text></g><g><title>std::sys_common::mutex::Mutex::raw_lock (46,031 samples, 6.07%; 0.00%)</title><rect x="530" y="245" width="72" height="15" fill="rgb(255,255,255)"/><text x="533.00" y="255.50">std::sys..</text></g><g><title>std::sys::unix::mutex::Mutex::lock (46,031 samples, 6.07%; 0.00%)</title><rect x="530" y="229" width="72" height="15" fill="rgb(255,255,255)"/><text x="533.00" y="239.50">std::sys..</text></g><g><title>__GI___pthread_mutex_lock (46,031 samples, 6.07%; +6.04%)</title><rect x="530" y="213" width="72" height="15" fill="rgb(255,171,171)"/><text x="533.00" y="223.50">__GI___p..</text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (106,882 samples, 14.09%; +0.71%)</title><rect x="435" y="293" width="167" height="15" fill="rgb(255,205,205)"/><text x="438.00" y="303.50">std::sync::mpsc::Rece..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_internal (274,670 samples, 36.21%; +1.95%)</title><rect x="174" y="309" width="428" height="15" fill="rgb(255,197,197)"/><text x="177.00" y="319.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler..</text></g><g><title>std::panic::catch_unwind (278,553 samples, 36.72%; 0.00%)</title><rect x="168" y="485" width="434" height="15" fill="rgb(255,255,255)"/><text x="171.00" y="495.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (278,553 samples, 36.72%; 0.00%)</title><rect x="168" y="469" width="434" height="15" fill="rgb(255,255,255)"/><text x="171.00" y="479.50">std::panicking::try</text></g><g><title>__rust_maybe_catch_panic (278,553 samples, 36.72%; 0.00%)</title><rect x="168" y="453" width="434" height="15" fill="rgb(255,255,255)"/><text x="171.00" y="463.50">__rust_maybe_catch_panic</text></g><g><title>std::panicking::try::do_call (278,553 samples, 36.72%; 0.00%)</title><rect x="168" y="437" width="434" height="15" fill="rgb(255,255,255)"/><text x="171.00" y="447.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (278,553 samples, 36.72%; 0.00%)</title><rect x="168" y="421" width="434" height="15" fill="rgb(255,255,255)"/><text x="171.00" y="431.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::Fn..</text></g><g><title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h4bd6a348999fe437 (278,553 samples, 36.72%; 0.00%)</title><rect x="168" y="405" width="434" height="15" fill="rgb(255,255,255)"/><text x="171.00" y="415.50">std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (278,553 samples, 36.72%; 0.00%)</title><rect x="168" y="389" width="434" height="15" fill="rgb(255,255,255)"/><text x="171.00" y="399.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>e2d2::scheduler::context::NetBricksContext::start_scheduler::_$u7b$$u7b$closure$u7d$$u7d$::h008d40440c8a9600 (278,553 samples, 36.72%; 0.00%)</title><rect x="168" y="373" width="434" height="15" fill="rgb(255,255,255)"/><text x="171.00" y="383.50">e2d2::scheduler::context::NetBricksContext::start_scheduler..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_requests (278,553 samples, 36.72%; 0.00%)</title><rect x="168" y="357" width="434" height="15" fill="rgb(255,255,255)"/><text x="171.00" y="367.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler:..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request (278,553 samples, 36.72%; 0.00%)</title><rect x="168" y="341" width="434" height="15" fill="rgb(255,255,255)"/><text x="171.00" y="351.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler:..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_loop (278,553 samples, 36.72%; +0.51%)</title><rect x="168" y="325" width="434" height="15" fill="rgb(255,206,206)"/><text x="171.00" y="335.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler:..</text></g><g><title>__GI___clone (278,553 samples, 36.72%; 0.00%)</title><rect x="168" y="613" width="434" height="15" fill="rgb(255,255,255)"/><text x="171.00" y="623.50">__GI___clone</text></g><g><title>start_thread (278,553 samples, 36.72%; 0.00%)</title><rect x="168" y="597" width="434" height="15" fill="rgb(255,255,255)"/><text x="171.00" y="607.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (278,553 samples, 36.72%; 0.00%)</title><rect x="168" y="581" width="434" height="15" fill="rgb(255,255,255)"/><text x="171.00" y="591.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys_common::thread::start_thread (278,553 samples, 36.72%; 0.00%)</title><rect x="168" y="565" width="434" height="15" fill="rgb(255,255,255)"/><text x="171.00" y="575.50">std::sys_common::thread::start_thread</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (278,553 samples, 36.72%; 0.00%)</title><rect x="168" y="549" width="434" height="15" fill="rgb(255,255,255)"/><text x="171.00" y="559.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::c..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (278,553 samples, 36.72%; 0.00%)</title><rect x="168" y="533" width="434" height="15" fill="rgb(255,255,255)"/><text x="171.00" y="543.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::c..</text></g><g><title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h85f59d60f147d050 (278,553 samples, 36.72%; 0.00%)</title><rect x="168" y="517" width="434" height="15" fill="rgb(255,255,255)"/><text x="171.00" y="527.50">core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim..</text></g><g><title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::hdf1901ae8223da03 (278,553 samples, 36.72%; 0.00%)</title><rect x="168" y="501" width="434" height="15" fill="rgb(255,255,255)"/><text x="171.00" y="511.50">std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u..</text></g><g><title>sched-2 (377,952 samples, 49.82%; +0.01%)</title><rect x="14" y="629" width="588" height="15" fill="rgb(255,209,209)"/><text x="17.00" y="639.50">sched-2</text></g><g><title>apic_timer_interrupt (91 samples, 0.01%; 0.00%)</title><rect x="1189" y="69" width="0" height="15" fill="rgb(255,255,255)"/><text x="1192.00" y="79.50"></text></g><g><title>smp_apic_timer_interrupt (88 samples, 0.01%; +0.00%)</title><rect x="1189" y="53" width="0" height="15" fill="rgb(255,209,209)"/><text x="1192.00" y="63.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (126,040 samples, 16.61%; 0.00%)</title><rect x="993" y="117" width="196" height="15" fill="rgb(255,255,255)"/><text x="996.00" y="127.50">&lt;alloc::vec::Vec&lt;T&gt; as co..</text></g><g><title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (126,040 samples, 16.61%; 0.00%)</title><rect x="993" y="101" width="196" height="15" fill="rgb(255,255,255)"/><text x="996.00" y="111.50">core::slice::&lt;impl core::..</text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (126,040 samples, 16.61%; +16.53%)</title><rect x="993" y="85" width="196" height="15" fill="rgb(255,104,104)"/><text x="996.00" y="95.50">&lt;usize as core::slice::Sl..</text></g><g><title>e2d2::state::reordered_buffer::reordered_buffer::ReorderedBuffer::out_of_order_insert (377,903 samples, 49.81%; 0.00%)</title><rect x="602" y="165" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="175.50">e2d2::state::reordered_buffer::reordered_buffer::ReorderedBuffer::out_of_order_i..</text></g><g><title>e2d2::state::reordered_buffer::reordered_buffer::SegmentList::insert_segment (377,903 samples, 49.81%; 0.00%)</title><rect x="602" y="149" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="159.50">e2d2::state::reordered_buffer::reordered_buffer::SegmentList::insert_segment</text></g><g><title>e2d2::state::reordered_buffer::reordered_buffer::SegmentList::merge_at_idx (377,903 samples, 49.81%; +33.06%)</title><rect x="602" y="133" width="587" height="15" fill="rgb(255,0,0)"/><text x="605.00" y="143.50">e2d2::state::reordered_buffer::reordered_buffer::SegmentList::merge_at_idx</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut (377,966 samples, 49.82%; 0.00%)</title><rect x="602" y="197" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="207.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut</text></g><g><title>pvn_tls::nf::lib::validator::_$u7b$$u7b$closure$u7d$$u7d$::h0de64372acadfb90 (377,966 samples, 49.82%; 0.00%)</title><rect x="602" y="181" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="191.50">pvn_tls::nf::lib::validator::_$u7b$$u7b$closure$u7d$$u7d$::h0de64372acadfb90</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request (377,967 samples, 49.82%; 0.00%)</title><rect x="602" y="341" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="351.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_loop (377,967 samples, 49.82%; 0.00%)</title><rect x="602" y="325" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="335.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_loop</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_internal (377,967 samples, 49.82%; 0.00%)</title><rect x="602" y="309" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="319.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_internal</text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;::execute (377,966 samples, 49.82%; 0.00%)</title><rect x="602" y="293" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="303.50">&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;:..</text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::act (377,966 samples, 49.82%; 0.00%)</title><rect x="602" y="277" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="287.50">&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::a..</text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (377,966 samples, 49.82%; 0.00%)</title><rect x="602" y="261" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="271.50">&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::A..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (377,966 samples, 49.82%; 0.00%)</title><rect x="602" y="245" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="255.50">&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (377,966 samples, 49.82%; 0.00%)</title><rect x="602" y="229" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="239.50">&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (377,966 samples, 49.82%; 0.00%)</title><rect x="602" y="213" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="223.50">&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::..</text></g><g><title>std::panic::catch_unwind (377,967 samples, 49.82%; 0.00%)</title><rect x="602" y="485" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="495.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (377,967 samples, 49.82%; 0.00%)</title><rect x="602" y="469" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="479.50">std::panicking::try</text></g><g><title>__rust_maybe_catch_panic (377,967 samples, 49.82%; 0.00%)</title><rect x="602" y="453" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="463.50">__rust_maybe_catch_panic</text></g><g><title>std::panicking::try::do_call (377,967 samples, 49.82%; 0.00%)</title><rect x="602" y="437" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="447.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (377,967 samples, 49.82%; 0.00%)</title><rect x="602" y="421" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="431.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;</text></g><g><title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h4bd6a348999fe437 (377,967 samples, 49.82%; 0.00%)</title><rect x="602" y="405" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="415.50">std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (377,967 samples, 49.82%; 0.00%)</title><rect x="602" y="389" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="399.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>e2d2::scheduler::context::NetBricksContext::start_scheduler::_$u7b$$u7b$closure$u7d$$u7d$::h008d40440c8a9600 (377,967 samples, 49.82%; 0.00%)</title><rect x="602" y="373" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="383.50">e2d2::scheduler::context::NetBricksContext::start_scheduler::_$u7b$$u7b$closure$..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_requests (377,967 samples, 49.82%; 0.00%)</title><rect x="602" y="357" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="367.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_requests</text></g><g><title>sched-3 (377,986 samples, 49.83%; +0.00%)</title><rect x="602" y="629" width="587" height="15" fill="rgb(255,209,209)"/><text x="605.00" y="639.50">sched-3</text></g><g><title>__GI___clone (377,968 samples, 49.82%; 0.00%)</title><rect x="602" y="613" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="623.50">__GI___clone</text></g><g><title>start_thread (377,968 samples, 49.82%; 0.00%)</title><rect x="602" y="597" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="607.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (377,968 samples, 49.82%; 0.00%)</title><rect x="602" y="581" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="591.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys_common::thread::start_thread (377,968 samples, 49.82%; 0.00%)</title><rect x="602" y="565" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="575.50">std::sys_common::thread::start_thread</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (377,968 samples, 49.82%; 0.00%)</title><rect x="602" y="549" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="559.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (377,968 samples, 49.82%; 0.00%)</title><rect x="602" y="533" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="543.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h85f59d60f147d050 (377,968 samples, 49.82%; 0.00%)</title><rect x="602" y="517" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="527.50">core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h85f59d60..</text></g><g><title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::hdf1901ae8223da03 (377,968 samples, 49.82%; 0.00%)</title><rect x="602" y="501" width="587" height="15" fill="rgb(255,255,255)"/><text x="605.00" y="511.50">std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::hdf1901ae82..</text></g><g><title>all (758,621 samples, 100%)</title><rect x="10" y="645" width="1180" height="15" fill="rgb(255,255,255)"/><text x="13.00" y="655.50"></text></g></g></svg>