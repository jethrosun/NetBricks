<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="694" fill="url(#background)"/><text id="title" x="600.00" y="24.00">Flame Graph</text><text id="details" x="10.00" y="677.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="677.00"> </text><g id="frames"><g><title>__libc_start_main (56 samples, 0.02%)</title><rect x="10" y="597" width="0" height="15" fill="rgb(239,136,34)"/><text x="13.00" y="607.50"></text></g><g><title>main (56 samples, 0.02%)</title><rect x="10" y="581" width="0" height="15" fill="rgb(246,139,46)"/><text x="13.00" y="591.50"></text></g><g><title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h8a731bc98067ee20 (56 samples, 0.02%)</title><rect x="10" y="565" width="0" height="15" fill="rgb(250,197,14)"/><text x="13.00" y="575.50"></text></g><g><title>pvn_tls::main (56 samples, 0.02%)</title><rect x="10" y="549" width="0" height="15" fill="rgb(238,138,10)"/><text x="13.00" y="559.50"></text></g><g><title>e2d2::scheduler::context::initialize_system (56 samples, 0.02%)</title><rect x="10" y="533" width="0" height="15" fill="rgb(223,127,52)"/><text x="13.00" y="543.50"></text></g><g><title>e2d2::interface::port::phy_port::PmdPort::new_dpdk_port (56 samples, 0.02%)</title><rect x="10" y="517" width="0" height="15" fill="rgb(242,173,7)"/><text x="13.00" y="527.50"></text></g><g><title>init_pmd_port (56 samples, 0.02%)</title><rect x="10" y="501" width="0" height="15" fill="rgb(224,90,45)"/><text x="13.00" y="511.50"></text></g><g><title>rte_eth_dev_configure (56 samples, 0.02%)</title><rect x="10" y="485" width="0" height="15" fill="rgb(218,209,31)"/><text x="13.00" y="495.50"></text></g><g><title>i40e_dev_configure (56 samples, 0.02%)</title><rect x="10" y="469" width="0" height="15" fill="rgb(227,85,45)"/><text x="13.00" y="479.50"></text></g><g><title>i40e_dev_sync_phy_type (56 samples, 0.02%)</title><rect x="10" y="453" width="0" height="15" fill="rgb(252,149,48)"/><text x="13.00" y="463.50"></text></g><g><title>i40e_aq_get_phy_capabilities (56 samples, 0.02%)</title><rect x="10" y="437" width="0" height="15" fill="rgb(234,127,14)"/><text x="13.00" y="447.50"></text></g><g><title>i40e_asq_send_command (36 samples, 0.01%)</title><rect x="10" y="421" width="0" height="15" fill="rgb(237,63,28)"/><text x="13.00" y="431.50"></text></g><g><title>rte_delay_us_block (36 samples, 0.01%)</title><rect x="10" y="405" width="0" height="15" fill="rgb(235,194,31)"/><text x="13.00" y="415.50"></text></g><g><title>rte_pause (34 samples, 0.01%)</title><rect x="10" y="389" width="0" height="15" fill="rgb(208,101,37)"/><text x="13.00" y="399.50"></text></g><g><title>_mm_pause (34 samples, 0.01%)</title><rect x="10" y="373" width="0" height="15" fill="rgb(249,72,18)"/><text x="13.00" y="383.50"></text></g><g><title>e2d2::interface::port::phy_port::PmdPort::new_dpdk_port (36 samples, 0.01%)</title><rect x="10" y="533" width="0" height="15" fill="rgb(205,192,37)"/><text x="13.00" y="543.50"></text></g><g><title>init_pmd_port (36 samples, 0.01%)</title><rect x="10" y="517" width="0" height="15" fill="rgb(214,115,43)"/><text x="13.00" y="527.50"></text></g><g><title>rte_eth_dev_start (36 samples, 0.01%)</title><rect x="10" y="501" width="0" height="15" fill="rgb(245,214,25)"/><text x="13.00" y="511.50"></text></g><g><title>i40e_dev_start (36 samples, 0.01%)</title><rect x="10" y="485" width="0" height="15" fill="rgb(207,193,50)"/><text x="13.00" y="495.50"></text></g><g><title>i40e_apply_link_speed (36 samples, 0.01%)</title><rect x="10" y="469" width="0" height="15" fill="rgb(228,153,34)"/><text x="13.00" y="479.50"></text></g><g><title>i40e_phy_conf_link (36 samples, 0.01%)</title><rect x="10" y="453" width="0" height="15" fill="rgb(212,16,51)"/><text x="13.00" y="463.50"></text></g><g><title>i40e_aq_get_phy_capabilities (36 samples, 0.01%)</title><rect x="10" y="437" width="0" height="15" fill="rgb(218,191,27)"/><text x="13.00" y="447.50"></text></g><g><title>i40e_asq_send_command (36 samples, 0.01%)</title><rect x="10" y="421" width="0" height="15" fill="rgb(232,210,3)"/><text x="13.00" y="431.50"></text></g><g><title>rte_delay_us_block (35 samples, 0.01%)</title><rect x="10" y="405" width="0" height="15" fill="rgb(240,66,39)"/><text x="13.00" y="415.50"></text></g><g><title>rte_pause (33 samples, 0.01%)</title><rect x="10" y="389" width="0" height="15" fill="rgb(243,113,31)"/><text x="13.00" y="399.50"></text></g><g><title>_mm_pause (33 samples, 0.01%)</title><rect x="10" y="373" width="0" height="15" fill="rgb(239,88,12)"/><text x="13.00" y="383.50"></text></g><g><title>main (44 samples, 0.02%)</title><rect x="10" y="597" width="0" height="15" fill="rgb(226,179,0)"/><text x="13.00" y="607.50"></text></g><g><title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h8a731bc98067ee20 (44 samples, 0.02%)</title><rect x="10" y="581" width="0" height="15" fill="rgb(207,228,7)"/><text x="13.00" y="591.50"></text></g><g><title>pvn_tls::main (44 samples, 0.02%)</title><rect x="10" y="565" width="0" height="15" fill="rgb(214,122,25)"/><text x="13.00" y="575.50"></text></g><g><title>e2d2::scheduler::context::initialize_system (44 samples, 0.02%)</title><rect x="10" y="549" width="0" height="15" fill="rgb(251,140,29)"/><text x="13.00" y="559.50"></text></g><g><title>clear_huge_page (69 samples, 0.03%)</title><rect x="10" y="277" width="0" height="15" fill="rgb(224,50,41)"/><text x="13.00" y="287.50"></text></g><g><title>pvn_tls::main (2,135 samples, 0.79%)</title><rect x="10" y="597" width="9" height="15" fill="rgb(251,43,40)"/><text x="13.00" y="607.50"></text></g><g><title>e2d2::scheduler::context::initialize_system (2,135 samples, 0.79%)</title><rect x="10" y="581" width="9" height="15" fill="rgb(221,208,6)"/><text x="13.00" y="591.50"></text></g><g><title>init_system_whitelisted (2,135 samples, 0.79%)</title><rect x="10" y="565" width="9" height="15" fill="rgb(215,126,50)"/><text x="13.00" y="575.50"></text></g><g><title>init_eal (2,135 samples, 0.79%)</title><rect x="10" y="549" width="9" height="15" fill="rgb(236,32,33)"/><text x="13.00" y="559.50"></text></g><g><title>rte_eal_init (2,135 samples, 0.79%)</title><rect x="10" y="533" width="9" height="15" fill="rgb(205,98,36)"/><text x="13.00" y="543.50"></text></g><g><title>rte_eal_memory_init (2,135 samples, 0.79%)</title><rect x="10" y="517" width="9" height="15" fill="rgb(241,210,29)"/><text x="13.00" y="527.50"></text></g><g><title>rte_eal_hugepage_init (2,135 samples, 0.79%)</title><rect x="10" y="501" width="9" height="15" fill="rgb(216,61,24)"/><text x="13.00" y="511.50"></text></g><g><title>map_all_hugepages (2,135 samples, 0.79%)</title><rect x="10" y="485" width="9" height="15" fill="rgb(251,121,33)"/><text x="13.00" y="495.50"></text></g><g><title>__GI___mmap64 (2,135 samples, 0.79%)</title><rect x="10" y="469" width="9" height="15" fill="rgb(252,59,42)"/><text x="13.00" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,135 samples, 0.79%)</title><rect x="10" y="453" width="9" height="15" fill="rgb(207,69,44)"/><text x="13.00" y="463.50"></text></g><g><title>do_syscall_64 (2,135 samples, 0.79%)</title><rect x="10" y="437" width="9" height="15" fill="rgb(227,178,51)"/><text x="13.00" y="447.50"></text></g><g><title>sys_mmap (2,135 samples, 0.79%)</title><rect x="10" y="421" width="9" height="15" fill="rgb(227,137,14)"/><text x="13.00" y="431.50"></text></g><g><title>sys_mmap_pgoff (2,135 samples, 0.79%)</title><rect x="10" y="405" width="9" height="15" fill="rgb(235,58,38)"/><text x="13.00" y="415.50"></text></g><g><title>vm_mmap_pgoff (2,135 samples, 0.79%)</title><rect x="10" y="389" width="9" height="15" fill="rgb(218,82,37)"/><text x="13.00" y="399.50"></text></g><g><title>__mm_populate (2,135 samples, 0.79%)</title><rect x="10" y="373" width="9" height="15" fill="rgb(208,14,48)"/><text x="13.00" y="383.50"></text></g><g><title>populate_vma_page_range (2,135 samples, 0.79%)</title><rect x="10" y="357" width="9" height="15" fill="rgb(213,39,14)"/><text x="13.00" y="367.50"></text></g><g><title>__get_user_pages (2,135 samples, 0.79%)</title><rect x="10" y="341" width="9" height="15" fill="rgb(239,139,5)"/><text x="13.00" y="351.50"></text></g><g><title>follow_hugetlb_page (2,135 samples, 0.79%)</title><rect x="10" y="325" width="9" height="15" fill="rgb(213,220,19)"/><text x="13.00" y="335.50"></text></g><g><title>hugetlb_fault (2,115 samples, 0.78%)</title><rect x="10" y="309" width="9" height="15" fill="rgb(236,44,10)"/><text x="13.00" y="319.50"></text></g><g><title>hugetlb_no_page (2,115 samples, 0.78%)</title><rect x="10" y="293" width="9" height="15" fill="rgb(205,154,13)"/><text x="13.00" y="303.50"></text></g><g><title>clear_page_erms (2,033 samples, 0.75%)</title><rect x="10" y="277" width="9" height="15" fill="rgb(219,163,43)"/><text x="13.00" y="287.50"></text></g><g><title>[unknown] (2,252 samples, 0.83%)</title><rect x="10" y="613" width="9" height="15" fill="rgb(220,148,29)"/><text x="13.00" y="623.50"></text></g><g><title>schedule_tail (33 samples, 0.01%)</title><rect x="19" y="581" width="0" height="15" fill="rgb(242,12,16)"/><text x="22.00" y="591.50"></text></g><g><title>finish_task_switch (33 samples, 0.01%)</title><rect x="19" y="565" width="0" height="15" fill="rgb(212,216,13)"/><text x="22.00" y="575.50"></text></g><g><title>__perf_event_task_sched_in (33 samples, 0.01%)</title><rect x="19" y="549" width="0" height="15" fill="rgb(251,13,23)"/><text x="22.00" y="559.50"></text></g><g><title>x86_pmu_enable (33 samples, 0.01%)</title><rect x="19" y="533" width="0" height="15" fill="rgb(224,72,36)"/><text x="22.00" y="543.50"></text></g><g><title>intel_pmu_enable_all (33 samples, 0.01%)</title><rect x="19" y="517" width="0" height="15" fill="rgb(217,96,26)"/><text x="22.00" y="527.50"></text></g><g><title>__intel_pmu_enable_all.constprop.19 (33 samples, 0.01%)</title><rect x="19" y="501" width="0" height="15" fill="rgb(236,155,15)"/><text x="22.00" y="511.50"></text></g><g><title>ret_from_fork (35 samples, 0.01%)</title><rect x="19" y="597" width="0" height="15" fill="rgb(218,180,33)"/><text x="22.00" y="607.50"></text></g><g><title>__GI___clone (37 samples, 0.01%)</title><rect x="19" y="613" width="0" height="15" fill="rgb(230,215,12)"/><text x="22.00" y="623.50"></text></g><g><title>i40e_dev_sync_phy_type (56 samples, 0.02%)</title><rect x="20" y="373" width="0" height="15" fill="rgb(248,189,47)"/><text x="23.00" y="383.50"></text></g><g><title>i40e_aq_get_phy_capabilities (56 samples, 0.02%)</title><rect x="20" y="357" width="0" height="15" fill="rgb(250,147,45)"/><text x="23.00" y="367.50"></text></g><g><title>i40e_asq_send_command (36 samples, 0.01%)</title><rect x="20" y="341" width="0" height="15" fill="rgb(211,75,29)"/><text x="23.00" y="351.50"></text></g><g><title>rte_delay_us_block (36 samples, 0.01%)</title><rect x="20" y="325" width="0" height="15" fill="rgb(238,161,39)"/><text x="23.00" y="335.50"></text></g><g><title>rte_pause (32 samples, 0.01%)</title><rect x="20" y="309" width="0" height="15" fill="rgb(239,224,12)"/><text x="23.00" y="319.50"></text></g><g><title>_mm_pause (32 samples, 0.01%)</title><rect x="20" y="293" width="0" height="15" fill="rgb(224,169,39)"/><text x="23.00" y="303.50"></text></g><g><title>i40e_pf_reset (77 samples, 0.03%)</title><rect x="20" y="373" width="0" height="15" fill="rgb(235,89,30)"/><text x="23.00" y="383.50"></text></g><g><title>rte_delay_us_block (77 samples, 0.03%)</title><rect x="20" y="357" width="0" height="15" fill="rgb(231,91,50)"/><text x="23.00" y="367.50"></text></g><g><title>rte_pause (63 samples, 0.02%)</title><rect x="20" y="341" width="0" height="15" fill="rgb(230,93,26)"/><text x="23.00" y="351.50"></text></g><g><title>_mm_pause (63 samples, 0.02%)</title><rect x="20" y="325" width="0" height="15" fill="rgb(226,2,17)"/><text x="23.00" y="335.50"></text></g><g><title>i40e_pf_setup (30 samples, 0.01%)</title><rect x="20" y="373" width="0" height="15" fill="rgb(253,183,32)"/><text x="23.00" y="383.50"></text></g><g><title>i40e_aq_get_phy_capabilities (37 samples, 0.01%)</title><rect x="20" y="357" width="1" height="15" fill="rgb(225,48,11)"/><text x="23.00" y="367.50"></text></g><g><title>i40e_asq_send_command (37 samples, 0.01%)</title><rect x="20" y="341" width="1" height="15" fill="rgb(215,184,13)"/><text x="23.00" y="351.50"></text></g><g><title>rte_delay_us_block (37 samples, 0.01%)</title><rect x="20" y="325" width="1" height="15" fill="rgb(219,214,53)"/><text x="23.00" y="335.50"></text></g><g><title>rte_pause (33 samples, 0.01%)</title><rect x="20" y="309" width="1" height="15" fill="rgb(208,66,4)"/><text x="23.00" y="319.50"></text></g><g><title>_mm_pause (33 samples, 0.01%)</title><rect x="20" y="293" width="1" height="15" fill="rgb(252,123,12)"/><text x="23.00" y="303.50"></text></g><g><title>attach_pmd_device (290 samples, 0.11%)</title><rect x="20" y="501" width="1" height="15" fill="rgb(244,152,20)"/><text x="23.00" y="511.50"></text></g><g><title>rte_eth_dev_attach (290 samples, 0.11%)</title><rect x="20" y="485" width="1" height="15" fill="rgb(246,124,8)"/><text x="23.00" y="495.50"></text></g><g><title>rte_eal_hotplug_add (290 samples, 0.11%)</title><rect x="20" y="469" width="1" height="15" fill="rgb(246,35,41)"/><text x="23.00" y="479.50"></text></g><g><title>pci_probe_all_drivers (290 samples, 0.11%)</title><rect x="20" y="453" width="1" height="15" fill="rgb(213,101,11)"/><text x="23.00" y="463.50"></text></g><g><title>rte_pci_probe_one_driver (290 samples, 0.11%)</title><rect x="20" y="437" width="1" height="15" fill="rgb(205,69,15)"/><text x="23.00" y="447.50"></text></g><g><title>eth_i40e_pci_probe (290 samples, 0.11%)</title><rect x="20" y="421" width="1" height="15" fill="rgb(215,191,21)"/><text x="23.00" y="431.50"></text></g><g><title>rte_eth_dev_pci_generic_probe (290 samples, 0.11%)</title><rect x="20" y="405" width="1" height="15" fill="rgb(223,221,38)"/><text x="23.00" y="415.50"></text></g><g><title>eth_i40e_dev_init (290 samples, 0.11%)</title><rect x="20" y="389" width="1" height="15" fill="rgb(227,68,40)"/><text x="23.00" y="399.50"></text></g><g><title>i40e_set_fc (93 samples, 0.03%)</title><rect x="20" y="373" width="1" height="15" fill="rgb(224,161,36)"/><text x="23.00" y="383.50"></text></g><g><title>i40e_update_link_info (56 samples, 0.02%)</title><rect x="21" y="357" width="0" height="15" fill="rgb(219,100,42)"/><text x="24.00" y="367.50"></text></g><g><title>i40e_aq_get_phy_capabilities (36 samples, 0.01%)</title><rect x="21" y="341" width="0" height="15" fill="rgb(243,127,39)"/><text x="24.00" y="351.50"></text></g><g><title>i40e_asq_send_command (36 samples, 0.01%)</title><rect x="21" y="325" width="0" height="15" fill="rgb(217,26,0)"/><text x="24.00" y="335.50"></text></g><g><title>rte_delay_us_block (36 samples, 0.01%)</title><rect x="21" y="309" width="0" height="15" fill="rgb(211,172,49)"/><text x="24.00" y="319.50"></text></g><g><title>rte_pause (30 samples, 0.01%)</title><rect x="21" y="293" width="0" height="15" fill="rgb(243,186,37)"/><text x="24.00" y="303.50"></text></g><g><title>_mm_pause (30 samples, 0.01%)</title><rect x="21" y="277" width="0" height="15" fill="rgb(219,49,43)"/><text x="24.00" y="287.50"></text></g><g><title>i40e_dev_start (61 samples, 0.02%)</title><rect x="21" y="469" width="0" height="15" fill="rgb(246,16,43)"/><text x="24.00" y="479.50"></text></g><g><title>i40e_dev_switch_queues (32 samples, 0.01%)</title><rect x="21" y="453" width="0" height="15" fill="rgb(210,217,42)"/><text x="24.00" y="463.50"></text></g><g><title>rte_eth_dev_start (83 samples, 0.03%)</title><rect x="21" y="485" width="0" height="15" fill="rgb(214,114,52)"/><text x="24.00" y="495.50"></text></g><g><title>__libc_start_main (400 samples, 0.15%)</title><rect x="20" y="597" width="1" height="15" fill="rgb(210,201,34)"/><text x="23.00" y="607.50"></text></g><g><title>main (400 samples, 0.15%)</title><rect x="20" y="581" width="1" height="15" fill="rgb(241,140,8)"/><text x="23.00" y="591.50"></text></g><g><title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h8a731bc98067ee20 (399 samples, 0.15%)</title><rect x="20" y="565" width="1" height="15" fill="rgb(214,121,43)"/><text x="23.00" y="575.50"></text></g><g><title>pvn_tls::main (399 samples, 0.15%)</title><rect x="20" y="549" width="1" height="15" fill="rgb(215,122,3)"/><text x="23.00" y="559.50"></text></g><g><title>e2d2::scheduler::context::initialize_system (383 samples, 0.14%)</title><rect x="20" y="533" width="1" height="15" fill="rgb(221,27,23)"/><text x="23.00" y="543.50"></text></g><g><title>e2d2::interface::port::phy_port::PmdPort::new_dpdk_port (383 samples, 0.14%)</title><rect x="20" y="517" width="1" height="15" fill="rgb(245,100,38)"/><text x="23.00" y="527.50"></text></g><g><title>init_pmd_port (93 samples, 0.03%)</title><rect x="21" y="501" width="0" height="15" fill="rgb(216,129,50)"/><text x="24.00" y="511.50"></text></g><g><title>_start (401 samples, 0.15%)</title><rect x="20" y="613" width="1" height="15" fill="rgb(237,181,29)"/><text x="23.00" y="623.50"></text></g><g><title>pvn-tls (2,703 samples, 1.00%)</title><rect x="10" y="629" width="11" height="15" fill="rgb(232,96,30)"/><text x="13.00" y="639.50"></text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (392 samples, 0.14%)</title><rect x="21" y="613" width="2" height="15" fill="rgb(239,101,24)"/><text x="24.00" y="623.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (106 samples, 0.04%)</title><rect x="23" y="613" width="1" height="15" fill="rgb(229,92,7)"/><text x="26.00" y="623.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (28 samples, 0.01%)</title><rect x="24" y="597" width="0" height="15" fill="rgb(215,20,47)"/><text x="27.00" y="607.50"></text></g><g><title>[pvn-tls] (116 samples, 0.04%)</title><rect x="24" y="613" width="0" height="15" fill="rgb(253,18,53)"/><text x="27.00" y="623.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (88 samples, 0.03%)</title><rect x="24" y="597" width="0" height="15" fill="rgb(241,126,33)"/><text x="27.00" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (677 samples, 0.25%)</title><rect x="24" y="597" width="3" height="15" fill="rgb(224,82,49)"/><text x="27.00" y="607.50"></text></g><g><title>e2d2::interface::port::&lt;impl e2d2::interface::PacketRx for e2d2::allocators::cache_aligned::CacheAligned&lt;T&gt;&gt;::recv (186 samples, 0.07%)</title><rect x="43" y="485" width="0" height="15" fill="rgb(250,28,49)"/><text x="46.00" y="495.50"></text></g><g><title>&lt;e2d2::interface::port::phy_port::PortQueue as e2d2::interface::PacketRx&gt;::recv (186 samples, 0.07%)</title><rect x="43" y="469" width="0" height="15" fill="rgb(232,175,47)"/><text x="46.00" y="479.50"></text></g><g><title>e2d2::interface::port::phy_port::PortQueue::recv_queue (186 samples, 0.07%)</title><rect x="43" y="453" width="0" height="15" fill="rgb(231,125,37)"/><text x="46.00" y="463.50"></text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (3,819 samples, 1.41%)</title><rect x="27" y="597" width="17" height="15" fill="rgb(212,6,42)"/><text x="30.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (229 samples, 0.08%)</title><rect x="43" y="581" width="1" height="15" fill="rgb(223,183,41)"/><text x="46.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (229 samples, 0.08%)</title><rect x="43" y="565" width="1" height="15" fill="rgb(233,52,32)"/><text x="46.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (229 samples, 0.08%)</title><rect x="43" y="549" width="1" height="15" fill="rgb(223,9,27)"/><text x="46.00" y="559.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (229 samples, 0.08%)</title><rect x="43" y="533" width="1" height="15" fill="rgb(223,200,10)"/><text x="46.00" y="543.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (229 samples, 0.08%)</title><rect x="43" y="517" width="1" height="15" fill="rgb(234,159,28)"/><text x="46.00" y="527.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (229 samples, 0.08%)</title><rect x="43" y="501" width="1" height="15" fill="rgb(214,192,33)"/><text x="46.00" y="511.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (43 samples, 0.02%)</title><rect x="43" y="485" width="1" height="15" fill="rgb(247,32,10)"/><text x="46.00" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (43 samples, 0.02%)</title><rect x="43" y="469" width="1" height="15" fill="rgb(206,12,16)"/><text x="46.00" y="479.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (32 samples, 0.01%)</title><rect x="48" y="581" width="0" height="15" fill="rgb(226,131,20)"/><text x="51.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (32 samples, 0.01%)</title><rect x="48" y="565" width="0" height="15" fill="rgb(218,65,16)"/><text x="51.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (7,580 samples, 2.79%)</title><rect x="44" y="597" width="33" height="15" fill="rgb(217,5,46)"/><text x="47.00" y="607.50">&lt;e..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (6,535 samples, 2.41%)</title><rect x="48" y="581" width="29" height="15" fill="rgb(221,30,37)"/><text x="51.00" y="591.50">&lt;e..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (6,535 samples, 2.41%)</title><rect x="48" y="565" width="29" height="15" fill="rgb(210,2,11)"/><text x="51.00" y="575.50">&lt;e..</text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (469 samples, 0.17%)</title><rect x="75" y="549" width="2" height="15" fill="rgb(207,117,50)"/><text x="78.00" y="559.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::act (469 samples, 0.17%)</title><rect x="75" y="533" width="2" height="15" fill="rgb(240,138,54)"/><text x="78.00" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (110 samples, 0.04%)</title><rect x="81" y="565" width="1" height="15" fill="rgb(228,68,40)"/><text x="84.00" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (110 samples, 0.04%)</title><rect x="81" y="549" width="1" height="15" fill="rgb(205,19,52)"/><text x="84.00" y="559.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (2,010 samples, 0.74%)</title><rect x="81" y="581" width="9" height="15" fill="rgb(232,50,8)"/><text x="84.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (1,900 samples, 0.70%)</title><rect x="82" y="565" width="8" height="15" fill="rgb(213,11,20)"/><text x="85.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (3,282 samples, 1.21%)</title><rect x="77" y="597" width="14" height="15" fill="rgb(244,42,17)"/><text x="80.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (184 samples, 0.07%)</title><rect x="90" y="581" width="1" height="15" fill="rgb(236,85,42)"/><text x="93.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (184 samples, 0.07%)</title><rect x="90" y="565" width="1" height="15" fill="rgb(243,89,50)"/><text x="93.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (451 samples, 0.17%)</title><rect x="91" y="597" width="2" height="15" fill="rgb(239,34,11)"/><text x="94.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (29 samples, 0.01%)</title><rect x="93" y="581" width="0" height="15" fill="rgb(228,202,28)"/><text x="96.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (29 samples, 0.01%)</title><rect x="93" y="565" width="0" height="15" fill="rgb(220,126,5)"/><text x="96.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (4,136 samples, 1.52%)</title><rect x="93" y="597" width="18" height="15" fill="rgb(217,11,39)"/><text x="96.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (335 samples, 0.12%)</title><rect x="109" y="581" width="2" height="15" fill="rgb(252,14,45)"/><text x="112.00" y="591.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (335 samples, 0.12%)</title><rect x="109" y="565" width="2" height="15" fill="rgb(229,73,43)"/><text x="112.00" y="575.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (335 samples, 0.12%)</title><rect x="109" y="549" width="2" height="15" fill="rgb(250,143,13)"/><text x="112.00" y="559.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (335 samples, 0.12%)</title><rect x="109" y="533" width="2" height="15" fill="rgb(220,196,25)"/><text x="112.00" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (335 samples, 0.12%)</title><rect x="109" y="517" width="2" height="15" fill="rgb(251,40,14)"/><text x="112.00" y="527.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (1,727 samples, 0.64%)</title><rect x="121" y="565" width="7" height="15" fill="rgb(247,154,30)"/><text x="124.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (551 samples, 0.20%)</title><rect x="128" y="565" width="3" height="15" fill="rgb(254,217,38)"/><text x="131.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;::execute (6,652 samples, 2.45%)</title><rect x="111" y="597" width="29" height="15" fill="rgb(209,154,14)"/><text x="114.00" y="607.50">&lt;e..</text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::act (4,320 samples, 1.59%)</title><rect x="121" y="581" width="19" height="15" fill="rgb(229,153,50)"/><text x="124.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (2,042 samples, 0.75%)</title><rect x="131" y="565" width="9" height="15" fill="rgb(239,190,38)"/><text x="134.00" y="575.50"></text></g><g><title>__GI___pthread_mutex_lock (751 samples, 0.28%)</title><rect x="140" y="597" width="3" height="15" fill="rgb(226,169,15)"/><text x="143.00" y="607.50"></text></g><g><title>core::ptr::real_drop_in_place (391 samples, 0.14%)</title><rect x="154" y="517" width="2" height="15" fill="rgb(226,119,29)"/><text x="157.00" y="527.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (391 samples, 0.14%)</title><rect x="154" y="501" width="2" height="15" fill="rgb(220,111,37)"/><text x="157.00" y="511.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_unlock (391 samples, 0.14%)</title><rect x="154" y="485" width="2" height="15" fill="rgb(252,132,5)"/><text x="157.00" y="495.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (391 samples, 0.14%)</title><rect x="154" y="469" width="2" height="15" fill="rgb(231,143,46)"/><text x="157.00" y="479.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request (3,269 samples, 1.20%)</title><rect x="143" y="597" width="14" height="15" fill="rgb(227,105,49)"/><text x="146.00" y="607.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_loop (3,269 samples, 1.20%)</title><rect x="143" y="581" width="14" height="15" fill="rgb(227,154,46)"/><text x="146.00" y="591.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_internal (3,269 samples, 1.20%)</title><rect x="143" y="565" width="14" height="15" fill="rgb(208,132,40)"/><text x="146.00" y="575.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (715 samples, 0.26%)</title><rect x="154" y="549" width="3" height="15" fill="rgb(220,158,17)"/><text x="157.00" y="559.50"></text></g><g><title>std::sync::mpsc::sync::Packet&lt;T&gt;::try_recv (715 samples, 0.26%)</title><rect x="154" y="533" width="3" height="15" fill="rgb(238,226,52)"/><text x="157.00" y="543.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (324 samples, 0.12%)</title><rect x="156" y="517" width="1" height="15" fill="rgb(206,10,26)"/><text x="159.00" y="527.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_lock (324 samples, 0.12%)</title><rect x="156" y="501" width="1" height="15" fill="rgb(216,40,44)"/><text x="159.00" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (324 samples, 0.12%)</title><rect x="156" y="485" width="1" height="15" fill="rgb(209,52,46)"/><text x="159.00" y="495.50"></text></g><g><title>i40e_recv_pkts_vec (951 samples, 0.35%)</title><rect x="157" y="597" width="4" height="15" fill="rgb(227,213,43)"/><text x="160.00" y="607.50"></text></g><g><title>recv_pkts (2,763 samples, 1.02%)</title><rect x="161" y="597" width="12" height="15" fill="rgb(218,2,51)"/><text x="164.00" y="607.50"></text></g><g><title>rte_eth_rx_burst (421 samples, 0.16%)</title><rect x="172" y="581" width="1" height="15" fill="rgb(208,51,49)"/><text x="175.00" y="591.50"></text></g><g><title>[unknown] (34,335 samples, 12.65%)</title><rect x="24" y="613" width="149" height="15" fill="rgb(232,44,9)"/><text x="27.00" y="623.50">[unknown]</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1,165 samples, 0.43%)</title><rect x="202" y="405" width="5" height="15" fill="rgb(216,70,34)"/><text x="205.00" y="415.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (716 samples, 0.26%)</title><rect x="204" y="389" width="3" height="15" fill="rgb(214,48,52)"/><text x="207.00" y="399.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (716 samples, 0.26%)</title><rect x="204" y="373" width="3" height="15" fill="rgb(227,149,31)"/><text x="207.00" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (4,489 samples, 1.65%)</title><rect x="215" y="325" width="19" height="15" fill="rgb(226,70,9)"/><text x="218.00" y="335.50"></text></g><g><title>_$LT$e2d2..operators..receive_batch..ReceiveBatch$LT$T$GT$$u20$as$u20$e2d2..operators..act..Act$GT$::act::_$u7b$$u7b$closure$u7d$$u7d$::h6bf44c4cb2b494f6 (4,489 samples, 1.65%)</title><rect x="215" y="309" width="19" height="15" fill="rgb(220,89,0)"/><text x="218.00" y="319.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (516 samples, 0.19%)</title><rect x="234" y="309" width="2" height="15" fill="rgb(249,8,45)"/><text x="237.00" y="319.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::free_packet_batch (443 samples, 0.16%)</title><rect x="235" y="293" width="1" height="15" fill="rgb(228,60,32)"/><text x="238.00" y="303.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (1,721 samples, 0.63%)</title><rect x="242" y="245" width="8" height="15" fill="rgb(238,61,51)"/><text x="245.00" y="255.50"></text></g><g><title>core::sync::atomic::atomic_store (1,721 samples, 0.63%)</title><rect x="242" y="229" width="8" height="15" fill="rgb(252,185,51)"/><text x="245.00" y="239.50"></text></g><g><title>_recv_raw_pkts_vec (3,923 samples, 1.45%)</title><rect x="281" y="197" width="17" height="15" fill="rgb(209,2,18)"/><text x="284.00" y="207.50"></text></g><g><title>rte_prefetch0 (938 samples, 0.35%)</title><rect x="294" y="181" width="4" height="15" fill="rgb(216,122,36)"/><text x="297.00" y="191.50"></text></g><g><title>i40e_recv_pkts_vec (4,315 samples, 1.59%)</title><rect x="279" y="213" width="19" height="15" fill="rgb(228,165,22)"/><text x="282.00" y="223.50"></text></g><g><title>rte_eth_rx_burst (10,606 samples, 3.91%)</title><rect x="252" y="229" width="46" height="15" fill="rgb(235,123,38)"/><text x="255.00" y="239.50">rte_..</text></g><g><title>e2d2::interface::port::&lt;impl e2d2::interface::PacketRx for e2d2::allocators::cache_aligned::CacheAligned&lt;T&gt;&gt;::recv (13,478 samples, 4.96%)</title><rect x="239" y="293" width="59" height="15" fill="rgb(218,228,18)"/><text x="242.00" y="303.50">e2d2::..</text></g><g><title>&lt;e2d2::interface::port::phy_port::PortQueue as e2d2::interface::PacketRx&gt;::recv (13,478 samples, 4.96%)</title><rect x="239" y="277" width="59" height="15" fill="rgb(236,226,54)"/><text x="242.00" y="287.50">&lt;e2d2:..</text></g><g><title>e2d2::interface::port::phy_port::PortQueue::recv_queue (13,478 samples, 4.96%)</title><rect x="239" y="261" width="59" height="15" fill="rgb(226,64,21)"/><text x="242.00" y="271.50">e2d2::..</text></g><g><title>recv_pkts (11,064 samples, 4.08%)</title><rect x="250" y="245" width="48" height="15" fill="rgb(212,75,21)"/><text x="253.00" y="255.50">recv..</text></g><g><title>e2d2::operators::packet_batch::PacketBatch::add_to_batch (428 samples, 0.16%)</title><rect x="298" y="293" width="2" height="15" fill="rgb(214,213,39)"/><text x="301.00" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (428 samples, 0.16%)</title><rect x="298" y="277" width="2" height="15" fill="rgb(218,202,7)"/><text x="301.00" y="287.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (476 samples, 0.18%)</title><rect x="300" y="293" width="2" height="15" fill="rgb(212,86,21)"/><text x="303.00" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (476 samples, 0.18%)</title><rect x="300" y="277" width="2" height="15" fill="rgb(205,173,26)"/><text x="303.00" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (475 samples, 0.17%)</title><rect x="300" y="261" width="2" height="15" fill="rgb(247,169,51)"/><text x="303.00" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (414 samples, 0.15%)</title><rect x="300" y="245" width="2" height="15" fill="rgb(241,37,6)"/><text x="303.00" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (414 samples, 0.15%)</title><rect x="300" y="229" width="2" height="15" fill="rgb(232,3,34)"/><text x="303.00" y="239.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (20,043 samples, 7.38%)</title><rect x="215" y="357" width="87" height="15" fill="rgb(207,135,53)"/><text x="218.00" y="367.50">&lt;e2d2::ope..</text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (20,043 samples, 7.38%)</title><rect x="215" y="341" width="87" height="15" fill="rgb(231,60,40)"/><text x="218.00" y="351.50">&lt;e2d2::ope..</text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (15,554 samples, 5.73%)</title><rect x="234" y="325" width="68" height="15" fill="rgb(226,21,18)"/><text x="237.00" y="335.50">e2d2::o..</text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (15,038 samples, 5.54%)</title><rect x="236" y="309" width="66" height="15" fill="rgb(229,68,40)"/><text x="239.00" y="319.50">e2d2::o..</text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (21,850 samples, 8.05%)</title><rect x="207" y="389" width="95" height="15" fill="rgb(205,130,0)"/><text x="210.00" y="399.50">&lt;e2d2::oper..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (21,850 samples, 8.05%)</title><rect x="207" y="373" width="95" height="15" fill="rgb(225,202,36)"/><text x="210.00" y="383.50">&lt;e2d2::oper..</text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (22,302 samples, 8.22%)</title><rect x="207" y="405" width="97" height="15" fill="rgb(217,199,32)"/><text x="210.00" y="415.50">&lt;e2d2::oper..</text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (422 samples, 0.16%)</title><rect x="302" y="389" width="2" height="15" fill="rgb(235,176,9)"/><text x="305.00" y="399.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (422 samples, 0.16%)</title><rect x="302" y="373" width="2" height="15" fill="rgb(232,76,48)"/><text x="305.00" y="383.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (422 samples, 0.16%)</title><rect x="302" y="357" width="2" height="15" fill="rgb(254,185,42)"/><text x="305.00" y="367.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (422 samples, 0.16%)</title><rect x="302" y="341" width="2" height="15" fill="rgb(209,75,50)"/><text x="305.00" y="351.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (422 samples, 0.16%)</title><rect x="302" y="325" width="2" height="15" fill="rgb(223,36,53)"/><text x="305.00" y="335.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (422 samples, 0.16%)</title><rect x="302" y="309" width="2" height="15" fill="rgb(238,111,41)"/><text x="305.00" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (66 samples, 0.02%)</title><rect x="321" y="309" width="0" height="15" fill="rgb(236,158,42)"/><text x="324.00" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (26 samples, 0.01%)</title><rect x="321" y="293" width="0" height="15" fill="rgb(239,20,21)"/><text x="324.00" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (26 samples, 0.01%)</title><rect x="321" y="277" width="0" height="15" fill="rgb(205,46,11)"/><text x="324.00" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (469 samples, 0.17%)</title><rect x="321" y="325" width="2" height="15" fill="rgb(235,132,2)"/><text x="324.00" y="335.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (403 samples, 0.15%)</title><rect x="321" y="309" width="2" height="15" fill="rgb(225,159,21)"/><text x="324.00" y="319.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (403 samples, 0.15%)</title><rect x="321" y="293" width="2" height="15" fill="rgb(207,30,2)"/><text x="324.00" y="303.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (4,093 samples, 1.51%)</title><rect x="321" y="341" width="17" height="15" fill="rgb(247,62,3)"/><text x="324.00" y="351.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (3,602 samples, 1.33%)</title><rect x="323" y="325" width="15" height="15" fill="rgb(205,104,9)"/><text x="326.00" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (394 samples, 0.15%)</title><rect x="344" y="245" width="1" height="15" fill="rgb(209,45,32)"/><text x="347.00" y="255.50"></text></g><g><title>_$LT$e2d2..operators..receive_batch..ReceiveBatch$LT$T$GT$$u20$as$u20$e2d2..operators..act..Act$GT$::act::_$u7b$$u7b$closure$u7d$$u7d$::h875165831de5abfa (394 samples, 0.15%)</title><rect x="344" y="229" width="1" height="15" fill="rgb(214,121,22)"/><text x="347.00" y="239.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (770 samples, 0.28%)</title><rect x="346" y="229" width="3" height="15" fill="rgb(209,71,51)"/><text x="349.00" y="239.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::free_packet_batch (26 samples, 0.01%)</title><rect x="349" y="213" width="0" height="15" fill="rgb(222,91,8)"/><text x="352.00" y="223.50"></text></g><g><title>core::cmp::min (389 samples, 0.14%)</title><rect x="350" y="181" width="1" height="15" fill="rgb(213,211,47)"/><text x="353.00" y="191.50"></text></g><g><title>core::cmp::Ord::min (389 samples, 0.14%)</title><rect x="350" y="165" width="1" height="15" fill="rgb(219,159,43)"/><text x="353.00" y="175.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::le (188 samples, 0.07%)</title><rect x="350" y="149" width="1" height="15" fill="rgb(227,224,35)"/><text x="353.00" y="159.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (108 samples, 0.04%)</title><rect x="351" y="181" width="1" height="15" fill="rgb(219,85,30)"/><text x="354.00" y="191.50"></text></g><g><title>&lt;e2d2::queues::mpsc_mbuf_queue::MpscConsumer as e2d2::interface::PacketRx&gt;::recv (1,117 samples, 0.41%)</title><rect x="349" y="213" width="5" height="15" fill="rgb(246,95,19)"/><text x="352.00" y="223.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::dequeue (1,117 samples, 0.41%)</title><rect x="349" y="197" width="5" height="15" fill="rgb(228,25,38)"/><text x="352.00" y="207.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (558 samples, 0.21%)</title><rect x="352" y="181" width="2" height="15" fill="rgb(240,95,45)"/><text x="355.00" y="191.50"></text></g><g><title>core::sync::atomic::atomic_load (558 samples, 0.21%)</title><rect x="352" y="165" width="2" height="15" fill="rgb(230,32,14)"/><text x="355.00" y="175.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::add_to_batch (458 samples, 0.17%)</title><rect x="354" y="213" width="2" height="15" fill="rgb(205,210,16)"/><text x="357.00" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (458 samples, 0.17%)</title><rect x="354" y="197" width="2" height="15" fill="rgb(218,71,33)"/><text x="357.00" y="207.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (3,219 samples, 1.19%)</title><rect x="344" y="261" width="14" height="15" fill="rgb(217,154,30)"/><text x="347.00" y="271.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (2,825 samples, 1.04%)</title><rect x="345" y="245" width="13" height="15" fill="rgb(215,102,41)"/><text x="348.00" y="255.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (1,993 samples, 0.73%)</title><rect x="349" y="229" width="9" height="15" fill="rgb(226,182,11)"/><text x="352.00" y="239.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (353 samples, 0.13%)</title><rect x="356" y="213" width="2" height="15" fill="rgb(244,201,22)"/><text x="359.00" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (353 samples, 0.13%)</title><rect x="356" y="197" width="2" height="15" fill="rgb(223,202,23)"/><text x="359.00" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (302 samples, 0.11%)</title><rect x="356" y="181" width="2" height="15" fill="rgb(213,214,49)"/><text x="359.00" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (79 samples, 0.03%)</title><rect x="357" y="165" width="1" height="15" fill="rgb(254,15,3)"/><text x="360.00" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (79 samples, 0.03%)</title><rect x="357" y="149" width="1" height="15" fill="rgb(249,80,15)"/><text x="360.00" y="159.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (3,421 samples, 1.26%)</title><rect x="343" y="277" width="15" height="15" fill="rgb(232,140,15)"/><text x="346.00" y="287.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (4,405 samples, 1.62%)</title><rect x="341" y="309" width="19" height="15" fill="rgb(240,148,22)"/><text x="344.00" y="319.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::act (4,405 samples, 1.62%)</title><rect x="341" y="293" width="19" height="15" fill="rgb(242,84,1)"/><text x="344.00" y="303.50"></text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (534 samples, 0.20%)</title><rect x="358" y="277" width="2" height="15" fill="rgb(232,185,43)"/><text x="361.00" y="287.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (534 samples, 0.20%)</title><rect x="358" y="261" width="2" height="15" fill="rgb(233,53,6)"/><text x="361.00" y="271.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (534 samples, 0.20%)</title><rect x="358" y="245" width="2" height="15" fill="rgb(239,104,17)"/><text x="361.00" y="255.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (534 samples, 0.20%)</title><rect x="358" y="229" width="2" height="15" fill="rgb(233,71,15)"/><text x="361.00" y="239.50"></text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (153 samples, 0.06%)</title><rect x="360" y="309" width="1" height="15" fill="rgb(247,157,26)"/><text x="363.00" y="319.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (153 samples, 0.06%)</title><rect x="360" y="293" width="1" height="15" fill="rgb(238,88,23)"/><text x="363.00" y="303.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (153 samples, 0.06%)</title><rect x="360" y="277" width="1" height="15" fill="rgb(237,95,51)"/><text x="363.00" y="287.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (153 samples, 0.06%)</title><rect x="360" y="261" width="1" height="15" fill="rgb(242,80,28)"/><text x="363.00" y="271.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (153 samples, 0.06%)</title><rect x="360" y="245" width="1" height="15" fill="rgb(234,185,39)"/><text x="363.00" y="255.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (153 samples, 0.06%)</title><rect x="360" y="229" width="1" height="15" fill="rgb(235,69,1)"/><text x="363.00" y="239.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (5,134 samples, 1.89%)</title><rect x="338" y="341" width="23" height="15" fill="rgb(243,133,54)"/><text x="341.00" y="351.50">&lt;..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (5,134 samples, 1.89%)</title><rect x="338" y="325" width="23" height="15" fill="rgb(254,42,15)"/><text x="341.00" y="335.50">&lt;..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (13,027 samples, 4.80%)</title><rect x="304" y="357" width="57" height="15" fill="rgb(221,64,16)"/><text x="307.00" y="367.50">&lt;e2d2:..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (500 samples, 0.18%)</title><rect x="362" y="325" width="2" height="15" fill="rgb(232,219,5)"/><text x="365.00" y="335.50"></text></g><g><title>_$LT$e2d2..operators..receive_batch..ReceiveBatch$LT$T$GT$$u20$as$u20$e2d2..operators..act..Act$GT$::act::_$u7b$$u7b$closure$u7d$$u7d$::h875165831de5abfa (500 samples, 0.18%)</title><rect x="362" y="309" width="2" height="15" fill="rgb(216,75,41)"/><text x="365.00" y="319.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (1,104 samples, 0.41%)</title><rect x="364" y="309" width="5" height="15" fill="rgb(251,193,29)"/><text x="367.00" y="319.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::free_packet_batch (73 samples, 0.03%)</title><rect x="369" y="293" width="0" height="15" fill="rgb(237,132,43)"/><text x="372.00" y="303.50"></text></g><g><title>core::cmp::min (357 samples, 0.13%)</title><rect x="370" y="261" width="2" height="15" fill="rgb(213,39,0)"/><text x="373.00" y="271.50"></text></g><g><title>core::cmp::Ord::min (357 samples, 0.13%)</title><rect x="370" y="245" width="2" height="15" fill="rgb(212,23,33)"/><text x="373.00" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::le (154 samples, 0.06%)</title><rect x="371" y="229" width="1" height="15" fill="rgb(220,128,17)"/><text x="374.00" y="239.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (107 samples, 0.04%)</title><rect x="372" y="261" width="0" height="15" fill="rgb(209,3,25)"/><text x="375.00" y="271.50"></text></g><g><title>&lt;e2d2::queues::mpsc_mbuf_queue::MpscConsumer as e2d2::interface::PacketRx&gt;::recv (629 samples, 0.23%)</title><rect x="370" y="293" width="3" height="15" fill="rgb(240,45,43)"/><text x="373.00" y="303.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::dequeue (629 samples, 0.23%)</title><rect x="370" y="277" width="3" height="15" fill="rgb(243,175,36)"/><text x="373.00" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (99 samples, 0.04%)</title><rect x="372" y="261" width="1" height="15" fill="rgb(217,38,7)"/><text x="375.00" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (99 samples, 0.04%)</title><rect x="372" y="245" width="1" height="15" fill="rgb(252,177,4)"/><text x="375.00" y="255.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::add_to_batch (488 samples, 0.18%)</title><rect x="373" y="293" width="2" height="15" fill="rgb(242,193,29)"/><text x="376.00" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (488 samples, 0.18%)</title><rect x="373" y="277" width="2" height="15" fill="rgb(238,64,15)"/><text x="376.00" y="287.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (3,368 samples, 1.24%)</title><rect x="362" y="341" width="14" height="15" fill="rgb(239,64,44)"/><text x="365.00" y="351.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (2,868 samples, 1.06%)</title><rect x="364" y="325" width="12" height="15" fill="rgb(233,175,36)"/><text x="367.00" y="335.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (1,658 samples, 0.61%)</title><rect x="369" y="309" width="7" height="15" fill="rgb(238,160,3)"/><text x="372.00" y="319.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (367 samples, 0.14%)</title><rect x="375" y="293" width="1" height="15" fill="rgb(252,43,46)"/><text x="378.00" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (367 samples, 0.14%)</title><rect x="375" y="277" width="1" height="15" fill="rgb(219,144,14)"/><text x="378.00" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (319 samples, 0.12%)</title><rect x="375" y="261" width="1" height="15" fill="rgb(217,188,42)"/><text x="378.00" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (107 samples, 0.04%)</title><rect x="376" y="245" width="0" height="15" fill="rgb(207,71,18)"/><text x="379.00" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (107 samples, 0.04%)</title><rect x="376" y="229" width="0" height="15" fill="rgb(212,96,38)"/><text x="379.00" y="239.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (16,677 samples, 6.14%)</title><rect x="304" y="373" width="72" height="15" fill="rgb(228,33,32)"/><text x="307.00" y="383.50">&lt;e2d2::o..</text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (3,599 samples, 1.33%)</title><rect x="361" y="357" width="15" height="15" fill="rgb(254,152,48)"/><text x="364.00" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (111 samples, 0.04%)</title><rect x="389" y="309" width="0" height="15" fill="rgb(254,80,8)"/><text x="392.00" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (67 samples, 0.02%)</title><rect x="389" y="293" width="0" height="15" fill="rgb(208,28,10)"/><text x="392.00" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (67 samples, 0.02%)</title><rect x="389" y="277" width="0" height="15" fill="rgb(229,204,17)"/><text x="392.00" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (563 samples, 0.21%)</title><rect x="389" y="325" width="2" height="15" fill="rgb(214,56,41)"/><text x="392.00" y="335.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (420 samples, 0.15%)</title><rect x="389" y="309" width="2" height="15" fill="rgb(224,3,16)"/><text x="392.00" y="319.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (420 samples, 0.15%)</title><rect x="389" y="293" width="2" height="15" fill="rgb(247,177,24)"/><text x="392.00" y="303.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (364 samples, 0.13%)</title><rect x="397" y="261" width="2" height="15" fill="rgb(252,50,11)"/><text x="400.00" y="271.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::done (364 samples, 0.13%)</title><rect x="397" y="245" width="2" height="15" fill="rgb(244,212,27)"/><text x="400.00" y="255.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::done (40 samples, 0.01%)</title><rect x="399" y="229" width="0" height="15" fill="rgb(250,53,1)"/><text x="402.00" y="239.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (40 samples, 0.01%)</title><rect x="399" y="213" width="0" height="15" fill="rgb(206,151,16)"/><text x="402.00" y="223.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (40 samples, 0.01%)</title><rect x="399" y="197" width="0" height="15" fill="rgb(246,62,32)"/><text x="402.00" y="207.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::free_packet_batch (40 samples, 0.01%)</title><rect x="399" y="181" width="0" height="15" fill="rgb(233,0,53)"/><text x="402.00" y="191.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (643 samples, 0.24%)</title><rect x="396" y="293" width="3" height="15" fill="rgb(212,151,49)"/><text x="399.00" y="303.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (643 samples, 0.24%)</title><rect x="396" y="277" width="3" height="15" fill="rgb(224,225,34)"/><text x="399.00" y="287.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::done (54 samples, 0.02%)</title><rect x="399" y="293" width="0" height="15" fill="rgb(242,22,1)"/><text x="402.00" y="303.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (54 samples, 0.02%)</title><rect x="399" y="277" width="0" height="15" fill="rgb(210,131,36)"/><text x="402.00" y="287.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (54 samples, 0.02%)</title><rect x="399" y="261" width="0" height="15" fill="rgb(245,92,36)"/><text x="402.00" y="271.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::free_packet_batch (54 samples, 0.02%)</title><rect x="399" y="245" width="0" height="15" fill="rgb(209,59,3)"/><text x="402.00" y="255.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (707 samples, 0.26%)</title><rect x="396" y="309" width="3" height="15" fill="rgb(224,73,11)"/><text x="399.00" y="319.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (1,867 samples, 0.69%)</title><rect x="391" y="325" width="8" height="15" fill="rgb(231,43,52)"/><text x="394.00" y="335.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (5,241 samples, 1.93%)</title><rect x="376" y="373" width="23" height="15" fill="rgb(212,206,17)"/><text x="379.00" y="383.50">&lt;..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (4,924 samples, 1.81%)</title><rect x="378" y="357" width="21" height="15" fill="rgb(254,223,39)"/><text x="381.00" y="367.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (4,924 samples, 1.81%)</title><rect x="378" y="341" width="21" height="15" fill="rgb(241,99,30)"/><text x="381.00" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (144 samples, 0.05%)</title><rect x="404" y="309" width="1" height="15" fill="rgb(227,208,29)"/><text x="407.00" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (83 samples, 0.03%)</title><rect x="405" y="293" width="0" height="15" fill="rgb(248,88,2)"/><text x="408.00" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (83 samples, 0.03%)</title><rect x="405" y="277" width="0" height="15" fill="rgb(229,101,25)"/><text x="408.00" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (586 samples, 0.22%)</title><rect x="404" y="325" width="3" height="15" fill="rgb(223,218,15)"/><text x="407.00" y="335.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (442 samples, 0.16%)</title><rect x="405" y="309" width="2" height="15" fill="rgb(218,109,54)"/><text x="408.00" y="319.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (442 samples, 0.16%)</title><rect x="405" y="293" width="2" height="15" fill="rgb(233,65,50)"/><text x="408.00" y="303.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (4,784 samples, 1.76%)</title><rect x="404" y="341" width="20" height="15" fill="rgb(242,87,49)"/><text x="407.00" y="351.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (4,022 samples, 1.48%)</title><rect x="407" y="325" width="17" height="15" fill="rgb(246,94,53)"/><text x="410.00" y="335.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (5,835 samples, 2.15%)</title><rect x="399" y="373" width="25" height="15" fill="rgb(248,136,7)"/><text x="402.00" y="383.50">&lt;..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (4,803 samples, 1.77%)</title><rect x="404" y="357" width="20" height="15" fill="rgb(206,159,53)"/><text x="407.00" y="367.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::act::Act&gt;::send_q (1,177 samples, 0.43%)</title><rect x="424" y="373" width="6" height="15" fill="rgb(234,203,39)"/><text x="427.00" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (449 samples, 0.17%)</title><rect x="428" y="357" width="2" height="15" fill="rgb(228,40,31)"/><text x="431.00" y="367.50"></text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;::execute (29,150 samples, 10.74%)</title><rect x="304" y="405" width="126" height="15" fill="rgb(249,90,12)"/><text x="307.00" y="415.50">&lt;e2d2::operator..</text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::act (29,131 samples, 10.73%)</title><rect x="304" y="389" width="126" height="15" fill="rgb(235,97,49)"/><text x="307.00" y="399.50">&lt;e2d2::operator..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (201 samples, 0.07%)</title><rect x="430" y="373" width="0" height="15" fill="rgb(240,224,45)"/><text x="433.00" y="383.50"></text></g><g><title>_$LT$e2d2..operators..send_batch..SendBatch$LT$Port$C$V$GT$$u20$as$u20$e2d2..operators..act..Act$GT$::act::_$u7b$$u7b$closure$u7d$$u7d$::hd5577d61cee62b86 (201 samples, 0.07%)</title><rect x="430" y="357" width="0" height="15" fill="rgb(234,133,31)"/><text x="433.00" y="367.50"></text></g><g><title>e2d2::utils::asm::rdtsc_unsafe (9,642 samples, 3.55%)</title><rect x="430" y="405" width="42" height="15" fill="rgb(210,125,2)"/><text x="433.00" y="415.50">e2d..</text></g><g><title>std::sys_common::mutex::Mutex::raw_unlock (13,436 samples, 4.95%)</title><rect x="480" y="341" width="58" height="15" fill="rgb(249,28,36)"/><text x="483.00" y="351.50">std::s..</text></g><g><title>std::sys::unix::mutex::Mutex::unlock (13,436 samples, 4.95%)</title><rect x="480" y="325" width="58" height="15" fill="rgb(232,218,18)"/><text x="483.00" y="335.50">std::s..</text></g><g><title>__GI___pthread_mutex_unlock (13,433 samples, 4.95%)</title><rect x="480" y="309" width="58" height="15" fill="rgb(229,133,32)"/><text x="483.00" y="319.50">__GI__..</text></g><g><title>__pthread_mutex_unlock_usercnt (12,725 samples, 4.69%)</title><rect x="483" y="293" width="55" height="15" fill="rgb(251,162,51)"/><text x="486.00" y="303.50">__pth..</text></g><g><title>core::ptr::real_drop_in_place (13,571 samples, 5.00%)</title><rect x="480" y="373" width="59" height="15" fill="rgb(206,152,34)"/><text x="483.00" y="383.50">core::..</text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13,571 samples, 5.00%)</title><rect x="480" y="357" width="59" height="15" fill="rgb(229,37,10)"/><text x="483.00" y="367.50">&lt;std::..</text></g><g><title>std::sys_common::poison::Flag::done (106 samples, 0.04%)</title><rect x="538" y="341" width="1" height="15" fill="rgb(239,191,54)"/><text x="541.00" y="351.50"></text></g><g><title>std::thread::panicking (106 samples, 0.04%)</title><rect x="538" y="325" width="1" height="15" fill="rgb(216,17,54)"/><text x="541.00" y="335.50"></text></g><g><title>std::panicking::panicking (106 samples, 0.04%)</title><rect x="538" y="309" width="1" height="15" fill="rgb(225,156,33)"/><text x="541.00" y="319.50"></text></g><g><title>std::panicking::update_panic_count (106 samples, 0.04%)</title><rect x="538" y="293" width="1" height="15" fill="rgb(209,70,33)"/><text x="541.00" y="303.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (106 samples, 0.04%)</title><rect x="538" y="277" width="1" height="15" fill="rgb(236,133,53)"/><text x="541.00" y="287.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (106 samples, 0.04%)</title><rect x="538" y="261" width="1" height="15" fill="rgb(228,55,23)"/><text x="541.00" y="271.50"></text></g><g><title>std::panicking::update_panic_count::_$u7b$$u7b$closure$u7d$$u7d$::h93a68fffdc8624a0 (106 samples, 0.04%)</title><rect x="538" y="245" width="1" height="15" fill="rgb(230,94,6)"/><text x="541.00" y="255.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (106 samples, 0.04%)</title><rect x="538" y="229" width="1" height="15" fill="rgb(225,210,11)"/><text x="541.00" y="239.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (106 samples, 0.04%)</title><rect x="538" y="213" width="1" height="15" fill="rgb(232,157,48)"/><text x="541.00" y="223.50"></text></g><g><title>core::mem::replace (106 samples, 0.04%)</title><rect x="538" y="197" width="1" height="15" fill="rgb(218,99,19)"/><text x="541.00" y="207.50"></text></g><g><title>core::mem::swap (106 samples, 0.04%)</title><rect x="538" y="181" width="1" height="15" fill="rgb(248,145,41)"/><text x="541.00" y="191.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (106 samples, 0.04%)</title><rect x="538" y="165" width="1" height="15" fill="rgb(244,135,32)"/><text x="541.00" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (106 samples, 0.04%)</title><rect x="538" y="149" width="1" height="15" fill="rgb(206,74,41)"/><text x="541.00" y="159.50"></text></g><g><title>std::sys_common::poison::Flag::get (404 samples, 0.15%)</title><rect x="542" y="325" width="2" height="15" fill="rgb(253,16,41)"/><text x="545.00" y="335.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (404 samples, 0.15%)</title><rect x="542" y="309" width="2" height="15" fill="rgb(207,219,8)"/><text x="545.00" y="319.50"></text></g><g><title>core::sync::atomic::atomic_load (400 samples, 0.15%)</title><rect x="542" y="293" width="2" height="15" fill="rgb(235,150,27)"/><text x="545.00" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (388 samples, 0.14%)</title><rect x="544" y="229" width="1" height="15" fill="rgb(210,30,22)"/><text x="547.00" y="239.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (883 samples, 0.33%)</title><rect x="542" y="357" width="4" height="15" fill="rgb(207,176,21)"/><text x="545.00" y="367.50"></text></g><g><title>std::sys_common::poison::Flag::borrow (883 samples, 0.33%)</title><rect x="542" y="341" width="4" height="15" fill="rgb(227,25,43)"/><text x="545.00" y="351.50"></text></g><g><title>std::thread::panicking (479 samples, 0.18%)</title><rect x="544" y="325" width="2" height="15" fill="rgb(244,100,53)"/><text x="547.00" y="335.50"></text></g><g><title>std::panicking::panicking (479 samples, 0.18%)</title><rect x="544" y="309" width="2" height="15" fill="rgb(253,1,37)"/><text x="547.00" y="319.50"></text></g><g><title>std::panicking::update_panic_count (471 samples, 0.17%)</title><rect x="544" y="293" width="2" height="15" fill="rgb(238,223,13)"/><text x="547.00" y="303.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (471 samples, 0.17%)</title><rect x="544" y="277" width="2" height="15" fill="rgb(207,147,4)"/><text x="547.00" y="287.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (471 samples, 0.17%)</title><rect x="544" y="261" width="2" height="15" fill="rgb(208,88,30)"/><text x="547.00" y="271.50"></text></g><g><title>std::panicking::update_panic_count::_$u7b$$u7b$closure$u7d$$u7d$::h93a68fffdc8624a0 (438 samples, 0.16%)</title><rect x="544" y="245" width="2" height="15" fill="rgb(209,94,0)"/><text x="547.00" y="255.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (50 samples, 0.02%)</title><rect x="545" y="229" width="1" height="15" fill="rgb(236,32,47)"/><text x="548.00" y="239.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (50 samples, 0.02%)</title><rect x="545" y="213" width="1" height="15" fill="rgb(253,14,20)"/><text x="548.00" y="223.50"></text></g><g><title>core::mem::replace (50 samples, 0.02%)</title><rect x="545" y="197" width="1" height="15" fill="rgb(210,148,1)"/><text x="548.00" y="207.50"></text></g><g><title>core::mem::swap (50 samples, 0.02%)</title><rect x="545" y="181" width="1" height="15" fill="rgb(219,21,7)"/><text x="548.00" y="191.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (50 samples, 0.02%)</title><rect x="545" y="165" width="1" height="15" fill="rgb(254,104,42)"/><text x="548.00" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (50 samples, 0.02%)</title><rect x="545" y="149" width="1" height="15" fill="rgb(242,99,9)"/><text x="548.00" y="159.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (29,637 samples, 10.92%)</title><rect x="472" y="405" width="129" height="15" fill="rgb(234,154,1)"/><text x="475.00" y="415.50">std::sync::mpsc:..</text></g><g><title>std::sync::mpsc::sync::Packet&lt;T&gt;::try_recv (28,368 samples, 10.45%)</title><rect x="478" y="389" width="123" height="15" fill="rgb(206,167,26)"/><text x="481.00" y="399.50">std::sync::mpsc..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (14,363 samples, 5.29%)</title><rect x="539" y="373" width="62" height="15" fill="rgb(217,203,32)"/><text x="542.00" y="383.50">std::s..</text></g><g><title>std::sys_common::mutex::Mutex::raw_lock (12,768 samples, 4.70%)</title><rect x="546" y="357" width="55" height="15" fill="rgb(229,123,14)"/><text x="549.00" y="367.50">std::..</text></g><g><title>std::sys::unix::mutex::Mutex::lock (12,768 samples, 4.70%)</title><rect x="546" y="341" width="55" height="15" fill="rgb(223,54,46)"/><text x="549.00" y="351.50">std::..</text></g><g><title>__GI___pthread_mutex_lock (12,767 samples, 4.70%)</title><rect x="546" y="325" width="55" height="15" fill="rgb(216,229,12)"/><text x="549.00" y="335.50">__GI_..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request (98,426 samples, 36.26%)</title><rect x="173" y="453" width="428" height="15" fill="rgb(247,10,24)"/><text x="176.00" y="463.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_loop (98,425 samples, 36.26%)</title><rect x="173" y="437" width="428" height="15" fill="rgb(224,77,33)"/><text x="176.00" y="447.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_internal (97,664 samples, 35.98%)</title><rect x="177" y="421" width="424" height="15" fill="rgb(245,27,10)"/><text x="180.00" y="431.50">e2d2::scheduler::standalone_scheduler::StandaloneSchedule..</text></g><g><title>__GI___clone (98,441 samples, 36.26%)</title><rect x="173" y="613" width="428" height="15" fill="rgb(212,99,51)"/><text x="176.00" y="623.50">__GI___clone</text></g><g><title>start_thread (98,441 samples, 36.26%)</title><rect x="173" y="597" width="428" height="15" fill="rgb(240,87,32)"/><text x="176.00" y="607.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (98,441 samples, 36.26%)</title><rect x="173" y="581" width="428" height="15" fill="rgb(227,200,9)"/><text x="176.00" y="591.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys_common::thread::start_thread (98,441 samples, 36.26%)</title><rect x="173" y="565" width="428" height="15" fill="rgb(249,104,42)"/><text x="176.00" y="575.50">std::sys_common::thread::start_thread</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (98,441 samples, 36.26%)</title><rect x="173" y="549" width="428" height="15" fill="rgb(235,180,39)"/><text x="176.00" y="559.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (98,441 samples, 36.26%)</title><rect x="173" y="533" width="428" height="15" fill="rgb(223,152,27)"/><text x="176.00" y="543.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::..</text></g><g><title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h83d6f0cf65a68686 (98,441 samples, 36.26%)</title><rect x="173" y="517" width="428" height="15" fill="rgb(235,77,33)"/><text x="176.00" y="527.50">core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shi..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (98,433 samples, 36.26%)</title><rect x="173" y="501" width="428" height="15" fill="rgb(245,199,20)"/><text x="176.00" y="511.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>e2d2::scheduler::context::NetBricksContext::start_scheduler::_$u7b$$u7b$closure$u7d$$u7d$::hb2befc178c075dc6 (98,433 samples, 36.26%)</title><rect x="173" y="485" width="428" height="15" fill="rgb(251,215,47)"/><text x="176.00" y="495.50">e2d2::scheduler::context::NetBricksContext::start_schedule..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_requests (98,433 samples, 36.26%)</title><rect x="173" y="469" width="428" height="15" fill="rgb(226,108,9)"/><text x="176.00" y="479.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler..</text></g><g><title>_fini (27 samples, 0.01%)</title><rect x="601" y="613" width="0" height="15" fill="rgb(251,71,52)"/><text x="604.00" y="623.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (27 samples, 0.01%)</title><rect x="601" y="597" width="0" height="15" fill="rgb(214,199,6)"/><text x="604.00" y="607.50"></text></g><g><title>i40e_recv_pkts_vec (915 samples, 0.34%)</title><rect x="601" y="613" width="4" height="15" fill="rgb(226,113,28)"/><text x="604.00" y="623.50"></text></g><g><title>sched-2 (134,350 samples, 49.49%)</title><rect x="21" y="629" width="584" height="15" fill="rgb(208,137,47)"/><text x="24.00" y="639.50">sched-2</text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (95 samples, 0.03%)</title><rect x="605" y="613" width="1" height="15" fill="rgb(214,148,26)"/><text x="608.00" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (147 samples, 0.05%)</title><rect x="606" y="597" width="1" height="15" fill="rgb(226,105,46)"/><text x="609.00" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut (64 samples, 0.02%)</title><rect x="613" y="581" width="1" height="15" fill="rgb(213,206,27)"/><text x="616.00" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut (84 samples, 0.03%)</title><rect x="614" y="549" width="0" height="15" fill="rgb(240,100,13)"/><text x="617.00" y="559.50"></text></g><g><title>e2d2::interface::port::&lt;impl e2d2::interface::PacketRx for e2d2::allocators::cache_aligned::CacheAligned&lt;T&gt;&gt;::recv (55 samples, 0.02%)</title><rect x="614" y="485" width="0" height="15" fill="rgb(244,45,43)"/><text x="617.00" y="495.50"></text></g><g><title>&lt;e2d2::interface::port::phy_port::PortQueue as e2d2::interface::PacketRx&gt;::recv (55 samples, 0.02%)</title><rect x="614" y="469" width="0" height="15" fill="rgb(247,124,53)"/><text x="617.00" y="479.50"></text></g><g><title>e2d2::interface::port::phy_port::PortQueue::recv_queue (55 samples, 0.02%)</title><rect x="614" y="453" width="0" height="15" fill="rgb(226,14,33)"/><text x="617.00" y="463.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (148 samples, 0.05%)</title><rect x="614" y="581" width="0" height="15" fill="rgb(207,73,32)"/><text x="617.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (148 samples, 0.05%)</title><rect x="614" y="565" width="0" height="15" fill="rgb(227,192,27)"/><text x="617.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (64 samples, 0.02%)</title><rect x="614" y="549" width="0" height="15" fill="rgb(234,201,15)"/><text x="617.00" y="559.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (64 samples, 0.02%)</title><rect x="614" y="533" width="0" height="15" fill="rgb(240,0,48)"/><text x="617.00" y="543.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (64 samples, 0.02%)</title><rect x="614" y="517" width="0" height="15" fill="rgb(228,81,19)"/><text x="617.00" y="527.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (64 samples, 0.02%)</title><rect x="614" y="501" width="0" height="15" fill="rgb(251,194,40)"/><text x="617.00" y="511.50"></text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (1,854 samples, 0.68%)</title><rect x="607" y="597" width="8" height="15" fill="rgb(238,0,22)"/><text x="610.00" y="607.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscProducer::enqueue_one (39 samples, 0.01%)</title><rect x="614" y="581" width="1" height="15" fill="rgb(251,224,38)"/><text x="617.00" y="591.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::enqueue_one (39 samples, 0.01%)</title><rect x="614" y="565" width="1" height="15" fill="rgb(221,210,16)"/><text x="617.00" y="575.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::enqueue (39 samples, 0.01%)</title><rect x="614" y="549" width="1" height="15" fill="rgb(236,117,3)"/><text x="617.00" y="559.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::enqueue_sp (39 samples, 0.01%)</title><rect x="614" y="533" width="1" height="15" fill="rgb(235,16,54)"/><text x="617.00" y="543.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut (117 samples, 0.04%)</title><rect x="622" y="549" width="0" height="15" fill="rgb(211,37,47)"/><text x="625.00" y="559.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (1,841 samples, 0.68%)</title><rect x="615" y="597" width="8" height="15" fill="rgb(250,89,5)"/><text x="618.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (1,657 samples, 0.61%)</title><rect x="615" y="581" width="8" height="15" fill="rgb(209,21,36)"/><text x="618.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (1,657 samples, 0.61%)</title><rect x="615" y="565" width="8" height="15" fill="rgb(223,8,0)"/><text x="618.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (111 samples, 0.04%)</title><rect x="622" y="549" width="1" height="15" fill="rgb(233,116,30)"/><text x="625.00" y="559.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::act (111 samples, 0.04%)</title><rect x="622" y="533" width="1" height="15" fill="rgb(205,131,20)"/><text x="625.00" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (27 samples, 0.01%)</title><rect x="624" y="565" width="0" height="15" fill="rgb(252,19,39)"/><text x="627.00" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (27 samples, 0.01%)</title><rect x="624" y="549" width="0" height="15" fill="rgb(230,42,37)"/><text x="627.00" y="559.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (588 samples, 0.22%)</title><rect x="624" y="581" width="2" height="15" fill="rgb(205,47,3)"/><text x="627.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (561 samples, 0.21%)</title><rect x="624" y="565" width="2" height="15" fill="rgb(209,37,46)"/><text x="627.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (936 samples, 0.34%)</title><rect x="623" y="597" width="4" height="15" fill="rgb(222,200,36)"/><text x="626.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (72 samples, 0.03%)</title><rect x="626" y="581" width="1" height="15" fill="rgb(244,179,45)"/><text x="629.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (72 samples, 0.03%)</title><rect x="626" y="565" width="1" height="15" fill="rgb(254,196,31)"/><text x="629.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (136 samples, 0.05%)</title><rect x="627" y="597" width="0" height="15" fill="rgb(253,79,43)"/><text x="630.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (1,023 samples, 0.38%)</title><rect x="627" y="597" width="5" height="15" fill="rgb(252,168,32)"/><text x="630.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (96 samples, 0.04%)</title><rect x="631" y="581" width="1" height="15" fill="rgb(241,142,7)"/><text x="634.00" y="591.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (96 samples, 0.04%)</title><rect x="631" y="565" width="1" height="15" fill="rgb(235,56,42)"/><text x="634.00" y="575.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (96 samples, 0.04%)</title><rect x="631" y="549" width="1" height="15" fill="rgb(231,36,45)"/><text x="634.00" y="559.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (96 samples, 0.04%)</title><rect x="631" y="533" width="1" height="15" fill="rgb(246,84,46)"/><text x="634.00" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (96 samples, 0.04%)</title><rect x="631" y="517" width="1" height="15" fill="rgb(225,192,24)"/><text x="634.00" y="527.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (506 samples, 0.19%)</title><rect x="635" y="565" width="2" height="15" fill="rgb(223,192,21)"/><text x="638.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (184 samples, 0.07%)</title><rect x="637" y="565" width="1" height="15" fill="rgb(253,190,15)"/><text x="640.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (511 samples, 0.19%)</title><rect x="638" y="565" width="2" height="15" fill="rgb(224,12,49)"/><text x="641.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;::execute (1,916 samples, 0.71%)</title><rect x="632" y="597" width="8" height="15" fill="rgb(209,12,44)"/><text x="635.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::act (1,213 samples, 0.45%)</title><rect x="635" y="581" width="5" height="15" fill="rgb(215,146,16)"/><text x="638.00" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (339 samples, 0.12%)</title><rect x="646" y="581" width="1" height="15" fill="rgb(244,221,20)"/><text x="649.00" y="591.50"></text></g><g><title>core::hash::Hasher::write_u16 (339 samples, 0.12%)</title><rect x="646" y="565" width="1" height="15" fill="rgb(247,31,10)"/><text x="649.00" y="575.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (339 samples, 0.12%)</title><rect x="646" y="549" width="1" height="15" fill="rgb(225,62,30)"/><text x="649.00" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (313 samples, 0.12%)</title><rect x="647" y="581" width="2" height="15" fill="rgb(215,214,7)"/><text x="650.00" y="591.50"></text></g><g><title>core::hash::Hasher::write_u32 (313 samples, 0.12%)</title><rect x="647" y="565" width="2" height="15" fill="rgb(254,15,45)"/><text x="650.00" y="575.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (313 samples, 0.12%)</title><rect x="647" y="549" width="2" height="15" fill="rgb(228,37,37)"/><text x="650.00" y="559.50"></text></g><g><title>&lt;e2d2::utils::flow::Flow as core::hash::Hash&gt;::hash (2,149 samples, 0.79%)</title><rect x="640" y="597" width="9" height="15" fill="rgb(214,147,6)"/><text x="643.00" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash (181 samples, 0.07%)</title><rect x="649" y="581" width="0" height="15" fill="rgb(237,101,35)"/><text x="652.00" y="591.50"></text></g><g><title>core::hash::Hasher::write_u8 (181 samples, 0.07%)</title><rect x="649" y="565" width="0" height="15" fill="rgb(221,183,38)"/><text x="652.00" y="575.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (181 samples, 0.07%)</title><rect x="649" y="549" width="0" height="15" fill="rgb(214,12,5)"/><text x="652.00" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2,180 samples, 0.80%)</title><rect x="649" y="597" width="10" height="15" fill="rgb(219,14,41)"/><text x="652.00" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,591 samples, 0.59%)</title><rect x="652" y="581" width="7" height="15" fill="rgb(252,50,21)"/><text x="655.00" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,591 samples, 0.59%)</title><rect x="652" y="565" width="7" height="15" fill="rgb(215,69,49)"/><text x="655.00" y="575.50"></text></g><g><title>__GI___pthread_mutex_lock (209 samples, 0.08%)</title><rect x="659" y="597" width="1" height="15" fill="rgb(253,70,49)"/><text x="662.00" y="607.50"></text></g><g><title>core::iter::adapters::Rev&lt;T&gt;::new (1,274 samples, 0.47%)</title><rect x="660" y="597" width="5" height="15" fill="rgb(250,159,45)"/><text x="663.00" y="607.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::enqueue_mbufs (114 samples, 0.04%)</title><rect x="665" y="597" width="1" height="15" fill="rgb(243,223,9)"/><text x="668.00" y="607.50"></text></g><g><title>i40e_recv_pkts_vec (617 samples, 0.23%)</title><rect x="666" y="597" width="3" height="15" fill="rgb(217,136,32)"/><text x="669.00" y="607.50"></text></g><g><title>_recv_raw_pkts_vec (46 samples, 0.02%)</title><rect x="668" y="581" width="1" height="15" fill="rgb(224,0,5)"/><text x="671.00" y="591.50"></text></g><g><title>i40e_rxq_rearm (46 samples, 0.02%)</title><rect x="668" y="565" width="1" height="15" fill="rgb(235,227,11)"/><text x="671.00" y="575.50"></text></g><g><title>rte_mempool_get_bulk (46 samples, 0.02%)</title><rect x="668" y="549" width="1" height="15" fill="rgb(213,55,51)"/><text x="671.00" y="559.50"></text></g><g><title>rte_mempool_generic_get (44 samples, 0.02%)</title><rect x="668" y="533" width="1" height="15" fill="rgb(208,173,42)"/><text x="671.00" y="543.50"></text></g><g><title>__mempool_generic_get (44 samples, 0.02%)</title><rect x="668" y="517" width="1" height="15" fill="rgb(233,0,36)"/><text x="671.00" y="527.50"></text></g><g><title>rte_mempool_ops_dequeue_bulk (44 samples, 0.02%)</title><rect x="668" y="501" width="1" height="15" fill="rgb(219,31,43)"/><text x="671.00" y="511.50"></text></g><g><title>pvn_tls::nf::lib::on_frame (1,235 samples, 0.45%)</title><rect x="669" y="597" width="5" height="15" fill="rgb(234,75,18)"/><text x="672.00" y="607.50"></text></g><g><title>pvn_tls::nf::lib::is_client_hello (159 samples, 0.06%)</title><rect x="679" y="581" width="1" height="15" fill="rgb(205,14,19)"/><text x="682.00" y="591.50"></text></g><g><title>pvn_tls::nf::lib::is_server_hello (37 samples, 0.01%)</title><rect x="680" y="581" width="0" height="15" fill="rgb(205,162,46)"/><text x="683.00" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (96 samples, 0.04%)</title><rect x="680" y="581" width="0" height="15" fill="rgb(254,169,5)"/><text x="683.00" y="591.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (96 samples, 0.04%)</title><rect x="680" y="565" width="0" height="15" fill="rgb(224,146,17)"/><text x="683.00" y="575.50"></text></g><g><title>hashbrown::map::make_hash (96 samples, 0.04%)</title><rect x="680" y="549" width="0" height="15" fill="rgb(233,68,31)"/><text x="683.00" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (810 samples, 0.30%)</title><rect x="680" y="469" width="4" height="15" fill="rgb(232,117,17)"/><text x="683.00" y="479.50"></text></g><g><title>core::hash::Hasher::write_i32 (810 samples, 0.30%)</title><rect x="680" y="453" width="4" height="15" fill="rgb(235,155,52)"/><text x="683.00" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (246 samples, 0.09%)</title><rect x="684" y="469" width="1" height="15" fill="rgb(226,200,38)"/><text x="687.00" y="479.50"></text></g><g><title>core::hash::Hasher::write_u16 (246 samples, 0.09%)</title><rect x="684" y="453" width="1" height="15" fill="rgb(209,17,1)"/><text x="687.00" y="463.50"></text></g><g><title>pvn_tls::nf::lib::validator::_$u7b$$u7b$closure$u7d$$u7d$::h7a1d2c2faf5027ec (2,665 samples, 0.98%)</title><rect x="674" y="597" width="12" height="15" fill="rgb(210,6,10)"/><text x="677.00" y="607.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1,252 samples, 0.46%)</title><rect x="680" y="581" width="6" height="15" fill="rgb(208,140,17)"/><text x="683.00" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (1,252 samples, 0.46%)</title><rect x="680" y="565" width="6" height="15" fill="rgb(246,194,39)"/><text x="683.00" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (1,252 samples, 0.46%)</title><rect x="680" y="549" width="6" height="15" fill="rgb(233,211,37)"/><text x="683.00" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (1,252 samples, 0.46%)</title><rect x="680" y="533" width="6" height="15" fill="rgb(228,142,29)"/><text x="683.00" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (1,252 samples, 0.46%)</title><rect x="680" y="517" width="6" height="15" fill="rgb(244,91,4)"/><text x="683.00" y="527.50"></text></g><g><title>hashbrown::map::make_hash (1,252 samples, 0.46%)</title><rect x="680" y="501" width="6" height="15" fill="rgb(235,89,24)"/><text x="683.00" y="511.50"></text></g><g><title>&lt;e2d2::utils::flow::Flow as core::hash::Hash&gt;::hash (1,252 samples, 0.46%)</title><rect x="680" y="485" width="6" height="15" fill="rgb(209,100,34)"/><text x="683.00" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash (196 samples, 0.07%)</title><rect x="685" y="469" width="1" height="15" fill="rgb(240,52,39)"/><text x="688.00" y="479.50"></text></g><g><title>core::hash::Hasher::write_u8 (196 samples, 0.07%)</title><rect x="685" y="453" width="1" height="15" fill="rgb(243,149,39)"/><text x="688.00" y="463.50"></text></g><g><title>recv_pkts (1,175 samples, 0.43%)</title><rect x="686" y="597" width="5" height="15" fill="rgb(254,105,10)"/><text x="689.00" y="607.50"></text></g><g><title>rte_eth_rx_burst (105 samples, 0.04%)</title><rect x="690" y="581" width="1" height="15" fill="rgb(210,88,9)"/><text x="693.00" y="591.50"></text></g><g><title>rustls::msgs::codec::Codec::read_bytes (2,898 samples, 1.07%)</title><rect x="691" y="597" width="12" height="15" fill="rgb(232,13,12)"/><text x="694.00" y="607.50"></text></g><g><title>[unknown] (22,467 samples, 8.28%)</title><rect x="606" y="613" width="98" height="15" fill="rgb(240,2,48)"/><text x="609.00" y="623.50">[unknown]</text></g><g><title>send_pkts (37 samples, 0.01%)</title><rect x="703" y="597" width="1" height="15" fill="rgb(207,182,13)"/><text x="706.00" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (314 samples, 0.12%)</title><rect x="712" y="405" width="1" height="15" fill="rgb(224,122,0)"/><text x="715.00" y="415.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (190 samples, 0.07%)</title><rect x="712" y="389" width="1" height="15" fill="rgb(236,219,29)"/><text x="715.00" y="399.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (190 samples, 0.07%)</title><rect x="712" y="373" width="1" height="15" fill="rgb(253,58,28)"/><text x="715.00" y="383.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut (622 samples, 0.23%)</title><rect x="714" y="389" width="2" height="15" fill="rgb(225,227,45)"/><text x="717.00" y="399.50"></text></g><g><title>pvn_tls::nf::lib::validator::_$u7b$$u7b$closure$u7d$$u7d$::ha9286b45ddb48cba (545 samples, 0.20%)</title><rect x="714" y="373" width="2" height="15" fill="rgb(210,114,32)"/><text x="717.00" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (116 samples, 0.04%)</title><rect x="716" y="389" width="1" height="15" fill="rgb(235,188,46)"/><text x="719.00" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (116 samples, 0.04%)</title><rect x="716" y="373" width="1" height="15" fill="rgb(238,193,22)"/><text x="719.00" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (116 samples, 0.04%)</title><rect x="716" y="357" width="1" height="15" fill="rgb(210,229,49)"/><text x="719.00" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (116 samples, 0.04%)</title><rect x="716" y="341" width="1" height="15" fill="rgb(215,14,51)"/><text x="719.00" y="351.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::act::Act&gt;::clear_packets (155 samples, 0.06%)</title><rect x="717" y="389" width="0" height="15" fill="rgb(214,45,34)"/><text x="720.00" y="399.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::consume_batch (155 samples, 0.06%)</title><rect x="717" y="373" width="0" height="15" fill="rgb(205,186,2)"/><text x="720.00" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (155 samples, 0.06%)</title><rect x="717" y="357" width="0" height="15" fill="rgb(230,202,32)"/><text x="720.00" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut (11,626 samples, 4.28%)</title><rect x="720" y="357" width="51" height="15" fill="rgb(231,123,36)"/><text x="723.00" y="367.50">&lt;allo..</text></g><g><title>pvn_tls::nf::lib::validator::_$u7b$$u7b$closure$u7d$$u7d$::he6137436430a8863 (11,458 samples, 4.22%)</title><rect x="721" y="341" width="50" height="15" fill="rgb(230,216,21)"/><text x="724.00" y="351.50">pvn_t..</text></g><g><title>e2d2::headers::mac::MacHeader::swap_addresses (11,413 samples, 4.20%)</title><rect x="721" y="325" width="50" height="15" fill="rgb(252,105,33)"/><text x="724.00" y="335.50">e2d2:..</text></g><g><title>e2d2::headers::mac::MacAddress::copy_address (11,413 samples, 4.20%)</title><rect x="721" y="309" width="50" height="15" fill="rgb(226,88,47)"/><text x="724.00" y="319.50">e2d2:..</text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (11,413 samples, 4.20%)</title><rect x="721" y="293" width="50" height="15" fill="rgb(249,8,29)"/><text x="724.00" y="303.50">core:..</text></g><g><title>core::intrinsics::copy_nonoverlapping (11,413 samples, 4.20%)</title><rect x="721" y="277" width="50" height="15" fill="rgb(240,69,1)"/><text x="724.00" y="287.50">core:..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (126 samples, 0.05%)</title><rect x="771" y="325" width="0" height="15" fill="rgb(252,173,48)"/><text x="774.00" y="335.50"></text></g><g><title>_$LT$e2d2..operators..receive_batch..ReceiveBatch$LT$T$GT$$u20$as$u20$e2d2..operators..act..Act$GT$::act::_$u7b$$u7b$closure$u7d$$u7d$::h6bf44c4cb2b494f6 (126 samples, 0.05%)</title><rect x="771" y="309" width="0" height="15" fill="rgb(239,11,51)"/><text x="774.00" y="319.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (144 samples, 0.05%)</title><rect x="771" y="309" width="1" height="15" fill="rgb(236,108,24)"/><text x="774.00" y="319.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::free_packet_batch (110 samples, 0.04%)</title><rect x="772" y="293" width="0" height="15" fill="rgb(245,161,7)"/><text x="775.00" y="303.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (508 samples, 0.19%)</title><rect x="774" y="245" width="2" height="15" fill="rgb(217,22,33)"/><text x="777.00" y="255.50"></text></g><g><title>core::sync::atomic::atomic_store (508 samples, 0.19%)</title><rect x="774" y="229" width="2" height="15" fill="rgb(224,54,41)"/><text x="777.00" y="239.50"></text></g><g><title>_mm_add_epi16 (714 samples, 0.26%)</title><rect x="793" y="181" width="3" height="15" fill="rgb(207,86,18)"/><text x="796.00" y="191.50"></text></g><g><title>_mm_blend_epi16 (27 samples, 0.01%)</title><rect x="796" y="181" width="1" height="15" fill="rgb(214,159,25)"/><text x="799.00" y="191.50"></text></g><g><title>_mm_loadu_si128 (1,568 samples, 0.58%)</title><rect x="797" y="181" width="6" height="15" fill="rgb(226,141,8)"/><text x="800.00" y="191.50"></text></g><g><title>_mm_set_epi16 (35 samples, 0.01%)</title><rect x="803" y="181" width="1" height="15" fill="rgb(221,105,3)"/><text x="806.00" y="191.50"></text></g><g><title>_mm_shuffle_epi8 (31 samples, 0.01%)</title><rect x="804" y="181" width="0" height="15" fill="rgb(237,151,19)"/><text x="807.00" y="191.50"></text></g><g><title>_mm_slli_epi32 (50 samples, 0.02%)</title><rect x="804" y="181" width="0" height="15" fill="rgb(231,153,15)"/><text x="807.00" y="191.50"></text></g><g><title>_mm_storeu_si128 (96 samples, 0.04%)</title><rect x="804" y="181" width="0" height="15" fill="rgb(225,68,4)"/><text x="807.00" y="191.50"></text></g><g><title>_mm_and_si128 (73 samples, 0.03%)</title><rect x="805" y="165" width="0" height="15" fill="rgb(221,101,30)"/><text x="808.00" y="175.50"></text></g><g><title>_mm_blend_epi16 (65 samples, 0.02%)</title><rect x="805" y="165" width="0" height="15" fill="rgb(217,102,44)"/><text x="808.00" y="175.50"></text></g><g><title>_mm_or_si128 (45 samples, 0.02%)</title><rect x="805" y="165" width="1" height="15" fill="rgb(251,137,0)"/><text x="808.00" y="175.50"></text></g><g><title>_mm_shuffle_epi8 (29 samples, 0.01%)</title><rect x="806" y="165" width="0" height="15" fill="rgb(237,74,15)"/><text x="809.00" y="175.50"></text></g><g><title>_mm_slli_epi32 (27 samples, 0.01%)</title><rect x="806" y="165" width="0" height="15" fill="rgb(241,113,49)"/><text x="809.00" y="175.50"></text></g><g><title>_mm_srli_epi32 (33 samples, 0.01%)</title><rect x="806" y="165" width="0" height="15" fill="rgb(232,147,0)"/><text x="809.00" y="175.50"></text></g><g><title>_mm_store_si128 (64 samples, 0.02%)</title><rect x="806" y="165" width="0" height="15" fill="rgb(234,0,19)"/><text x="809.00" y="175.50"></text></g><g><title>desc_to_olflags_v (479 samples, 0.18%)</title><rect x="804" y="181" width="3" height="15" fill="rgb(228,109,34)"/><text x="807.00" y="191.50"></text></g><g><title>_mm_srli_epi64 (44 samples, 0.02%)</title><rect x="808" y="165" width="0" height="15" fill="rgb(239,49,9)"/><text x="811.00" y="175.50"></text></g><g><title>desc_to_ptype_v (335 samples, 0.12%)</title><rect x="807" y="181" width="1" height="15" fill="rgb(218,128,34)"/><text x="810.00" y="191.50"></text></g><g><title>_mm_add_epi64 (150 samples, 0.06%)</title><rect x="808" y="165" width="1" height="15" fill="rgb(232,213,19)"/><text x="811.00" y="175.50"></text></g><g><title>_mm_loadu_si128 (134 samples, 0.05%)</title><rect x="809" y="165" width="1" height="15" fill="rgb(215,176,14)"/><text x="812.00" y="175.50"></text></g><g><title>_mm_store_si128 (31 samples, 0.01%)</title><rect x="810" y="165" width="0" height="15" fill="rgb(230,13,11)"/><text x="813.00" y="175.50"></text></g><g><title>_mm_unpackhi_epi64 (72 samples, 0.03%)</title><rect x="810" y="165" width="0" height="15" fill="rgb(244,102,41)"/><text x="813.00" y="175.50"></text></g><g><title>__tls_get_addr (74 samples, 0.03%)</title><rect x="810" y="133" width="1" height="15" fill="rgb(245,200,27)"/><text x="813.00" y="143.50"></text></g><g><title>rte_lcore_id (115 samples, 0.04%)</title><rect x="810" y="149" width="1" height="15" fill="rgb(252,35,38)"/><text x="813.00" y="159.50"></text></g><g><title>rte_mempool_default_cache (29 samples, 0.01%)</title><rect x="811" y="149" width="0" height="15" fill="rgb(224,200,43)"/><text x="814.00" y="159.50"></text></g><g><title>__rte_ring_move_cons_head (102 samples, 0.04%)</title><rect x="812" y="53" width="1" height="15" fill="rgb(253,34,29)"/><text x="815.00" y="63.50"></text></g><g><title>rte_atomic32_cmpset (88 samples, 0.03%)</title><rect x="812" y="37" width="1" height="15" fill="rgb(246,31,1)"/><text x="815.00" y="47.50"></text></g><g><title>rte_mempool_get_bulk (613 samples, 0.23%)</title><rect x="810" y="165" width="3" height="15" fill="rgb(225,108,13)"/><text x="813.00" y="175.50"></text></g><g><title>rte_mempool_generic_get (469 samples, 0.17%)</title><rect x="811" y="149" width="2" height="15" fill="rgb(217,9,37)"/><text x="814.00" y="159.50"></text></g><g><title>__mempool_generic_get (469 samples, 0.17%)</title><rect x="811" y="133" width="2" height="15" fill="rgb(248,191,7)"/><text x="814.00" y="143.50"></text></g><g><title>rte_mempool_ops_dequeue_bulk (396 samples, 0.15%)</title><rect x="811" y="117" width="2" height="15" fill="rgb(236,89,16)"/><text x="814.00" y="127.50"></text></g><g><title>common_ring_mc_dequeue (373 samples, 0.14%)</title><rect x="811" y="101" width="2" height="15" fill="rgb(206,104,11)"/><text x="814.00" y="111.50"></text></g><g><title>rte_ring_mc_dequeue_bulk (335 samples, 0.12%)</title><rect x="811" y="85" width="2" height="15" fill="rgb(252,66,8)"/><text x="814.00" y="95.50"></text></g><g><title>__rte_ring_do_dequeue (335 samples, 0.12%)</title><rect x="811" y="69" width="2" height="15" fill="rgb(224,118,39)"/><text x="814.00" y="79.50"></text></g><g><title>i40e_rxq_rearm (1,136 samples, 0.42%)</title><rect x="808" y="181" width="5" height="15" fill="rgb(240,140,24)"/><text x="811.00" y="191.50"></text></g><g><title>e2d2::interface::port::&lt;impl e2d2::interface::PacketRx for e2d2::allocators::cache_aligned::CacheAligned&lt;T&gt;&gt;::recv (9,509 samples, 3.50%)</title><rect x="773" y="293" width="41" height="15" fill="rgb(210,60,14)"/><text x="776.00" y="303.50">e2d..</text></g><g><title>&lt;e2d2::interface::port::phy_port::PortQueue as e2d2::interface::PacketRx&gt;::recv (9,509 samples, 3.50%)</title><rect x="773" y="277" width="41" height="15" fill="rgb(252,114,40)"/><text x="776.00" y="287.50">&lt;e2..</text></g><g><title>e2d2::interface::port::phy_port::PortQueue::recv_queue (9,509 samples, 3.50%)</title><rect x="773" y="261" width="41" height="15" fill="rgb(205,224,44)"/><text x="776.00" y="271.50">e2d..</text></g><g><title>recv_pkts (8,786 samples, 3.24%)</title><rect x="776" y="245" width="38" height="15" fill="rgb(214,185,31)"/><text x="779.00" y="255.50">rec..</text></g><g><title>rte_eth_rx_burst (8,684 samples, 3.20%)</title><rect x="776" y="229" width="38" height="15" fill="rgb(220,50,48)"/><text x="779.00" y="239.50">rte..</text></g><g><title>i40e_recv_pkts_vec (6,745 samples, 2.48%)</title><rect x="785" y="213" width="29" height="15" fill="rgb(215,52,27)"/><text x="788.00" y="223.50">i4..</text></g><g><title>_recv_raw_pkts_vec (6,625 samples, 2.44%)</title><rect x="785" y="197" width="29" height="15" fill="rgb(236,57,0)"/><text x="788.00" y="207.50">_r..</text></g><g><title>rte_prefetch0 (275 samples, 0.10%)</title><rect x="813" y="181" width="1" height="15" fill="rgb(252,63,24)"/><text x="816.00" y="191.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::add_to_batch (125 samples, 0.05%)</title><rect x="814" y="293" width="1" height="15" fill="rgb(254,131,14)"/><text x="817.00" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (125 samples, 0.05%)</title><rect x="814" y="277" width="1" height="15" fill="rgb(218,157,28)"/><text x="817.00" y="287.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (159 samples, 0.06%)</title><rect x="815" y="293" width="0" height="15" fill="rgb(232,31,13)"/><text x="818.00" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (159 samples, 0.06%)</title><rect x="815" y="277" width="0" height="15" fill="rgb(212,200,36)"/><text x="818.00" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (159 samples, 0.06%)</title><rect x="815" y="261" width="0" height="15" fill="rgb(214,95,21)"/><text x="818.00" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (142 samples, 0.05%)</title><rect x="815" y="245" width="0" height="15" fill="rgb(240,59,14)"/><text x="818.00" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (142 samples, 0.05%)</title><rect x="815" y="229" width="0" height="15" fill="rgb(248,200,26)"/><text x="818.00" y="239.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (10,243 samples, 3.77%)</title><rect x="771" y="357" width="44" height="15" fill="rgb(221,112,5)"/><text x="774.00" y="367.50">&lt;e2d..</text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (10,243 samples, 3.77%)</title><rect x="771" y="341" width="44" height="15" fill="rgb(215,195,40)"/><text x="774.00" y="351.50">&lt;e2d..</text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (10,117 samples, 3.73%)</title><rect x="771" y="325" width="44" height="15" fill="rgb(224,44,23)"/><text x="774.00" y="335.50">e2d2..</text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (9,973 samples, 3.67%)</title><rect x="772" y="309" width="43" height="15" fill="rgb(233,218,36)"/><text x="775.00" y="319.50">e2d2..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (30 samples, 0.01%)</title><rect x="816" y="293" width="0" height="15" fill="rgb(230,189,0)"/><text x="819.00" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (30 samples, 0.01%)</title><rect x="816" y="277" width="0" height="15" fill="rgb(224,219,7)"/><text x="819.00" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (30 samples, 0.01%)</title><rect x="816" y="261" width="0" height="15" fill="rgb(235,31,20)"/><text x="819.00" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (30 samples, 0.01%)</title><rect x="816" y="245" width="0" height="15" fill="rgb(242,97,23)"/><text x="819.00" y="255.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (133 samples, 0.05%)</title><rect x="815" y="325" width="1" height="15" fill="rgb(208,110,51)"/><text x="818.00" y="335.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (133 samples, 0.05%)</title><rect x="815" y="309" width="1" height="15" fill="rgb(252,113,40)"/><text x="818.00" y="319.50"></text></g><g><title>e2d2::interface::packet::packet_from_mbuf_no_free (58 samples, 0.02%)</title><rect x="816" y="293" width="0" height="15" fill="rgb(232,144,4)"/><text x="819.00" y="303.50"></text></g><g><title>e2d2::interface::packet::packet_from_mbuf_no_increment (58 samples, 0.02%)</title><rect x="816" y="277" width="0" height="15" fill="rgb(237,173,9)"/><text x="819.00" y="287.50"></text></g><g><title>e2d2::native::zcsi::mbuf::&lt;impl e2d2::native_include::rte_mbuf&gt;::data_address (58 samples, 0.02%)</title><rect x="816" y="261" width="0" height="15" fill="rgb(209,212,43)"/><text x="819.00" y="271.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (22,772 samples, 8.39%)</title><rect x="717" y="389" width="99" height="15" fill="rgb(230,152,25)"/><text x="720.00" y="399.50">&lt;e2d2::oper..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (22,772 samples, 8.39%)</title><rect x="717" y="373" width="99" height="15" fill="rgb(215,59,30)"/><text x="720.00" y="383.50">&lt;e2d2::oper..</text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (258 samples, 0.10%)</title><rect x="815" y="357" width="1" height="15" fill="rgb(233,44,22)"/><text x="818.00" y="367.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (224 samples, 0.08%)</title><rect x="815" y="341" width="1" height="15" fill="rgb(213,179,43)"/><text x="818.00" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (91 samples, 0.03%)</title><rect x="816" y="325" width="0" height="15" fill="rgb(244,133,41)"/><text x="819.00" y="335.50"></text></g><g><title>_$LT$e2d2..operators..parsed_batch..ParsedBatch$LT$T$C$V$GT$$u20$as$u20$e2d2..operators..iterator..BatchIterator$GT$::next_payload::_$u7b$$u7b$closure$u7d$$u7d$::h5e8d9ecf9cb17da7 (91 samples, 0.03%)</title><rect x="816" y="309" width="0" height="15" fill="rgb(210,20,21)"/><text x="819.00" y="319.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::parse_header (91 samples, 0.03%)</title><rect x="816" y="293" width="0" height="15" fill="rgb(210,143,19)"/><text x="819.00" y="303.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (49 samples, 0.02%)</title><rect x="816" y="389" width="1" height="15" fill="rgb(219,178,9)"/><text x="819.00" y="399.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (49 samples, 0.02%)</title><rect x="816" y="373" width="1" height="15" fill="rgb(205,45,10)"/><text x="819.00" y="383.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::header_u8 (1,961 samples, 0.72%)</title><rect x="817" y="373" width="8" height="15" fill="rgb(242,78,41)"/><text x="820.00" y="383.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::save_header_and_offset (2,169 samples, 0.80%)</title><rect x="817" y="389" width="9" height="15" fill="rgb(252,23,17)"/><text x="820.00" y="399.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::update_ptrs (208 samples, 0.08%)</title><rect x="825" y="373" width="1" height="15" fill="rgb(227,218,39)"/><text x="828.00" y="383.50"></text></g><g><title>e2d2::native::zcsi::mbuf::&lt;impl e2d2::native_include::rte_mbuf&gt;::write_metadata_slot (206 samples, 0.08%)</title><rect x="825" y="357" width="1" height="15" fill="rgb(228,193,31)"/><text x="828.00" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (62 samples, 0.02%)</title><rect x="827" y="293" width="1" height="15" fill="rgb(234,227,39)"/><text x="830.00" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (62 samples, 0.02%)</title><rect x="827" y="277" width="1" height="15" fill="rgb(233,0,3)"/><text x="830.00" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (62 samples, 0.02%)</title><rect x="827" y="261" width="1" height="15" fill="rgb(226,129,42)"/><text x="830.00" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (62 samples, 0.02%)</title><rect x="827" y="245" width="1" height="15" fill="rgb(227,43,51)"/><text x="830.00" y="255.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (489 samples, 0.18%)</title><rect x="826" y="357" width="2" height="15" fill="rgb(223,130,48)"/><text x="829.00" y="367.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (489 samples, 0.18%)</title><rect x="826" y="341" width="2" height="15" fill="rgb(238,149,4)"/><text x="829.00" y="351.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (489 samples, 0.18%)</title><rect x="826" y="325" width="2" height="15" fill="rgb(245,25,11)"/><text x="829.00" y="335.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (489 samples, 0.18%)</title><rect x="826" y="309" width="2" height="15" fill="rgb(232,59,25)"/><text x="829.00" y="319.50"></text></g><g><title>e2d2::interface::packet::packet_from_mbuf_no_free (136 samples, 0.05%)</title><rect x="828" y="293" width="0" height="15" fill="rgb(245,207,45)"/><text x="831.00" y="303.50"></text></g><g><title>e2d2::interface::packet::packet_from_mbuf_no_increment (136 samples, 0.05%)</title><rect x="828" y="277" width="0" height="15" fill="rgb(246,137,23)"/><text x="831.00" y="287.50"></text></g><g><title>e2d2::native::zcsi::mbuf::&lt;impl e2d2::native_include::rte_mbuf&gt;::data_address (136 samples, 0.05%)</title><rect x="828" y="261" width="0" height="15" fill="rgb(210,147,26)"/><text x="831.00" y="271.50"></text></g><g><title>core::ptr::&lt;impl *mut T&gt;::offset (57 samples, 0.02%)</title><rect x="828" y="245" width="0" height="15" fill="rgb(214,220,17)"/><text x="831.00" y="255.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (547 samples, 0.20%)</title><rect x="826" y="373" width="3" height="15" fill="rgb(232,94,31)"/><text x="829.00" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (58 samples, 0.02%)</title><rect x="828" y="357" width="1" height="15" fill="rgb(219,175,10)"/><text x="831.00" y="367.50"></text></g><g><title>_$LT$e2d2..operators..parsed_batch..ParsedBatch$LT$T$C$V$GT$$u20$as$u20$e2d2..operators..iterator..BatchIterator$GT$::next_payload::_$u7b$$u7b$closure$u7d$$u7d$::hed5aebf8d4625c4a (58 samples, 0.02%)</title><rect x="828" y="341" width="1" height="15" fill="rgb(236,199,9)"/><text x="831.00" y="351.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::parse_header (58 samples, 0.02%)</title><rect x="828" y="325" width="1" height="15" fill="rgb(242,28,49)"/><text x="831.00" y="335.50"></text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (575 samples, 0.21%)</title><rect x="826" y="389" width="3" height="15" fill="rgb(240,180,49)"/><text x="829.00" y="399.50"></text></g><g><title>core::cmp::min (187 samples, 0.07%)</title><rect x="830" y="325" width="1" height="15" fill="rgb(238,35,33)"/><text x="833.00" y="335.50"></text></g><g><title>core::cmp::Ord::min (187 samples, 0.07%)</title><rect x="830" y="309" width="1" height="15" fill="rgb(238,173,39)"/><text x="833.00" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (61 samples, 0.02%)</title><rect x="831" y="325" width="0" height="15" fill="rgb(252,27,42)"/><text x="834.00" y="335.50"></text></g><g><title>core::sync::atomic::atomic_store (61 samples, 0.02%)</title><rect x="831" y="309" width="0" height="15" fill="rgb(226,149,22)"/><text x="834.00" y="319.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscProducer::enqueue_one (1,059 samples, 0.39%)</title><rect x="829" y="389" width="4" height="15" fill="rgb(209,95,18)"/><text x="832.00" y="399.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::enqueue_one (1,057 samples, 0.39%)</title><rect x="829" y="373" width="4" height="15" fill="rgb(226,70,51)"/><text x="832.00" y="383.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::enqueue (1,057 samples, 0.39%)</title><rect x="829" y="357" width="4" height="15" fill="rgb(247,107,47)"/><text x="832.00" y="367.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::enqueue_sp (940 samples, 0.35%)</title><rect x="829" y="341" width="4" height="15" fill="rgb(205,42,13)"/><text x="832.00" y="351.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::enqueue_mbufs (494 samples, 0.18%)</title><rect x="831" y="325" width="2" height="15" fill="rgb(229,73,32)"/><text x="834.00" y="335.50"></text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (27,667 samples, 10.19%)</title><rect x="713" y="405" width="120" height="15" fill="rgb(230,19,12)"/><text x="716.00" y="415.50">&lt;e2d2::operato..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (32 samples, 0.01%)</title><rect x="838" y="309" width="0" height="15" fill="rgb(216,133,47)"/><text x="841.00" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (136 samples, 0.05%)</title><rect x="838" y="325" width="0" height="15" fill="rgb(249,169,5)"/><text x="841.00" y="335.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (104 samples, 0.04%)</title><rect x="838" y="309" width="0" height="15" fill="rgb(219,3,44)"/><text x="841.00" y="319.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (104 samples, 0.04%)</title><rect x="838" y="293" width="0" height="15" fill="rgb(244,33,51)"/><text x="841.00" y="303.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (1,092 samples, 0.40%)</title><rect x="837" y="341" width="5" height="15" fill="rgb(220,172,49)"/><text x="840.00" y="351.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (925 samples, 0.34%)</title><rect x="838" y="325" width="4" height="15" fill="rgb(219,209,22)"/><text x="841.00" y="335.50"></text></g><g><title>e2d2::headers::tcp::TcpHeader::seq_num (674 samples, 0.25%)</title><rect x="855" y="277" width="3" height="15" fill="rgb(218,193,30)"/><text x="858.00" y="287.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (674 samples, 0.25%)</title><rect x="855" y="261" width="3" height="15" fill="rgb(205,203,10)"/><text x="858.00" y="271.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (674 samples, 0.25%)</title><rect x="855" y="245" width="3" height="15" fill="rgb(228,72,12)"/><text x="858.00" y="255.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::payload (152 samples, 0.06%)</title><rect x="858" y="261" width="1" height="15" fill="rgb(229,118,24)"/><text x="861.00" y="271.50"></text></g><g><title>core::ptr::&lt;impl *mut T&gt;::offset (152 samples, 0.06%)</title><rect x="858" y="245" width="1" height="15" fill="rgb(228,4,29)"/><text x="861.00" y="255.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::data_len (1,655 samples, 0.61%)</title><rect x="861" y="245" width="7" height="15" fill="rgb(247,11,10)"/><text x="864.00" y="255.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::get_payload (2,702 samples, 1.00%)</title><rect x="858" y="277" width="12" height="15" fill="rgb(241,217,45)"/><text x="861.00" y="287.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::payload_size (2,550 samples, 0.94%)</title><rect x="859" y="261" width="11" height="15" fill="rgb(224,174,19)"/><text x="862.00" y="271.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::payload_offset (377 samples, 0.14%)</title><rect x="868" y="245" width="2" height="15" fill="rgb(217,86,44)"/><text x="871.00" y="255.50"></text></g><g><title>&lt;e2d2::headers::tcp::TcpHeader as e2d2::headers::EndOffset&gt;::offset (377 samples, 0.14%)</title><rect x="868" y="229" width="2" height="15" fill="rgb(226,145,50)"/><text x="871.00" y="239.50"></text></g><g><title>e2d2::headers::tcp::TcpHeader::data_offset (196 samples, 0.07%)</title><rect x="869" y="213" width="1" height="15" fill="rgb(225,61,20)"/><text x="872.00" y="223.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::read_metadata (121 samples, 0.04%)</title><rect x="870" y="277" width="0" height="15" fill="rgb(207,142,13)"/><text x="873.00" y="287.50"></text></g><g><title>e2d2::utils::flow::Flow::reverse_flow (231 samples, 0.09%)</title><rect x="870" y="277" width="1" height="15" fill="rgb(253,93,43)"/><text x="873.00" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (338 samples, 0.12%)</title><rect x="872" y="261" width="1" height="15" fill="rgb(247,44,3)"/><text x="875.00" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (338 samples, 0.12%)</title><rect x="872" y="245" width="1" height="15" fill="rgb(249,23,34)"/><text x="875.00" y="255.50"></text></g><g><title>core::ptr::real_drop_in_place (116 samples, 0.04%)</title><rect x="873" y="261" width="1" height="15" fill="rgb(226,145,18)"/><text x="876.00" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (155 samples, 0.06%)</title><rect x="879" y="181" width="1" height="15" fill="rgb(219,69,38)"/><text x="882.00" y="191.50"></text></g><g><title>core::ops::function::FnOnce::call_once (155 samples, 0.06%)</title><rect x="879" y="165" width="1" height="15" fill="rgb(220,200,27)"/><text x="882.00" y="175.50"></text></g><g><title>rustls::msgs::codec::decode_u8 (155 samples, 0.06%)</title><rect x="879" y="149" width="1" height="15" fill="rgb(243,119,6)"/><text x="882.00" y="159.50"></text></g><g><title>&lt;rustls::msgs::enums::ContentType as rustls::msgs::codec::Codec&gt;::read (371 samples, 0.14%)</title><rect x="878" y="213" width="2" height="15" fill="rgb(219,36,41)"/><text x="881.00" y="223.50"></text></g><g><title>&lt;u8 as rustls::msgs::codec::Codec&gt;::read (222 samples, 0.08%)</title><rect x="879" y="197" width="1" height="15" fill="rgb(245,228,30)"/><text x="882.00" y="207.50"></text></g><g><title>rustls::msgs::codec::Reader::take (58 samples, 0.02%)</title><rect x="880" y="181" width="0" height="15" fill="rgb(246,94,8)"/><text x="883.00" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (274 samples, 0.10%)</title><rect x="882" y="181" width="1" height="15" fill="rgb(253,8,53)"/><text x="885.00" y="191.50"></text></g><g><title>core::ops::function::FnOnce::call_once (274 samples, 0.10%)</title><rect x="882" y="165" width="1" height="15" fill="rgb(216,15,43)"/><text x="885.00" y="175.50"></text></g><g><title>rustls::msgs::codec::decode_u16 (274 samples, 0.10%)</title><rect x="882" y="149" width="1" height="15" fill="rgb(229,157,44)"/><text x="885.00" y="159.50"></text></g><g><title>&lt;rustls::msgs::enums::ProtocolVersion as rustls::msgs::codec::Codec&gt;::read (848 samples, 0.31%)</title><rect x="880" y="213" width="4" height="15" fill="rgb(253,54,54)"/><text x="883.00" y="223.50"></text></g><g><title>&lt;u16 as rustls::msgs::codec::Codec&gt;::read (440 samples, 0.16%)</title><rect x="882" y="197" width="2" height="15" fill="rgb(252,68,4)"/><text x="885.00" y="207.50"></text></g><g><title>rustls::msgs::codec::Reader::take (166 samples, 0.06%)</title><rect x="883" y="181" width="1" height="15" fill="rgb(246,71,23)"/><text x="886.00" y="191.50"></text></g><g><title>rustls::msgs::codec::Reader::left (132 samples, 0.05%)</title><rect x="883" y="165" width="1" height="15" fill="rgb(223,178,32)"/><text x="886.00" y="175.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (298 samples, 0.11%)</title><rect x="884" y="197" width="1" height="15" fill="rgb(245,174,22)"/><text x="887.00" y="207.50"></text></g><g><title>core::ops::function::FnOnce::call_once (298 samples, 0.11%)</title><rect x="884" y="181" width="1" height="15" fill="rgb(232,7,15)"/><text x="887.00" y="191.50"></text></g><g><title>rustls::msgs::codec::decode_u16 (298 samples, 0.11%)</title><rect x="884" y="165" width="1" height="15" fill="rgb(215,201,54)"/><text x="887.00" y="175.50"></text></g><g><title>&lt;u16 as rustls::msgs::codec::Codec&gt;::read (535 samples, 0.20%)</title><rect x="884" y="213" width="2" height="15" fill="rgb(210,54,52)"/><text x="887.00" y="223.50"></text></g><g><title>rustls::msgs::codec::Reader::take (237 samples, 0.09%)</title><rect x="885" y="197" width="1" height="15" fill="rgb(216,114,33)"/><text x="888.00" y="207.50"></text></g><g><title>pvn_tls::nf::lib::is_client_hello (3,486 samples, 1.28%)</title><rect x="871" y="277" width="15" height="15" fill="rgb(223,207,3)"/><text x="874.00" y="287.50"></text></g><g><title>pvn_tls::nf::lib::on_frame (2,953 samples, 1.09%)</title><rect x="874" y="261" width="12" height="15" fill="rgb(219,87,0)"/><text x="877.00" y="271.50"></text></g><g><title>rustls::msgs::codec::Codec::read_bytes (2,029 samples, 0.75%)</title><rect x="878" y="245" width="8" height="15" fill="rgb(209,17,23)"/><text x="881.00" y="255.50"></text></g><g><title>&lt;rustls::msgs::message::Message as rustls::msgs::codec::Codec&gt;::read (1,989 samples, 0.73%)</title><rect x="878" y="229" width="8" height="15" fill="rgb(237,184,41)"/><text x="881.00" y="239.50"></text></g><g><title>rustls::msgs::codec::Reader::sub (76 samples, 0.03%)</title><rect x="886" y="213" width="0" height="15" fill="rgb(236,172,50)"/><text x="889.00" y="223.50"></text></g><g><title>rustls::msgs::codec::Reader::take (76 samples, 0.03%)</title><rect x="886" y="197" width="0" height="15" fill="rgb(247,227,34)"/><text x="889.00" y="207.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (245 samples, 0.09%)</title><rect x="887" y="261" width="1" height="15" fill="rgb(236,12,20)"/><text x="890.00" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (245 samples, 0.09%)</title><rect x="887" y="245" width="1" height="15" fill="rgb(251,199,40)"/><text x="890.00" y="255.50"></text></g><g><title>core::ptr::real_drop_in_place (105 samples, 0.04%)</title><rect x="888" y="261" width="0" height="15" fill="rgb(223,48,19)"/><text x="891.00" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (30 samples, 0.01%)</title><rect x="893" y="181" width="0" height="15" fill="rgb(231,82,50)"/><text x="896.00" y="191.50"></text></g><g><title>core::ops::function::FnOnce::call_once (30 samples, 0.01%)</title><rect x="893" y="165" width="0" height="15" fill="rgb(215,178,41)"/><text x="896.00" y="175.50"></text></g><g><title>rustls::msgs::codec::decode_u8 (30 samples, 0.01%)</title><rect x="893" y="149" width="0" height="15" fill="rgb(226,72,5)"/><text x="896.00" y="159.50"></text></g><g><title>&lt;rustls::msgs::enums::ContentType as rustls::msgs::codec::Codec&gt;::read (243 samples, 0.09%)</title><rect x="892" y="213" width="1" height="15" fill="rgb(212,15,35)"/><text x="895.00" y="223.50"></text></g><g><title>&lt;u8 as rustls::msgs::codec::Codec&gt;::read (118 samples, 0.04%)</title><rect x="893" y="197" width="0" height="15" fill="rgb(250,151,14)"/><text x="896.00" y="207.50"></text></g><g><title>rustls::msgs::codec::Reader::take (76 samples, 0.03%)</title><rect x="893" y="181" width="0" height="15" fill="rgb(246,203,9)"/><text x="896.00" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (171 samples, 0.06%)</title><rect x="894" y="181" width="1" height="15" fill="rgb(254,20,41)"/><text x="897.00" y="191.50"></text></g><g><title>core::ops::function::FnOnce::call_once (171 samples, 0.06%)</title><rect x="894" y="165" width="1" height="15" fill="rgb(251,228,10)"/><text x="897.00" y="175.50"></text></g><g><title>rustls::msgs::codec::decode_u16 (171 samples, 0.06%)</title><rect x="894" y="149" width="1" height="15" fill="rgb(215,181,36)"/><text x="897.00" y="159.50"></text></g><g><title>&lt;rustls::msgs::enums::ProtocolVersion as rustls::msgs::codec::Codec&gt;::read (498 samples, 0.18%)</title><rect x="893" y="213" width="2" height="15" fill="rgb(218,211,8)"/><text x="896.00" y="223.50"></text></g><g><title>&lt;u16 as rustls::msgs::codec::Codec&gt;::read (210 samples, 0.08%)</title><rect x="894" y="197" width="1" height="15" fill="rgb(245,105,43)"/><text x="897.00" y="207.50"></text></g><g><title>rustls::msgs::codec::Reader::take (39 samples, 0.01%)</title><rect x="895" y="181" width="0" height="15" fill="rgb(243,16,40)"/><text x="898.00" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (164 samples, 0.06%)</title><rect x="895" y="197" width="1" height="15" fill="rgb(205,67,11)"/><text x="898.00" y="207.50"></text></g><g><title>core::ops::function::FnOnce::call_once (164 samples, 0.06%)</title><rect x="895" y="181" width="1" height="15" fill="rgb(243,180,10)"/><text x="898.00" y="191.50"></text></g><g><title>rustls::msgs::codec::decode_u16 (164 samples, 0.06%)</title><rect x="895" y="165" width="1" height="15" fill="rgb(247,224,7)"/><text x="898.00" y="175.50"></text></g><g><title>&lt;u16 as rustls::msgs::codec::Codec&gt;::read (295 samples, 0.11%)</title><rect x="895" y="213" width="1" height="15" fill="rgb(235,120,0)"/><text x="898.00" y="223.50"></text></g><g><title>rustls::msgs::codec::Reader::take (131 samples, 0.05%)</title><rect x="896" y="197" width="0" height="15" fill="rgb(236,103,32)"/><text x="899.00" y="207.50"></text></g><g><title>&lt;rustls::msgs::message::Message as rustls::msgs::codec::Codec&gt;::read (1,243 samples, 0.46%)</title><rect x="891" y="229" width="6" height="15" fill="rgb(236,214,44)"/><text x="894.00" y="239.50"></text></g><g><title>rustls::msgs::codec::Reader::sub (88 samples, 0.03%)</title><rect x="896" y="213" width="1" height="15" fill="rgb(219,120,6)"/><text x="899.00" y="223.50"></text></g><g><title>rustls::msgs::codec::Reader::take (88 samples, 0.03%)</title><rect x="896" y="197" width="1" height="15" fill="rgb(215,7,2)"/><text x="899.00" y="207.50"></text></g><g><title>pvn_tls::nf::lib::is_server_hello (2,425 samples, 0.89%)</title><rect x="886" y="277" width="11" height="15" fill="rgb(213,196,39)"/><text x="889.00" y="287.50"></text></g><g><title>pvn_tls::nf::lib::on_frame (1,972 samples, 0.73%)</title><rect x="888" y="261" width="9" height="15" fill="rgb(251,21,52)"/><text x="891.00" y="271.50"></text></g><g><title>rustls::msgs::codec::Codec::read_bytes (1,282 samples, 0.47%)</title><rect x="891" y="245" width="6" height="15" fill="rgb(246,202,53)"/><text x="894.00" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::reserve (231 samples, 0.09%)</title><rect x="899" y="245" width="1" height="15" fill="rgb(235,166,6)"/><text x="902.00" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve (231 samples, 0.09%)</title><rect x="899" y="229" width="1" height="15" fill="rgb(224,155,49)"/><text x="902.00" y="239.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (370 samples, 0.14%)</title><rect x="910" y="165" width="2" height="15" fill="rgb(240,15,27)"/><text x="913.00" y="175.50"></text></g><g><title>core::slice::Iter&lt;T&gt;::post_inc_start (245 samples, 0.09%)</title><rect x="911" y="149" width="1" height="15" fill="rgb(243,195,27)"/><text x="914.00" y="159.50"></text></g><g><title>core::ptr::&lt;impl *const T&gt;::offset (245 samples, 0.09%)</title><rect x="911" y="133" width="1" height="15" fill="rgb(229,32,54)"/><text x="914.00" y="143.50"></text></g><g><title>core::iter::adapters::Rev&lt;T&gt;::new (31 samples, 0.01%)</title><rect x="912" y="165" width="0" height="15" fill="rgb(219,43,30)"/><text x="915.00" y="175.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (1,038 samples, 0.38%)</title><rect x="912" y="165" width="5" height="15" fill="rgb(205,97,20)"/><text x="915.00" y="175.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (3,072 samples, 1.13%)</title><rect x="903" y="213" width="14" height="15" fill="rgb(252,66,50)"/><text x="906.00" y="223.50"></text></g><g><title>core::hash::Hasher::write_u16 (3,072 samples, 1.13%)</title><rect x="903" y="197" width="14" height="15" fill="rgb(241,39,21)"/><text x="906.00" y="207.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (2,792 samples, 1.03%)</title><rect x="905" y="181" width="12" height="15" fill="rgb(248,131,54)"/><text x="908.00" y="191.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (33 samples, 0.01%)</title><rect x="917" y="165" width="0" height="15" fill="rgb(215,28,9)"/><text x="920.00" y="175.50"></text></g><g><title>core::ptr::&lt;impl *const T&gt;::add (33 samples, 0.01%)</title><rect x="917" y="149" width="0" height="15" fill="rgb(215,61,39)"/><text x="920.00" y="159.50"></text></g><g><title>core::ptr::&lt;impl *const T&gt;::offset (33 samples, 0.01%)</title><rect x="917" y="133" width="0" height="15" fill="rgb(231,72,40)"/><text x="920.00" y="143.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (597 samples, 0.22%)</title><rect x="924" y="165" width="2" height="15" fill="rgb(244,79,5)"/><text x="927.00" y="175.50"></text></g><g><title>core::slice::Iter&lt;T&gt;::post_inc_start (527 samples, 0.19%)</title><rect x="924" y="149" width="2" height="15" fill="rgb(239,70,22)"/><text x="927.00" y="159.50"></text></g><g><title>core::ptr::&lt;impl *const T&gt;::offset (527 samples, 0.19%)</title><rect x="924" y="133" width="2" height="15" fill="rgb(215,157,44)"/><text x="927.00" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (2,281 samples, 0.84%)</title><rect x="926" y="165" width="10" height="15" fill="rgb(241,211,7)"/><text x="929.00" y="175.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (4,548 samples, 1.68%)</title><rect x="917" y="213" width="20" height="15" fill="rgb(232,136,8)"/><text x="920.00" y="223.50"></text></g><g><title>core::hash::Hasher::write_u32 (4,548 samples, 1.68%)</title><rect x="917" y="197" width="20" height="15" fill="rgb(209,188,9)"/><text x="920.00" y="207.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (4,316 samples, 1.59%)</title><rect x="918" y="181" width="19" height="15" fill="rgb(225,137,12)"/><text x="921.00" y="191.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (39 samples, 0.01%)</title><rect x="936" y="165" width="1" height="15" fill="rgb(216,29,19)"/><text x="939.00" y="175.50"></text></g><g><title>core::ptr::&lt;impl *const T&gt;::add (39 samples, 0.01%)</title><rect x="936" y="149" width="1" height="15" fill="rgb(221,46,51)"/><text x="939.00" y="159.50"></text></g><g><title>core::ptr::&lt;impl *const T&gt;::offset (39 samples, 0.01%)</title><rect x="936" y="133" width="1" height="15" fill="rgb(230,55,14)"/><text x="939.00" y="143.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (97 samples, 0.04%)</title><rect x="940" y="165" width="1" height="15" fill="rgb(241,152,41)"/><text x="943.00" y="175.50"></text></g><g><title>core::slice::Iter&lt;T&gt;::post_inc_start (55 samples, 0.02%)</title><rect x="940" y="149" width="1" height="15" fill="rgb(209,161,45)"/><text x="943.00" y="159.50"></text></g><g><title>core::ptr::&lt;impl *const T&gt;::offset (55 samples, 0.02%)</title><rect x="940" y="133" width="1" height="15" fill="rgb(217,56,37)"/><text x="943.00" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (259 samples, 0.10%)</title><rect x="941" y="165" width="1" height="15" fill="rgb(244,43,12)"/><text x="944.00" y="175.50"></text></g><g><title>hashbrown::map::make_hash (9,650 samples, 3.55%)</title><rect x="900" y="245" width="42" height="15" fill="rgb(211,224,17)"/><text x="903.00" y="255.50">has..</text></g><g><title>&lt;e2d2::utils::flow::Flow as core::hash::Hash&gt;::hash (9,422 samples, 3.47%)</title><rect x="901" y="229" width="41" height="15" fill="rgb(246,144,22)"/><text x="904.00" y="239.50">&lt;e2..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash (1,233 samples, 0.45%)</title><rect x="937" y="213" width="5" height="15" fill="rgb(211,12,0)"/><text x="940.00" y="223.50"></text></g><g><title>core::hash::Hasher::write_u8 (1,233 samples, 0.45%)</title><rect x="937" y="197" width="5" height="15" fill="rgb(252,223,26)"/><text x="940.00" y="207.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (1,064 samples, 0.39%)</title><rect x="937" y="181" width="5" height="15" fill="rgb(254,36,52)"/><text x="940.00" y="191.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.01%)</title><rect x="942" y="229" width="1" height="15" fill="rgb(254,171,27)"/><text x="945.00" y="239.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (35 samples, 0.01%)</title><rect x="942" y="213" width="1" height="15" fill="rgb(211,11,52)"/><text x="945.00" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::probe_seq (1,130 samples, 0.42%)</title><rect x="943" y="229" width="4" height="15" fill="rgb(213,119,34)"/><text x="946.00" y="239.50"></text></g><g><title>hashbrown::raw::imp::Group::load (225 samples, 0.08%)</title><rect x="948" y="229" width="0" height="15" fill="rgb(249,138,46)"/><text x="951.00" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (225 samples, 0.08%)</title><rect x="948" y="213" width="0" height="15" fill="rgb(248,55,48)"/><text x="951.00" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (225 samples, 0.08%)</title><rect x="948" y="197" width="0" height="15" fill="rgb(223,191,12)"/><text x="951.00" y="207.50"></text></g><g><title>hashbrown::raw::imp::Group::match_byte (547 samples, 0.20%)</title><rect x="948" y="229" width="3" height="15" fill="rgb(212,94,46)"/><text x="951.00" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (547 samples, 0.20%)</title><rect x="948" y="213" width="3" height="15" fill="rgb(232,108,25)"/><text x="951.00" y="223.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (12,218 samples, 4.50%)</title><rect x="898" y="261" width="53" height="15" fill="rgb(242,216,48)"/><text x="901.00" y="271.50">hashb..</text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (2,150 samples, 0.79%)</title><rect x="942" y="245" width="9" height="15" fill="rgb(236,98,40)"/><text x="945.00" y="255.50"></text></g><g><title>hashbrown::raw::imp::Group::match_empty (79 samples, 0.03%)</title><rect x="951" y="229" width="0" height="15" fill="rgb(215,71,17)"/><text x="954.00" y="239.50"></text></g><g><title>hashbrown::raw::imp::Group::match_byte (79 samples, 0.03%)</title><rect x="951" y="213" width="0" height="15" fill="rgb(224,226,7)"/><text x="954.00" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (79 samples, 0.03%)</title><rect x="951" y="197" width="0" height="15" fill="rgb(216,116,36)"/><text x="954.00" y="207.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (14,612 samples, 5.38%)</title><rect x="897" y="277" width="63" height="15" fill="rgb(250,114,48)"/><text x="900.00" y="287.50">std::c..</text></g><g><title>std::collections::hash::map::map_entry (2,112 samples, 0.78%)</title><rect x="951" y="261" width="9" height="15" fill="rgb(244,0,24)"/><text x="954.00" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (68 samples, 0.03%)</title><rect x="974" y="69" width="0" height="15" fill="rgb(224,108,37)"/><text x="977.00" y="79.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,213 samples, 0.45%)</title><rect x="970" y="85" width="5" height="15" fill="rgb(221,65,14)"/><text x="973.00" y="95.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (268 samples, 0.10%)</title><rect x="974" y="69" width="1" height="15" fill="rgb(241,57,2)"/><text x="977.00" y="79.50"></text></g><g><title>core::cmp::min (73 samples, 0.03%)</title><rect x="975" y="85" width="1" height="15" fill="rgb(214,117,12)"/><text x="978.00" y="95.50"></text></g><g><title>core::cmp::Ord::min (73 samples, 0.03%)</title><rect x="975" y="69" width="1" height="15" fill="rgb(221,47,14)"/><text x="978.00" y="79.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (4,752 samples, 1.75%)</title><rect x="960" y="165" width="21" height="15" fill="rgb(220,211,28)"/><text x="963.00" y="175.50"></text></g><g><title>core::hash::Hasher::write_i32 (4,752 samples, 1.75%)</title><rect x="960" y="149" width="21" height="15" fill="rgb(252,1,52)"/><text x="963.00" y="159.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4,187 samples, 1.54%)</title><rect x="963" y="133" width="18" height="15" fill="rgb(247,41,26)"/><text x="966.00" y="143.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4,110 samples, 1.51%)</title><rect x="963" y="117" width="18" height="15" fill="rgb(221,65,39)"/><text x="966.00" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4,110 samples, 1.51%)</title><rect x="963" y="101" width="18" height="15" fill="rgb(219,23,30)"/><text x="966.00" y="111.50"></text></g><g><title>core::hash::sip::u8to64_le (1,203 samples, 0.44%)</title><rect x="976" y="85" width="5" height="15" fill="rgb(210,47,29)"/><text x="979.00" y="95.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (175 samples, 0.06%)</title><rect x="980" y="69" width="1" height="15" fill="rgb(248,34,53)"/><text x="983.00" y="79.50"></text></g><g><title>core::cmp::min (57 samples, 0.02%)</title><rect x="992" y="85" width="0" height="15" fill="rgb(244,157,37)"/><text x="995.00" y="95.50"></text></g><g><title>core::cmp::Ord::min (57 samples, 0.02%)</title><rect x="992" y="69" width="0" height="15" fill="rgb(220,207,44)"/><text x="995.00" y="79.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (3,891 samples, 1.43%)</title><rect x="981" y="165" width="17" height="15" fill="rgb(214,7,35)"/><text x="984.00" y="175.50"></text></g><g><title>core::hash::Hasher::write_u16 (3,891 samples, 1.43%)</title><rect x="981" y="149" width="17" height="15" fill="rgb(216,132,5)"/><text x="984.00" y="159.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3,019 samples, 1.11%)</title><rect x="985" y="133" width="13" height="15" fill="rgb(234,78,1)"/><text x="988.00" y="143.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3,019 samples, 1.11%)</title><rect x="985" y="117" width="13" height="15" fill="rgb(211,223,1)"/><text x="988.00" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3,019 samples, 1.11%)</title><rect x="985" y="101" width="13" height="15" fill="rgb(253,148,32)"/><text x="988.00" y="111.50"></text></g><g><title>core::hash::sip::u8to64_le (1,268 samples, 0.47%)</title><rect x="992" y="85" width="6" height="15" fill="rgb(226,89,27)"/><text x="995.00" y="95.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (133 samples, 0.05%)</title><rect x="997" y="69" width="1" height="15" fill="rgb(220,59,6)"/><text x="1000.00" y="79.50"></text></g><g><title>core::cmp::min (61 samples, 0.02%)</title><rect x="1004" y="85" width="0" height="15" fill="rgb(205,82,1)"/><text x="1007.00" y="95.50"></text></g><g><title>core::cmp::Ord::min (61 samples, 0.02%)</title><rect x="1004" y="69" width="0" height="15" fill="rgb(205,19,3)"/><text x="1007.00" y="79.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::le (26 samples, 0.01%)</title><rect x="1004" y="53" width="0" height="15" fill="rgb(234,218,41)"/><text x="1007.00" y="63.50"></text></g><g><title>&lt;e2d2::utils::flow::Flow as core::hash::Hash&gt;::hash (10,513 samples, 3.87%)</title><rect x="960" y="181" width="46" height="15" fill="rgb(215,21,22)"/><text x="963.00" y="191.50">&lt;e2d..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash (1,870 samples, 0.69%)</title><rect x="998" y="165" width="8" height="15" fill="rgb(215,81,12)"/><text x="1001.00" y="175.50"></text></g><g><title>core::hash::Hasher::write_u8 (1,870 samples, 0.69%)</title><rect x="998" y="149" width="8" height="15" fill="rgb(242,216,19)"/><text x="1001.00" y="159.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1,662 samples, 0.61%)</title><rect x="999" y="133" width="7" height="15" fill="rgb(212,116,14)"/><text x="1002.00" y="143.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,662 samples, 0.61%)</title><rect x="999" y="117" width="7" height="15" fill="rgb(211,137,22)"/><text x="1002.00" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,662 samples, 0.61%)</title><rect x="999" y="101" width="7" height="15" fill="rgb(222,222,31)"/><text x="1002.00" y="111.50"></text></g><g><title>core::hash::sip::u8to64_le (526 samples, 0.19%)</title><rect x="1004" y="85" width="2" height="15" fill="rgb(251,223,49)"/><text x="1007.00" y="95.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (282 samples, 0.10%)</title><rect x="1011" y="117" width="1" height="15" fill="rgb(221,178,33)"/><text x="1014.00" y="127.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (869 samples, 0.32%)</title><rect x="1009" y="133" width="4" height="15" fill="rgb(223,186,28)"/><text x="1012.00" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (237 samples, 0.09%)</title><rect x="1012" y="117" width="1" height="15" fill="rgb(210,141,47)"/><text x="1015.00" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,064 samples, 0.39%)</title><rect x="1015" y="117" width="5" height="15" fill="rgb(221,4,12)"/><text x="1018.00" y="127.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3,787 samples, 1.39%)</title><rect x="1006" y="181" width="17" height="15" fill="rgb(213,130,27)"/><text x="1009.00" y="191.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3,787 samples, 1.39%)</title><rect x="1006" y="165" width="17" height="15" fill="rgb(226,59,51)"/><text x="1009.00" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3,787 samples, 1.39%)</title><rect x="1006" y="149" width="17" height="15" fill="rgb(225,170,50)"/><text x="1009.00" y="159.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2,215 samples, 0.82%)</title><rect x="1013" y="133" width="10" height="15" fill="rgb(222,120,26)"/><text x="1016.00" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (589 samples, 0.22%)</title><rect x="1020" y="117" width="3" height="15" fill="rgb(243,156,36)"/><text x="1023.00" y="127.50"></text></g><g><title>hashbrown::map::make_hash (14,519 samples, 5.35%)</title><rect x="960" y="197" width="63" height="15" fill="rgb(236,45,34)"/><text x="963.00" y="207.50">hashbr..</text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (219 samples, 0.08%)</title><rect x="1023" y="181" width="0" height="15" fill="rgb(225,140,33)"/><text x="1026.00" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::probe_seq (716 samples, 0.26%)</title><rect x="1024" y="181" width="3" height="15" fill="rgb(207,116,28)"/><text x="1027.00" y="191.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::any_bit_set (100 samples, 0.04%)</title><rect x="1027" y="181" width="1" height="15" fill="rgb(209,77,50)"/><text x="1030.00" y="191.50"></text></g><g><title>hashbrown::raw::imp::Group::load (203 samples, 0.07%)</title><rect x="1028" y="181" width="1" height="15" fill="rgb(230,150,45)"/><text x="1031.00" y="191.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (203 samples, 0.07%)</title><rect x="1028" y="165" width="1" height="15" fill="rgb(218,200,3)"/><text x="1031.00" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (203 samples, 0.07%)</title><rect x="1028" y="149" width="1" height="15" fill="rgb(225,14,19)"/><text x="1031.00" y="159.50"></text></g><g><title>hashbrown::raw::imp::Group::match_byte (559 samples, 0.21%)</title><rect x="1029" y="181" width="2" height="15" fill="rgb(227,12,54)"/><text x="1032.00" y="191.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (559 samples, 0.21%)</title><rect x="1029" y="165" width="2" height="15" fill="rgb(254,41,24)"/><text x="1032.00" y="175.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut (43,134 samples, 15.89%)</title><rect x="844" y="309" width="187" height="15" fill="rgb(235,135,37)"/><text x="847.00" y="319.50">&lt;alloc::boxed::Box&lt;F&gt; as..</text></g><g><title>pvn_tls::nf::lib::validator::_$u7b$$u7b$closure$u7d$$u7d$::h7a1d2c2faf5027ec (43,026 samples, 15.85%)</title><rect x="844" y="293" width="187" height="15" fill="rgb(208,119,31)"/><text x="847.00" y="303.50">pvn_tls::nf::lib::valida..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (16,286 samples, 6.00%)</title><rect x="960" y="277" width="71" height="15" fill="rgb(253,106,16)"/><text x="963.00" y="287.50">std::col..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (16,286 samples, 6.00%)</title><rect x="960" y="261" width="71" height="15" fill="rgb(221,26,51)"/><text x="963.00" y="271.50">std::col..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (16,286 samples, 6.00%)</title><rect x="960" y="245" width="71" height="15" fill="rgb(241,103,6)"/><text x="963.00" y="255.50">hashbrow..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (16,286 samples, 6.00%)</title><rect x="960" y="229" width="71" height="15" fill="rgb(214,59,50)"/><text x="963.00" y="239.50">hashbrow..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (16,286 samples, 6.00%)</title><rect x="960" y="213" width="71" height="15" fill="rgb(222,34,54)"/><text x="963.00" y="223.50">hashbrow..</text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (1,767 samples, 0.65%)</title><rect x="1023" y="197" width="8" height="15" fill="rgb(240,109,1)"/><text x="1026.00" y="207.50"></text></g><g><title>hashbrown::raw::imp::Group::match_empty (51 samples, 0.02%)</title><rect x="1031" y="181" width="0" height="15" fill="rgb(224,182,10)"/><text x="1034.00" y="191.50"></text></g><g><title>hashbrown::raw::imp::Group::match_byte (51 samples, 0.02%)</title><rect x="1031" y="165" width="0" height="15" fill="rgb(216,143,42)"/><text x="1034.00" y="175.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (51 samples, 0.02%)</title><rect x="1031" y="149" width="0" height="15" fill="rgb(207,77,37)"/><text x="1034.00" y="159.50"></text></g><g><title>&lt;byteorder::BigEndian as byteorder::ByteOrder&gt;::read_u16 (70 samples, 0.03%)</title><rect x="1043" y="229" width="0" height="15" fill="rgb(219,180,6)"/><text x="1046.00" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (70 samples, 0.03%)</title><rect x="1043" y="213" width="0" height="15" fill="rgb(220,136,52)"/><text x="1046.00" y="223.50"></text></g><g><title>e2d2::headers::ip::IpHeader::dst (177 samples, 0.07%)</title><rect x="1043" y="229" width="1" height="15" fill="rgb(237,72,4)"/><text x="1046.00" y="239.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (177 samples, 0.07%)</title><rect x="1043" y="213" width="1" height="15" fill="rgb(254,0,51)"/><text x="1046.00" y="223.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (177 samples, 0.07%)</title><rect x="1043" y="197" width="1" height="15" fill="rgb(232,91,37)"/><text x="1046.00" y="207.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut (3,027 samples, 1.12%)</title><rect x="1032" y="277" width="13" height="15" fill="rgb(244,134,43)"/><text x="1035.00" y="287.50"></text></g><g><title>pvn_tls::nf::lib::validator::_$u7b$$u7b$closure$u7d$$u7d$::h38e3877a1357d7bd (2,918 samples, 1.07%)</title><rect x="1033" y="261" width="12" height="15" fill="rgb(234,30,40)"/><text x="1036.00" y="271.50"></text></g><g><title>e2d2::headers::ip::IpHeader::flow (639 samples, 0.24%)</title><rect x="1043" y="245" width="2" height="15" fill="rgb(213,225,41)"/><text x="1046.00" y="255.50"></text></g><g><title>e2d2::headers::ip::IpHeader::src (250 samples, 0.09%)</title><rect x="1044" y="229" width="1" height="15" fill="rgb(249,29,23)"/><text x="1047.00" y="239.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (250 samples, 0.09%)</title><rect x="1044" y="213" width="1" height="15" fill="rgb(241,163,25)"/><text x="1047.00" y="223.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (250 samples, 0.09%)</title><rect x="1044" y="197" width="1" height="15" fill="rgb(238,55,42)"/><text x="1047.00" y="207.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (81 samples, 0.03%)</title><rect x="1046" y="245" width="0" height="15" fill="rgb(227,217,34)"/><text x="1049.00" y="255.50"></text></g><g><title>_$LT$e2d2..operators..receive_batch..ReceiveBatch$LT$T$GT$$u20$as$u20$e2d2..operators..act..Act$GT$::act::_$u7b$$u7b$closure$u7d$$u7d$::h875165831de5abfa (81 samples, 0.03%)</title><rect x="1046" y="229" width="0" height="15" fill="rgb(237,88,6)"/><text x="1049.00" y="239.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (228 samples, 0.08%)</title><rect x="1046" y="229" width="1" height="15" fill="rgb(221,136,40)"/><text x="1049.00" y="239.50"></text></g><g><title>core::cmp::min (152 samples, 0.06%)</title><rect x="1047" y="181" width="1" height="15" fill="rgb(230,82,8)"/><text x="1050.00" y="191.50"></text></g><g><title>core::cmp::Ord::min (152 samples, 0.06%)</title><rect x="1047" y="165" width="1" height="15" fill="rgb(254,188,25)"/><text x="1050.00" y="175.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::le (60 samples, 0.02%)</title><rect x="1047" y="149" width="1" height="15" fill="rgb(249,112,2)"/><text x="1050.00" y="159.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (48 samples, 0.02%)</title><rect x="1048" y="181" width="0" height="15" fill="rgb(219,93,48)"/><text x="1051.00" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (386 samples, 0.14%)</title><rect x="1048" y="181" width="2" height="15" fill="rgb(236,222,4)"/><text x="1051.00" y="191.50"></text></g><g><title>core::sync::atomic::atomic_load (386 samples, 0.14%)</title><rect x="1048" y="165" width="2" height="15" fill="rgb(214,143,6)"/><text x="1051.00" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (140 samples, 0.05%)</title><rect x="1051" y="149" width="0" height="15" fill="rgb(207,176,3)"/><text x="1054.00" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (150 samples, 0.06%)</title><rect x="1051" y="165" width="0" height="15" fill="rgb(226,190,30)"/><text x="1054.00" y="175.50"></text></g><g><title>&lt;e2d2::queues::mpsc_mbuf_queue::MpscConsumer as e2d2::interface::PacketRx&gt;::recv (1,237 samples, 0.46%)</title><rect x="1047" y="213" width="5" height="15" fill="rgb(238,118,49)"/><text x="1050.00" y="223.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::dequeue (1,237 samples, 0.46%)</title><rect x="1047" y="197" width="5" height="15" fill="rgb(221,91,2)"/><text x="1050.00" y="207.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::dequeue_mbufs (628 samples, 0.23%)</title><rect x="1050" y="181" width="2" height="15" fill="rgb(217,114,50)"/><text x="1053.00" y="191.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (251 samples, 0.09%)</title><rect x="1051" y="165" width="1" height="15" fill="rgb(251,147,7)"/><text x="1054.00" y="175.50"></text></g><g><title>core::sync::atomic::atomic_load (251 samples, 0.09%)</title><rect x="1051" y="149" width="1" height="15" fill="rgb(239,140,50)"/><text x="1054.00" y="159.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::add_to_batch (105 samples, 0.04%)</title><rect x="1052" y="213" width="1" height="15" fill="rgb(248,176,13)"/><text x="1055.00" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (105 samples, 0.04%)</title><rect x="1052" y="197" width="1" height="15" fill="rgb(254,15,24)"/><text x="1055.00" y="207.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (1,804 samples, 0.66%)</title><rect x="1045" y="277" width="8" height="15" fill="rgb(216,25,11)"/><text x="1048.00" y="287.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (1,752 samples, 0.65%)</title><rect x="1046" y="261" width="7" height="15" fill="rgb(225,226,42)"/><text x="1049.00" y="271.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (1,671 samples, 0.62%)</title><rect x="1046" y="245" width="7" height="15" fill="rgb(232,183,1)"/><text x="1049.00" y="255.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (1,434 samples, 0.53%)</title><rect x="1047" y="229" width="6" height="15" fill="rgb(239,157,31)"/><text x="1050.00" y="239.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (86 samples, 0.03%)</title><rect x="1053" y="213" width="0" height="15" fill="rgb(224,48,3)"/><text x="1056.00" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (86 samples, 0.03%)</title><rect x="1053" y="197" width="0" height="15" fill="rgb(205,34,39)"/><text x="1056.00" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (70 samples, 0.03%)</title><rect x="1053" y="181" width="0" height="15" fill="rgb(209,10,36)"/><text x="1056.00" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (30 samples, 0.01%)</title><rect x="1053" y="165" width="0" height="15" fill="rgb(209,202,1)"/><text x="1056.00" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (30 samples, 0.01%)</title><rect x="1053" y="149" width="0" height="15" fill="rgb(254,218,18)"/><text x="1056.00" y="159.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::write_metadata (2,848 samples, 1.05%)</title><rect x="1053" y="277" width="13" height="15" fill="rgb(228,221,22)"/><text x="1056.00" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,825 samples, 1.04%)</title><rect x="1053" y="261" width="13" height="15" fill="rgb(230,129,26)"/><text x="1056.00" y="271.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (229 samples, 0.08%)</title><rect x="1066" y="245" width="1" height="15" fill="rgb(215,211,33)"/><text x="1069.00" y="255.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (229 samples, 0.08%)</title><rect x="1066" y="229" width="1" height="15" fill="rgb(243,165,37)"/><text x="1069.00" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (108 samples, 0.04%)</title><rect x="1066" y="213" width="1" height="15" fill="rgb(244,224,26)"/><text x="1069.00" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (108 samples, 0.04%)</title><rect x="1066" y="197" width="1" height="15" fill="rgb(224,4,2)"/><text x="1069.00" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (108 samples, 0.04%)</title><rect x="1066" y="181" width="1" height="15" fill="rgb(245,180,37)"/><text x="1069.00" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (108 samples, 0.04%)</title><rect x="1066" y="165" width="1" height="15" fill="rgb(241,43,26)"/><text x="1069.00" y="175.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (8,418 samples, 3.10%)</title><rect x="1031" y="309" width="37" height="15" fill="rgb(246,136,37)"/><text x="1034.00" y="319.50">&lt;e2..</text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::act (8,418 samples, 3.10%)</title><rect x="1031" y="293" width="37" height="15" fill="rgb(238,16,0)"/><text x="1034.00" y="303.50">&lt;e2..</text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (517 samples, 0.19%)</title><rect x="1066" y="277" width="2" height="15" fill="rgb(228,229,44)"/><text x="1069.00" y="287.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (503 samples, 0.19%)</title><rect x="1066" y="261" width="2" height="15" fill="rgb(221,49,23)"/><text x="1069.00" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (274 samples, 0.10%)</title><rect x="1067" y="245" width="1" height="15" fill="rgb(236,48,45)"/><text x="1070.00" y="255.50"></text></g><g><title>_$LT$e2d2..operators..restore_header..RestoreHeader$LT$T$C$M$C$V$GT$$u20$as$u20$e2d2..operators..iterator..BatchIterator$GT$::next_payload::_$u7b$$u7b$closure$u7d$$u7d$::h41fd1f295d51559b (274 samples, 0.10%)</title><rect x="1067" y="229" width="1" height="15" fill="rgb(206,228,46)"/><text x="1070.00" y="239.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::restore_saved_header (274 samples, 0.10%)</title><rect x="1067" y="213" width="1" height="15" fill="rgb(208,168,22)"/><text x="1070.00" y="223.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::read_header (162 samples, 0.06%)</title><rect x="1067" y="197" width="1" height="15" fill="rgb(218,32,18)"/><text x="1070.00" y="207.50"></text></g><g><title>e2d2::native::zcsi::mbuf::&lt;impl e2d2::native_include::rte_mbuf&gt;::read_metadata_slot (162 samples, 0.06%)</title><rect x="1067" y="181" width="1" height="15" fill="rgb(215,162,44)"/><text x="1070.00" y="191.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (598 samples, 0.22%)</title><rect x="1068" y="245" width="2" height="15" fill="rgb(226,57,8)"/><text x="1071.00" y="255.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (598 samples, 0.22%)</title><rect x="1068" y="229" width="2" height="15" fill="rgb(233,193,43)"/><text x="1071.00" y="239.50"></text></g><g><title>core::ptr::&lt;impl *mut T&gt;::is_null (106 samples, 0.04%)</title><rect x="1070" y="197" width="1" height="15" fill="rgb(244,103,50)"/><text x="1073.00" y="207.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::read_header (513 samples, 0.19%)</title><rect x="1071" y="197" width="2" height="15" fill="rgb(240,34,40)"/><text x="1074.00" y="207.50"></text></g><g><title>e2d2::native::zcsi::mbuf::&lt;impl e2d2::native_include::rte_mbuf&gt;::read_metadata_slot (513 samples, 0.19%)</title><rect x="1071" y="181" width="2" height="15" fill="rgb(223,191,43)"/><text x="1074.00" y="191.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (5,183 samples, 1.91%)</title><rect x="1068" y="277" width="22" height="15" fill="rgb(225,177,21)"/><text x="1071.00" y="287.50">&lt;..</text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (5,183 samples, 1.91%)</title><rect x="1068" y="261" width="22" height="15" fill="rgb(210,173,5)"/><text x="1071.00" y="271.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (4,585 samples, 1.69%)</title><rect x="1070" y="245" width="20" height="15" fill="rgb(226,170,25)"/><text x="1073.00" y="255.50"></text></g><g><title>_$LT$e2d2..operators..restore_header..RestoreHeader$LT$T$C$M$C$V$GT$$u20$as$u20$e2d2..operators..iterator..BatchIterator$GT$::next_payload::_$u7b$$u7b$closure$u7d$$u7d$::h41fd1f295d51559b (4,585 samples, 1.69%)</title><rect x="1070" y="229" width="20" height="15" fill="rgb(249,118,14)"/><text x="1073.00" y="239.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::restore_saved_header (4,585 samples, 1.69%)</title><rect x="1070" y="213" width="20" height="15" fill="rgb(211,217,27)"/><text x="1073.00" y="223.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::read_offset (3,966 samples, 1.46%)</title><rect x="1073" y="197" width="17" height="15" fill="rgb(236,22,3)"/><text x="1076.00" y="207.50"></text></g><g><title>e2d2::native::zcsi::mbuf::&lt;impl e2d2::native_include::rte_mbuf&gt;::read_metadata_slot (3,966 samples, 1.46%)</title><rect x="1073" y="181" width="17" height="15" fill="rgb(226,125,25)"/><text x="1076.00" y="191.50"></text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (5,443 samples, 2.00%)</title><rect x="1068" y="309" width="23" height="15" fill="rgb(246,166,20)"/><text x="1071.00" y="319.50">e..</text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (5,440 samples, 2.00%)</title><rect x="1068" y="293" width="23" height="15" fill="rgb(226,72,46)"/><text x="1071.00" y="303.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (257 samples, 0.09%)</title><rect x="1090" y="277" width="1" height="15" fill="rgb(220,220,42)"/><text x="1093.00" y="287.50"></text></g><g><title>_$LT$e2d2..operators..parsed_batch..ParsedBatch$LT$T$C$V$GT$$u20$as$u20$e2d2..operators..iterator..BatchIterator$GT$::next_payload::_$u7b$$u7b$closure$u7d$$u7d$::h88fdbb1d2b8d23cc (257 samples, 0.09%)</title><rect x="1090" y="261" width="1" height="15" fill="rgb(240,103,36)"/><text x="1093.00" y="271.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::parse_header (257 samples, 0.09%)</title><rect x="1090" y="245" width="1" height="15" fill="rgb(239,32,24)"/><text x="1093.00" y="255.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::payload_size (134 samples, 0.05%)</title><rect x="1091" y="229" width="0" height="15" fill="rgb(205,17,11)"/><text x="1094.00" y="239.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (59,365 samples, 21.87%)</title><rect x="833" y="357" width="258" height="15" fill="rgb(238,89,33)"/><text x="836.00" y="367.50">&lt;e2d2::operators::reset_parse::Res..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (57,351 samples, 21.13%)</title><rect x="842" y="341" width="249" height="15" fill="rgb(250,182,42)"/><text x="845.00" y="351.50">&lt;e2d2::operators::reset_parse::Re..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (57,351 samples, 21.13%)</title><rect x="842" y="325" width="249" height="15" fill="rgb(210,110,46)"/><text x="845.00" y="335.50">&lt;e2d2::operators::transform_batch..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (131 samples, 0.05%)</title><rect x="1092" y="325" width="0" height="15" fill="rgb(219,61,35)"/><text x="1095.00" y="335.50"></text></g><g><title>_$LT$e2d2..operators..receive_batch..ReceiveBatch$LT$T$GT$$u20$as$u20$e2d2..operators..act..Act$GT$::act::_$u7b$$u7b$closure$u7d$$u7d$::h875165831de5abfa (131 samples, 0.05%)</title><rect x="1092" y="309" width="0" height="15" fill="rgb(235,39,36)"/><text x="1095.00" y="319.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (299 samples, 0.11%)</title><rect x="1092" y="309" width="2" height="15" fill="rgb(208,52,53)"/><text x="1095.00" y="319.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::free_packet_batch (32 samples, 0.01%)</title><rect x="1094" y="293" width="0" height="15" fill="rgb(205,12,11)"/><text x="1097.00" y="303.50"></text></g><g><title>core::cmp::min (125 samples, 0.05%)</title><rect x="1094" y="261" width="1" height="15" fill="rgb(211,46,30)"/><text x="1097.00" y="271.50"></text></g><g><title>core::cmp::Ord::min (125 samples, 0.05%)</title><rect x="1094" y="245" width="1" height="15" fill="rgb(225,18,50)"/><text x="1097.00" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::le (45 samples, 0.02%)</title><rect x="1094" y="229" width="1" height="15" fill="rgb(223,222,31)"/><text x="1097.00" y="239.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (34 samples, 0.01%)</title><rect x="1095" y="261" width="0" height="15" fill="rgb(213,167,27)"/><text x="1098.00" y="271.50"></text></g><g><title>&lt;e2d2::queues::mpsc_mbuf_queue::MpscConsumer as e2d2::interface::PacketRx&gt;::recv (241 samples, 0.09%)</title><rect x="1094" y="293" width="1" height="15" fill="rgb(220,151,46)"/><text x="1097.00" y="303.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::dequeue (241 samples, 0.09%)</title><rect x="1094" y="277" width="1" height="15" fill="rgb(237,62,5)"/><text x="1097.00" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (63 samples, 0.02%)</title><rect x="1095" y="261" width="0" height="15" fill="rgb(244,19,37)"/><text x="1098.00" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (63 samples, 0.02%)</title><rect x="1095" y="245" width="0" height="15" fill="rgb(231,107,24)"/><text x="1098.00" y="255.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::add_to_batch (154 samples, 0.06%)</title><rect x="1095" y="293" width="1" height="15" fill="rgb(248,182,0)"/><text x="1098.00" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (154 samples, 0.06%)</title><rect x="1095" y="277" width="1" height="15" fill="rgb(235,221,2)"/><text x="1098.00" y="287.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (983 samples, 0.36%)</title><rect x="1092" y="341" width="4" height="15" fill="rgb(207,114,20)"/><text x="1095.00" y="351.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (852 samples, 0.31%)</title><rect x="1092" y="325" width="4" height="15" fill="rgb(242,62,5)"/><text x="1095.00" y="335.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (530 samples, 0.20%)</title><rect x="1094" y="309" width="2" height="15" fill="rgb(231,171,22)"/><text x="1097.00" y="319.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (95 samples, 0.03%)</title><rect x="1096" y="293" width="0" height="15" fill="rgb(248,204,44)"/><text x="1099.00" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (95 samples, 0.03%)</title><rect x="1096" y="277" width="0" height="15" fill="rgb(233,82,28)"/><text x="1099.00" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (82 samples, 0.03%)</title><rect x="1096" y="261" width="0" height="15" fill="rgb(231,144,35)"/><text x="1099.00" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (29 samples, 0.01%)</title><rect x="1096" y="245" width="0" height="15" fill="rgb(207,210,47)"/><text x="1099.00" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (29 samples, 0.01%)</title><rect x="1096" y="229" width="0" height="15" fill="rgb(210,83,10)"/><text x="1099.00" y="239.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (60,468 samples, 22.27%)</title><rect x="833" y="373" width="263" height="15" fill="rgb(244,229,26)"/><text x="836.00" y="383.50">&lt;e2d2::operators::composition_batch..</text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (1,067 samples, 0.39%)</title><rect x="1091" y="357" width="5" height="15" fill="rgb(241,21,21)"/><text x="1094.00" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (29 samples, 0.01%)</title><rect x="1100" y="309" width="0" height="15" fill="rgb(243,63,5)"/><text x="1103.00" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (160 samples, 0.06%)</title><rect x="1100" y="325" width="1" height="15" fill="rgb(231,79,37)"/><text x="1103.00" y="335.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (119 samples, 0.04%)</title><rect x="1100" y="309" width="1" height="15" fill="rgb(225,95,8)"/><text x="1103.00" y="319.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (119 samples, 0.04%)</title><rect x="1100" y="293" width="1" height="15" fill="rgb(229,115,35)"/><text x="1103.00" y="303.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (223 samples, 0.08%)</title><rect x="1102" y="293" width="1" height="15" fill="rgb(225,6,48)"/><text x="1105.00" y="303.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (223 samples, 0.08%)</title><rect x="1102" y="277" width="1" height="15" fill="rgb(229,32,24)"/><text x="1105.00" y="287.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (105 samples, 0.04%)</title><rect x="1103" y="261" width="0" height="15" fill="rgb(232,146,40)"/><text x="1106.00" y="271.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::done (105 samples, 0.04%)</title><rect x="1103" y="245" width="0" height="15" fill="rgb(245,136,9)"/><text x="1106.00" y="255.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (1,630 samples, 0.60%)</title><rect x="1096" y="373" width="7" height="15" fill="rgb(221,165,32)"/><text x="1099.00" y="383.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (1,543 samples, 0.57%)</title><rect x="1096" y="357" width="7" height="15" fill="rgb(224,65,39)"/><text x="1099.00" y="367.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (1,543 samples, 0.57%)</title><rect x="1096" y="341" width="7" height="15" fill="rgb(224,224,22)"/><text x="1099.00" y="351.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (590 samples, 0.22%)</title><rect x="1101" y="325" width="2" height="15" fill="rgb(207,178,37)"/><text x="1104.00" y="335.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (240 samples, 0.09%)</title><rect x="1102" y="309" width="1" height="15" fill="rgb(245,42,47)"/><text x="1105.00" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (65 samples, 0.02%)</title><rect x="1104" y="309" width="1" height="15" fill="rgb(249,132,37)"/><text x="1107.00" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (29 samples, 0.01%)</title><rect x="1105" y="293" width="0" height="15" fill="rgb(225,6,0)"/><text x="1108.00" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (29 samples, 0.01%)</title><rect x="1105" y="277" width="0" height="15" fill="rgb(220,77,5)"/><text x="1108.00" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (188 samples, 0.07%)</title><rect x="1104" y="325" width="1" height="15" fill="rgb(246,67,38)"/><text x="1107.00" y="335.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (123 samples, 0.05%)</title><rect x="1105" y="309" width="0" height="15" fill="rgb(218,196,26)"/><text x="1108.00" y="319.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (123 samples, 0.05%)</title><rect x="1105" y="293" width="0" height="15" fill="rgb(225,190,2)"/><text x="1108.00" y="303.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (1,288 samples, 0.47%)</title><rect x="1104" y="341" width="6" height="15" fill="rgb(250,31,41)"/><text x="1107.00" y="351.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (1,056 samples, 0.39%)</title><rect x="1105" y="325" width="5" height="15" fill="rgb(209,36,4)"/><text x="1108.00" y="335.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (1,527 samples, 0.56%)</title><rect x="1103" y="373" width="7" height="15" fill="rgb(220,155,20)"/><text x="1106.00" y="383.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (1,293 samples, 0.48%)</title><rect x="1104" y="357" width="6" height="15" fill="rgb(205,27,23)"/><text x="1107.00" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (139 samples, 0.05%)</title><rect x="1110" y="357" width="1" height="15" fill="rgb(231,121,18)"/><text x="1113.00" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (54 samples, 0.02%)</title><rect x="1111" y="309" width="0" height="15" fill="rgb(249,133,16)"/><text x="1114.00" y="319.50"></text></g><g><title>core::sync::atomic::atomic_store (54 samples, 0.02%)</title><rect x="1111" y="293" width="0" height="15" fill="rgb(230,151,18)"/><text x="1114.00" y="303.50"></text></g><g><title>__tls_get_addr (46 samples, 0.02%)</title><rect x="1117" y="197" width="0" height="15" fill="rgb(218,146,16)"/><text x="1120.00" y="207.50"></text></g><g><title>rte_lcore_id (72 samples, 0.03%)</title><rect x="1117" y="213" width="0" height="15" fill="rgb(240,12,43)"/><text x="1120.00" y="223.50"></text></g><g><title>rte_mov128 (39 samples, 0.01%)</title><rect x="1118" y="149" width="0" height="15" fill="rgb(221,141,23)"/><text x="1121.00" y="159.50"></text></g><g><title>rte_mov32 (39 samples, 0.01%)</title><rect x="1118" y="133" width="0" height="15" fill="rgb(228,141,33)"/><text x="1121.00" y="143.50"></text></g><g><title>_mm256_storeu_si256 (29 samples, 0.01%)</title><rect x="1118" y="117" width="0" height="15" fill="rgb(220,13,13)"/><text x="1121.00" y="127.50"></text></g><g><title>rte_memcpy (99 samples, 0.04%)</title><rect x="1118" y="181" width="0" height="15" fill="rgb(208,174,21)"/><text x="1121.00" y="191.50"></text></g><g><title>rte_memcpy_generic (85 samples, 0.03%)</title><rect x="1118" y="165" width="0" height="15" fill="rgb(243,74,15)"/><text x="1121.00" y="175.50"></text></g><g><title>__rte_ring_move_prod_head (179 samples, 0.07%)</title><rect x="1119" y="117" width="1" height="15" fill="rgb(233,209,5)"/><text x="1122.00" y="127.50"></text></g><g><title>rte_atomic32_cmpset (154 samples, 0.06%)</title><rect x="1119" y="101" width="1" height="15" fill="rgb(238,78,24)"/><text x="1122.00" y="111.50"></text></g><g><title>rte_mempool_put_bulk (699 samples, 0.26%)</title><rect x="1117" y="229" width="3" height="15" fill="rgb(253,62,48)"/><text x="1120.00" y="239.50"></text></g><g><title>rte_mempool_generic_put (610 samples, 0.22%)</title><rect x="1117" y="213" width="3" height="15" fill="rgb(218,185,19)"/><text x="1120.00" y="223.50"></text></g><g><title>__mempool_generic_put (610 samples, 0.22%)</title><rect x="1117" y="197" width="3" height="15" fill="rgb(216,90,25)"/><text x="1120.00" y="207.50"></text></g><g><title>rte_mempool_ops_enqueue_bulk (445 samples, 0.16%)</title><rect x="1118" y="181" width="2" height="15" fill="rgb(232,204,21)"/><text x="1121.00" y="191.50"></text></g><g><title>common_ring_mp_enqueue (398 samples, 0.15%)</title><rect x="1118" y="165" width="2" height="15" fill="rgb(251,213,8)"/><text x="1121.00" y="175.50"></text></g><g><title>rte_ring_mp_enqueue_bulk (373 samples, 0.14%)</title><rect x="1118" y="149" width="2" height="15" fill="rgb(254,99,22)"/><text x="1121.00" y="159.50"></text></g><g><title>__rte_ring_do_enqueue (373 samples, 0.14%)</title><rect x="1118" y="133" width="2" height="15" fill="rgb(239,148,11)"/><text x="1121.00" y="143.50"></text></g><g><title>rte_mbuf_refcnt_read (273 samples, 0.10%)</title><rect x="1123" y="213" width="1" height="15" fill="rgb(232,193,8)"/><text x="1126.00" y="223.50"></text></g><g><title>rte_atomic16_read (273 samples, 0.10%)</title><rect x="1123" y="197" width="1" height="15" fill="rgb(215,131,11)"/><text x="1126.00" y="207.50"></text></g><g><title>i40e_tx_free_bufs (2,717 samples, 1.00%)</title><rect x="1113" y="245" width="11" height="15" fill="rgb(226,39,5)"/><text x="1116.00" y="255.50"></text></g><g><title>rte_pktmbuf_prefree_seg (1,011 samples, 0.37%)</title><rect x="1120" y="229" width="4" height="15" fill="rgb(226,107,34)"/><text x="1123.00" y="239.50"></text></g><g><title>tx_backlog_entry (351 samples, 0.13%)</title><rect x="1124" y="245" width="2" height="15" fill="rgb(217,126,32)"/><text x="1127.00" y="255.50"></text></g><g><title>vtx (29 samples, 0.01%)</title><rect x="1126" y="245" width="0" height="15" fill="rgb(241,49,40)"/><text x="1129.00" y="255.50"></text></g><g><title>_mm_set_epi64x (77 samples, 0.03%)</title><rect x="1127" y="229" width="1" height="15" fill="rgb(245,10,49)"/><text x="1130.00" y="239.50"></text></g><g><title>vtx1 (386 samples, 0.14%)</title><rect x="1126" y="245" width="2" height="15" fill="rgb(225,91,20)"/><text x="1129.00" y="255.50"></text></g><g><title>_mm_set_epi64x (293 samples, 0.11%)</title><rect x="1132" y="213" width="2" height="15" fill="rgb(244,97,32)"/><text x="1135.00" y="223.50"></text></g><g><title>i40e_xmit_fixed_burst_vec (5,041 samples, 1.86%)</title><rect x="1112" y="261" width="22" height="15" fill="rgb(220,107,2)"/><text x="1115.00" y="271.50">i..</text></g><g><title>vtx (1,418 samples, 0.52%)</title><rect x="1128" y="245" width="6" height="15" fill="rgb(237,169,14)"/><text x="1131.00" y="255.50"></text></g><g><title>vtx1 (1,418 samples, 0.52%)</title><rect x="1128" y="229" width="6" height="15" fill="rgb(231,93,50)"/><text x="1131.00" y="239.50"></text></g><g><title>_mm_store_si128 (68 samples, 0.03%)</title><rect x="1134" y="213" width="0" height="15" fill="rgb(210,229,9)"/><text x="1137.00" y="223.50"></text></g><g><title>e2d2::interface::port::&lt;impl e2d2::interface::PacketTx for e2d2::allocators::cache_aligned::CacheAligned&lt;T&gt;&gt;::send (5,267 samples, 1.94%)</title><rect x="1111" y="357" width="23" height="15" fill="rgb(247,148,9)"/><text x="1114.00" y="367.50">e..</text></g><g><title>&lt;e2d2::interface::port::phy_port::PortQueue as e2d2::interface::PacketTx&gt;::send (5,267 samples, 1.94%)</title><rect x="1111" y="341" width="23" height="15" fill="rgb(205,83,34)"/><text x="1114.00" y="351.50">&lt;..</text></g><g><title>e2d2::interface::port::phy_port::PortQueue::send_queue (5,267 samples, 1.94%)</title><rect x="1111" y="325" width="23" height="15" fill="rgb(229,4,41)"/><text x="1114.00" y="335.50">e..</text></g><g><title>send_pkts (5,200 samples, 1.92%)</title><rect x="1111" y="309" width="23" height="15" fill="rgb(244,81,39)"/><text x="1114.00" y="319.50">s..</text></g><g><title>rte_eth_tx_burst (5,194 samples, 1.91%)</title><rect x="1111" y="293" width="23" height="15" fill="rgb(225,134,25)"/><text x="1114.00" y="303.50">r..</text></g><g><title>i40e_xmit_pkts_vec (5,092 samples, 1.88%)</title><rect x="1112" y="277" width="22" height="15" fill="rgb(250,136,47)"/><text x="1115.00" y="287.50">i..</text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::act::Act&gt;::send_q (5,569 samples, 2.05%)</title><rect x="1110" y="373" width="24" height="15" fill="rgb(232,169,10)"/><text x="1113.00" y="383.50">&lt;..</text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;::execute (69,286 samples, 25.52%)</title><rect x="833" y="405" width="301" height="15" fill="rgb(239,203,24)"/><text x="836.00" y="415.50">&lt;e2d2::operators::send_batch::SendBatch&lt;..</text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::act (69,276 samples, 25.52%)</title><rect x="833" y="389" width="301" height="15" fill="rgb(253,81,26)"/><text x="836.00" y="399.50">&lt;e2d2::operators::send_batch::SendBatch&lt;..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (82 samples, 0.03%)</title><rect x="1134" y="373" width="0" height="15" fill="rgb(225,86,52)"/><text x="1137.00" y="383.50"></text></g><g><title>_$LT$e2d2..operators..send_batch..SendBatch$LT$Port$C$V$GT$$u20$as$u20$e2d2..operators..act..Act$GT$::act::_$u7b$$u7b$closure$u7d$$u7d$::hd5577d61cee62b86 (82 samples, 0.03%)</title><rect x="1134" y="357" width="0" height="15" fill="rgb(239,159,10)"/><text x="1137.00" y="367.50"></text></g><g><title>e2d2::utils::asm::rdtsc_unsafe (2,670 samples, 0.98%)</title><rect x="1134" y="405" width="12" height="15" fill="rgb(253,198,16)"/><text x="1137.00" y="415.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_unlock (3,646 samples, 1.34%)</title><rect x="1148" y="341" width="16" height="15" fill="rgb(206,105,12)"/><text x="1151.00" y="351.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (3,646 samples, 1.34%)</title><rect x="1148" y="325" width="16" height="15" fill="rgb(244,226,23)"/><text x="1151.00" y="335.50"></text></g><g><title>__GI___pthread_mutex_unlock (3,646 samples, 1.34%)</title><rect x="1148" y="309" width="16" height="15" fill="rgb(208,189,52)"/><text x="1151.00" y="319.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (3,468 samples, 1.28%)</title><rect x="1149" y="293" width="15" height="15" fill="rgb(206,125,23)"/><text x="1152.00" y="303.50"></text></g><g><title>core::ptr::real_drop_in_place (3,695 samples, 1.36%)</title><rect x="1148" y="373" width="16" height="15" fill="rgb(240,217,43)"/><text x="1151.00" y="383.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,695 samples, 1.36%)</title><rect x="1148" y="357" width="16" height="15" fill="rgb(207,101,6)"/><text x="1151.00" y="367.50"></text></g><g><title>std::sys_common::poison::Flag::get (74 samples, 0.03%)</title><rect x="1166" y="325" width="0" height="15" fill="rgb(242,101,33)"/><text x="1169.00" y="335.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (74 samples, 0.03%)</title><rect x="1166" y="309" width="0" height="15" fill="rgb(223,221,33)"/><text x="1169.00" y="319.50"></text></g><g><title>core::sync::atomic::atomic_load (72 samples, 0.03%)</title><rect x="1166" y="293" width="0" height="15" fill="rgb(218,71,6)"/><text x="1169.00" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (104 samples, 0.04%)</title><rect x="1166" y="229" width="1" height="15" fill="rgb(225,159,10)"/><text x="1169.00" y="239.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (321 samples, 0.12%)</title><rect x="1166" y="357" width="1" height="15" fill="rgb(251,23,53)"/><text x="1169.00" y="367.50"></text></g><g><title>std::sys_common::poison::Flag::borrow (321 samples, 0.12%)</title><rect x="1166" y="341" width="1" height="15" fill="rgb(210,136,35)"/><text x="1169.00" y="351.50"></text></g><g><title>std::thread::panicking (247 samples, 0.09%)</title><rect x="1166" y="325" width="1" height="15" fill="rgb(238,196,10)"/><text x="1169.00" y="335.50"></text></g><g><title>std::panicking::panicking (247 samples, 0.09%)</title><rect x="1166" y="309" width="1" height="15" fill="rgb(252,143,9)"/><text x="1169.00" y="319.50"></text></g><g><title>std::panicking::update_panic_count (246 samples, 0.09%)</title><rect x="1166" y="293" width="1" height="15" fill="rgb(250,21,25)"/><text x="1169.00" y="303.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (246 samples, 0.09%)</title><rect x="1166" y="277" width="1" height="15" fill="rgb(220,157,15)"/><text x="1169.00" y="287.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (246 samples, 0.09%)</title><rect x="1166" y="261" width="1" height="15" fill="rgb(232,100,4)"/><text x="1169.00" y="271.50"></text></g><g><title>std::panicking::update_panic_count::_$u7b$$u7b$closure$u7d$$u7d$::h93a68fffdc8624a0 (169 samples, 0.06%)</title><rect x="1166" y="245" width="1" height="15" fill="rgb(210,198,52)"/><text x="1169.00" y="255.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (65 samples, 0.02%)</title><rect x="1167" y="229" width="0" height="15" fill="rgb(207,122,53)"/><text x="1170.00" y="239.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (65 samples, 0.02%)</title><rect x="1167" y="213" width="0" height="15" fill="rgb(230,72,20)"/><text x="1170.00" y="223.50"></text></g><g><title>core::mem::replace (65 samples, 0.02%)</title><rect x="1167" y="197" width="0" height="15" fill="rgb(227,181,11)"/><text x="1170.00" y="207.50"></text></g><g><title>core::mem::swap (65 samples, 0.02%)</title><rect x="1167" y="181" width="0" height="15" fill="rgb(213,155,45)"/><text x="1170.00" y="191.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (65 samples, 0.02%)</title><rect x="1167" y="165" width="0" height="15" fill="rgb(238,141,46)"/><text x="1170.00" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (65 samples, 0.02%)</title><rect x="1167" y="149" width="0" height="15" fill="rgb(248,18,2)"/><text x="1170.00" y="159.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request (110,879 samples, 40.84%)</title><rect x="704" y="453" width="482" height="15" fill="rgb(210,125,26)"/><text x="707.00" y="463.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_loop (110,871 samples, 40.84%)</title><rect x="704" y="437" width="482" height="15" fill="rgb(224,160,48)"/><text x="707.00" y="447.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execut..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_internal (110,663 samples, 40.76%)</title><rect x="704" y="421" width="482" height="15" fill="rgb(232,118,22)"/><text x="707.00" y="431.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execut..</text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (9,095 samples, 3.35%)</title><rect x="1146" y="405" width="40" height="15" fill="rgb(230,170,14)"/><text x="1149.00" y="415.50">std..</text></g><g><title>std::sync::mpsc::sync::Packet&lt;T&gt;::try_recv (8,721 samples, 3.21%)</title><rect x="1148" y="389" width="38" height="15" fill="rgb(213,224,16)"/><text x="1151.00" y="399.50">std..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (4,916 samples, 1.81%)</title><rect x="1164" y="373" width="22" height="15" fill="rgb(240,92,34)"/><text x="1167.00" y="383.50">s..</text></g><g><title>std::sys_common::mutex::Mutex::raw_lock (4,275 samples, 1.57%)</title><rect x="1167" y="357" width="19" height="15" fill="rgb(244,8,21)"/><text x="1170.00" y="367.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (4,275 samples, 1.57%)</title><rect x="1167" y="341" width="19" height="15" fill="rgb(230,94,19)"/><text x="1170.00" y="351.50"></text></g><g><title>__GI___pthread_mutex_lock (4,275 samples, 1.57%)</title><rect x="1167" y="325" width="19" height="15" fill="rgb(254,51,25)"/><text x="1170.00" y="335.50"></text></g><g><title>__GI___clone (110,887 samples, 40.85%)</title><rect x="704" y="613" width="482" height="15" fill="rgb(245,12,44)"/><text x="707.00" y="623.50">__GI___clone</text></g><g><title>start_thread (110,887 samples, 40.85%)</title><rect x="704" y="597" width="482" height="15" fill="rgb(214,93,49)"/><text x="707.00" y="607.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (110,887 samples, 40.85%)</title><rect x="704" y="581" width="482" height="15" fill="rgb(254,118,42)"/><text x="707.00" y="591.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys_common::thread::start_thread (110,887 samples, 40.85%)</title><rect x="704" y="565" width="482" height="15" fill="rgb(222,144,51)"/><text x="707.00" y="575.50">std::sys_common::thread::start_thread</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (110,887 samples, 40.85%)</title><rect x="704" y="549" width="482" height="15" fill="rgb(233,191,49)"/><text x="707.00" y="559.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (110,887 samples, 40.85%)</title><rect x="704" y="533" width="482" height="15" fill="rgb(225,93,31)"/><text x="707.00" y="543.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h83d6f0cf65a68686 (110,887 samples, 40.85%)</title><rect x="704" y="517" width="482" height="15" fill="rgb(215,79,35)"/><text x="707.00" y="527.50">core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (110,887 samples, 40.85%)</title><rect x="704" y="501" width="482" height="15" fill="rgb(241,164,52)"/><text x="707.00" y="511.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>e2d2::scheduler::context::NetBricksContext::start_scheduler::_$u7b$$u7b$closure$u7d$$u7d$::hb2befc178c075dc6 (110,887 samples, 40.85%)</title><rect x="704" y="485" width="482" height="15" fill="rgb(243,148,33)"/><text x="707.00" y="495.50">e2d2::scheduler::context::NetBricksContext::start_scheduler::_$u7b..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_requests (110,880 samples, 40.84%)</title><rect x="704" y="469" width="482" height="15" fill="rgb(246,65,51)"/><text x="707.00" y="479.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle..</text></g><g><title>core::ptr::real_drop_in_place (98 samples, 0.04%)</title><rect x="1188" y="533" width="1" height="15" fill="rgb(208,166,15)"/><text x="1191.00" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (98 samples, 0.04%)</title><rect x="1188" y="517" width="1" height="15" fill="rgb(233,46,3)"/><text x="1191.00" y="527.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_unlock (98 samples, 0.04%)</title><rect x="1188" y="501" width="1" height="15" fill="rgb(225,56,38)"/><text x="1191.00" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (98 samples, 0.04%)</title><rect x="1188" y="485" width="1" height="15" fill="rgb(225,65,15)"/><text x="1191.00" y="495.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request (835 samples, 0.31%)</title><rect x="1186" y="613" width="3" height="15" fill="rgb(217,84,52)"/><text x="1189.00" y="623.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_loop (835 samples, 0.31%)</title><rect x="1186" y="597" width="3" height="15" fill="rgb(254,12,39)"/><text x="1189.00" y="607.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_internal (835 samples, 0.31%)</title><rect x="1186" y="581" width="3" height="15" fill="rgb(250,39,40)"/><text x="1189.00" y="591.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (177 samples, 0.07%)</title><rect x="1188" y="565" width="1" height="15" fill="rgb(232,77,34)"/><text x="1191.00" y="575.50"></text></g><g><title>std::sync::mpsc::sync::Packet&lt;T&gt;::try_recv (177 samples, 0.07%)</title><rect x="1188" y="549" width="1" height="15" fill="rgb(211,208,49)"/><text x="1191.00" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (79 samples, 0.03%)</title><rect x="1189" y="533" width="0" height="15" fill="rgb(212,209,51)"/><text x="1192.00" y="543.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_lock (79 samples, 0.03%)</title><rect x="1189" y="517" width="0" height="15" fill="rgb(241,34,31)"/><text x="1192.00" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (79 samples, 0.03%)</title><rect x="1189" y="501" width="0" height="15" fill="rgb(235,120,5)"/><text x="1192.00" y="511.50"></text></g><g><title>i40e_xmit_fixed_burst_vec (26 samples, 0.01%)</title><rect x="1189" y="613" width="0" height="15" fill="rgb(210,169,15)"/><text x="1192.00" y="623.50"></text></g><g><title>sched-3 (134,345 samples, 49.49%)</title><rect x="605" y="629" width="584" height="15" fill="rgb(227,183,15)"/><text x="608.00" y="639.50">sched-3</text></g><g><title>all (271,477 samples, 100%)</title><rect x="10" y="645" width="1180" height="15" fill="rgb(210,207,5)"/><text x="13.00" y="655.50"></text></g></g></svg>