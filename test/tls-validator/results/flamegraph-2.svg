<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="694" fill="url(#background)"/><text id="title" x="600.00" y="24.00">Flame Graph</text><text id="details" x="10.00" y="677.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="677.00"> </text><g id="frames"><g><title>__libc_start_main (57 samples, 0.02%)</title><rect x="10" y="597" width="0" height="15" fill="rgb(252,111,7)"/><text x="13.00" y="607.50"></text></g><g><title>main (57 samples, 0.02%)</title><rect x="10" y="581" width="0" height="15" fill="rgb(210,95,28)"/><text x="13.00" y="591.50"></text></g><g><title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h8a731bc98067ee20 (57 samples, 0.02%)</title><rect x="10" y="565" width="0" height="15" fill="rgb(244,53,15)"/><text x="13.00" y="575.50"></text></g><g><title>pvn_tls::main (57 samples, 0.02%)</title><rect x="10" y="549" width="0" height="15" fill="rgb(247,29,1)"/><text x="13.00" y="559.50"></text></g><g><title>e2d2::scheduler::context::initialize_system (57 samples, 0.02%)</title><rect x="10" y="533" width="0" height="15" fill="rgb(228,54,25)"/><text x="13.00" y="543.50"></text></g><g><title>e2d2::interface::port::phy_port::PmdPort::new_dpdk_port (57 samples, 0.02%)</title><rect x="10" y="517" width="0" height="15" fill="rgb(245,229,43)"/><text x="13.00" y="527.50"></text></g><g><title>init_pmd_port (57 samples, 0.02%)</title><rect x="10" y="501" width="0" height="15" fill="rgb(238,25,24)"/><text x="13.00" y="511.50"></text></g><g><title>rte_eth_dev_configure (57 samples, 0.02%)</title><rect x="10" y="485" width="0" height="15" fill="rgb(250,149,19)"/><text x="13.00" y="495.50"></text></g><g><title>i40e_dev_configure (57 samples, 0.02%)</title><rect x="10" y="469" width="0" height="15" fill="rgb(215,41,0)"/><text x="13.00" y="479.50"></text></g><g><title>i40e_dev_sync_phy_type (57 samples, 0.02%)</title><rect x="10" y="453" width="0" height="15" fill="rgb(239,191,44)"/><text x="13.00" y="463.50"></text></g><g><title>i40e_aq_get_phy_capabilities (57 samples, 0.02%)</title><rect x="10" y="437" width="0" height="15" fill="rgb(223,226,9)"/><text x="13.00" y="447.50"></text></g><g><title>i40e_asq_send_command (36 samples, 0.01%)</title><rect x="10" y="421" width="0" height="15" fill="rgb(254,168,49)"/><text x="13.00" y="431.50"></text></g><g><title>rte_delay_us_block (36 samples, 0.01%)</title><rect x="10" y="405" width="0" height="15" fill="rgb(210,183,19)"/><text x="13.00" y="415.50"></text></g><g><title>rte_pause (35 samples, 0.01%)</title><rect x="10" y="389" width="0" height="15" fill="rgb(230,48,42)"/><text x="13.00" y="399.50"></text></g><g><title>_mm_pause (35 samples, 0.01%)</title><rect x="10" y="373" width="0" height="15" fill="rgb(210,33,51)"/><text x="13.00" y="383.50"></text></g><g><title>e2d2::interface::port::phy_port::PmdPort::new_dpdk_port (36 samples, 0.01%)</title><rect x="10" y="533" width="0" height="15" fill="rgb(238,218,3)"/><text x="13.00" y="543.50"></text></g><g><title>init_pmd_port (36 samples, 0.01%)</title><rect x="10" y="517" width="0" height="15" fill="rgb(220,171,54)"/><text x="13.00" y="527.50"></text></g><g><title>rte_eth_dev_start (36 samples, 0.01%)</title><rect x="10" y="501" width="0" height="15" fill="rgb(214,81,8)"/><text x="13.00" y="511.50"></text></g><g><title>i40e_dev_start (36 samples, 0.01%)</title><rect x="10" y="485" width="0" height="15" fill="rgb(243,152,35)"/><text x="13.00" y="495.50"></text></g><g><title>i40e_apply_link_speed (36 samples, 0.01%)</title><rect x="10" y="469" width="0" height="15" fill="rgb(214,175,23)"/><text x="13.00" y="479.50"></text></g><g><title>i40e_phy_conf_link (36 samples, 0.01%)</title><rect x="10" y="453" width="0" height="15" fill="rgb(223,180,36)"/><text x="13.00" y="463.50"></text></g><g><title>i40e_aq_get_phy_capabilities (36 samples, 0.01%)</title><rect x="10" y="437" width="0" height="15" fill="rgb(217,138,3)"/><text x="13.00" y="447.50"></text></g><g><title>i40e_asq_send_command (36 samples, 0.01%)</title><rect x="10" y="421" width="0" height="15" fill="rgb(229,228,52)"/><text x="13.00" y="431.50"></text></g><g><title>rte_delay_us_block (36 samples, 0.01%)</title><rect x="10" y="405" width="0" height="15" fill="rgb(217,3,9)"/><text x="13.00" y="415.50"></text></g><g><title>rte_pause (32 samples, 0.01%)</title><rect x="10" y="389" width="0" height="15" fill="rgb(212,133,35)"/><text x="13.00" y="399.50"></text></g><g><title>_mm_pause (32 samples, 0.01%)</title><rect x="10" y="373" width="0" height="15" fill="rgb(247,148,17)"/><text x="13.00" y="383.50"></text></g><g><title>main (44 samples, 0.01%)</title><rect x="10" y="597" width="0" height="15" fill="rgb(249,146,54)"/><text x="13.00" y="607.50"></text></g><g><title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h8a731bc98067ee20 (44 samples, 0.01%)</title><rect x="10" y="581" width="0" height="15" fill="rgb(218,184,16)"/><text x="13.00" y="591.50"></text></g><g><title>pvn_tls::main (44 samples, 0.01%)</title><rect x="10" y="565" width="0" height="15" fill="rgb(223,69,25)"/><text x="13.00" y="575.50"></text></g><g><title>e2d2::scheduler::context::initialize_system (44 samples, 0.01%)</title><rect x="10" y="549" width="0" height="15" fill="rgb(208,157,23)"/><text x="13.00" y="559.50"></text></g><g><title>clear_huge_page (85 samples, 0.02%)</title><rect x="10" y="277" width="0" height="15" fill="rgb(210,57,4)"/><text x="13.00" y="287.50"></text></g><g><title>rte_eal_memory_init (2,137 samples, 0.61%)</title><rect x="10" y="517" width="7" height="15" fill="rgb(214,6,25)"/><text x="13.00" y="527.50"></text></g><g><title>rte_eal_hugepage_init (2,137 samples, 0.61%)</title><rect x="10" y="501" width="7" height="15" fill="rgb(213,50,8)"/><text x="13.00" y="511.50"></text></g><g><title>map_all_hugepages (2,137 samples, 0.61%)</title><rect x="10" y="485" width="7" height="15" fill="rgb(206,66,29)"/><text x="13.00" y="495.50"></text></g><g><title>__GI___mmap64 (2,137 samples, 0.61%)</title><rect x="10" y="469" width="7" height="15" fill="rgb(218,126,17)"/><text x="13.00" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,137 samples, 0.61%)</title><rect x="10" y="453" width="7" height="15" fill="rgb(254,28,40)"/><text x="13.00" y="463.50"></text></g><g><title>do_syscall_64 (2,137 samples, 0.61%)</title><rect x="10" y="437" width="7" height="15" fill="rgb(219,197,35)"/><text x="13.00" y="447.50"></text></g><g><title>sys_mmap (2,137 samples, 0.61%)</title><rect x="10" y="421" width="7" height="15" fill="rgb(221,125,46)"/><text x="13.00" y="431.50"></text></g><g><title>sys_mmap_pgoff (2,137 samples, 0.61%)</title><rect x="10" y="405" width="7" height="15" fill="rgb(212,174,7)"/><text x="13.00" y="415.50"></text></g><g><title>vm_mmap_pgoff (2,137 samples, 0.61%)</title><rect x="10" y="389" width="7" height="15" fill="rgb(232,26,34)"/><text x="13.00" y="399.50"></text></g><g><title>__mm_populate (2,137 samples, 0.61%)</title><rect x="10" y="373" width="7" height="15" fill="rgb(231,23,2)"/><text x="13.00" y="383.50"></text></g><g><title>populate_vma_page_range (2,137 samples, 0.61%)</title><rect x="10" y="357" width="7" height="15" fill="rgb(247,226,7)"/><text x="13.00" y="367.50"></text></g><g><title>__get_user_pages (2,137 samples, 0.61%)</title><rect x="10" y="341" width="7" height="15" fill="rgb(245,38,10)"/><text x="13.00" y="351.50"></text></g><g><title>follow_hugetlb_page (2,137 samples, 0.61%)</title><rect x="10" y="325" width="7" height="15" fill="rgb(249,65,4)"/><text x="13.00" y="335.50"></text></g><g><title>hugetlb_fault (2,117 samples, 0.61%)</title><rect x="10" y="309" width="7" height="15" fill="rgb(221,87,15)"/><text x="13.00" y="319.50"></text></g><g><title>hugetlb_no_page (2,117 samples, 0.61%)</title><rect x="10" y="293" width="7" height="15" fill="rgb(246,80,53)"/><text x="13.00" y="303.50"></text></g><g><title>clear_page_erms (2,020 samples, 0.58%)</title><rect x="10" y="277" width="7" height="15" fill="rgb(214,180,21)"/><text x="13.00" y="287.50"></text></g><g><title>pvn_tls::main (2,138 samples, 0.61%)</title><rect x="10" y="597" width="7" height="15" fill="rgb(231,25,37)"/><text x="13.00" y="607.50"></text></g><g><title>e2d2::scheduler::context::initialize_system (2,138 samples, 0.61%)</title><rect x="10" y="581" width="7" height="15" fill="rgb(205,213,42)"/><text x="13.00" y="591.50"></text></g><g><title>init_system_whitelisted (2,138 samples, 0.61%)</title><rect x="10" y="565" width="7" height="15" fill="rgb(232,145,18)"/><text x="13.00" y="575.50"></text></g><g><title>init_eal (2,138 samples, 0.61%)</title><rect x="10" y="549" width="7" height="15" fill="rgb(248,210,51)"/><text x="13.00" y="559.50"></text></g><g><title>rte_eal_init (2,138 samples, 0.61%)</title><rect x="10" y="533" width="7" height="15" fill="rgb(217,91,19)"/><text x="13.00" y="543.50"></text></g><g><title>[unknown] (2,256 samples, 0.65%)</title><rect x="10" y="613" width="7" height="15" fill="rgb(249,26,32)"/><text x="13.00" y="623.50"></text></g><g><title>do_syscall_64 (42 samples, 0.01%)</title><rect x="17" y="501" width="0" height="15" fill="rgb(205,86,54)"/><text x="20.00" y="511.50"></text></g><g><title>sys_nanosleep (30 samples, 0.01%)</title><rect x="17" y="485" width="0" height="15" fill="rgb(205,154,31)"/><text x="20.00" y="495.50"></text></g><g><title>hrtimer_nanosleep (30 samples, 0.01%)</title><rect x="17" y="469" width="0" height="15" fill="rgb(240,137,27)"/><text x="20.00" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (43 samples, 0.01%)</title><rect x="17" y="517" width="0" height="15" fill="rgb(222,129,47)"/><text x="20.00" y="527.50"></text></g><g><title>__GI___nanosleep (48 samples, 0.01%)</title><rect x="17" y="533" width="0" height="15" fill="rgb(254,159,39)"/><text x="20.00" y="543.50"></text></g><g><title>i40e_dev_sync_phy_type (56 samples, 0.02%)</title><rect x="17" y="373" width="1" height="15" fill="rgb(247,54,41)"/><text x="20.00" y="383.50"></text></g><g><title>i40e_aq_get_phy_capabilities (56 samples, 0.02%)</title><rect x="17" y="357" width="1" height="15" fill="rgb(207,178,11)"/><text x="20.00" y="367.50"></text></g><g><title>i40e_asq_send_command (36 samples, 0.01%)</title><rect x="18" y="341" width="0" height="15" fill="rgb(217,94,53)"/><text x="21.00" y="351.50"></text></g><g><title>rte_delay_us_block (35 samples, 0.01%)</title><rect x="18" y="325" width="0" height="15" fill="rgb(228,31,12)"/><text x="21.00" y="335.50"></text></g><g><title>rte_pause (30 samples, 0.01%)</title><rect x="18" y="309" width="0" height="15" fill="rgb(232,151,24)"/><text x="21.00" y="319.50"></text></g><g><title>_mm_pause (30 samples, 0.01%)</title><rect x="18" y="293" width="0" height="15" fill="rgb(233,92,35)"/><text x="21.00" y="303.50"></text></g><g><title>i40e_pf_reset (77 samples, 0.02%)</title><rect x="18" y="373" width="0" height="15" fill="rgb(253,213,45)"/><text x="21.00" y="383.50"></text></g><g><title>rte_delay_us_block (76 samples, 0.02%)</title><rect x="18" y="357" width="0" height="15" fill="rgb(220,91,1)"/><text x="21.00" y="367.50"></text></g><g><title>rte_pause (69 samples, 0.02%)</title><rect x="18" y="341" width="0" height="15" fill="rgb(232,128,3)"/><text x="21.00" y="351.50"></text></g><g><title>_mm_pause (69 samples, 0.02%)</title><rect x="18" y="325" width="0" height="15" fill="rgb(231,143,41)"/><text x="21.00" y="335.50"></text></g><g><title>i40e_pf_setup (30 samples, 0.01%)</title><rect x="18" y="373" width="0" height="15" fill="rgb(252,132,14)"/><text x="21.00" y="383.50"></text></g><g><title>i40e_aq_get_phy_capabilities (36 samples, 0.01%)</title><rect x="18" y="357" width="0" height="15" fill="rgb(234,82,12)"/><text x="21.00" y="367.50"></text></g><g><title>i40e_asq_send_command (36 samples, 0.01%)</title><rect x="18" y="341" width="0" height="15" fill="rgb(227,131,7)"/><text x="21.00" y="351.50"></text></g><g><title>rte_delay_us_block (35 samples, 0.01%)</title><rect x="18" y="325" width="0" height="15" fill="rgb(227,175,22)"/><text x="21.00" y="335.50"></text></g><g><title>i40e_set_fc (93 samples, 0.03%)</title><rect x="18" y="373" width="0" height="15" fill="rgb(227,121,14)"/><text x="21.00" y="383.50"></text></g><g><title>i40e_update_link_info (57 samples, 0.02%)</title><rect x="18" y="357" width="0" height="15" fill="rgb(243,3,54)"/><text x="21.00" y="367.50"></text></g><g><title>i40e_aq_get_phy_capabilities (37 samples, 0.01%)</title><rect x="18" y="341" width="0" height="15" fill="rgb(227,71,18)"/><text x="21.00" y="351.50"></text></g><g><title>i40e_asq_send_command (37 samples, 0.01%)</title><rect x="18" y="325" width="0" height="15" fill="rgb(234,133,12)"/><text x="21.00" y="335.50"></text></g><g><title>rte_delay_us_block (37 samples, 0.01%)</title><rect x="18" y="309" width="0" height="15" fill="rgb(220,214,32)"/><text x="21.00" y="319.50"></text></g><g><title>rte_pause (33 samples, 0.01%)</title><rect x="18" y="293" width="0" height="15" fill="rgb(227,180,24)"/><text x="21.00" y="303.50"></text></g><g><title>_mm_pause (33 samples, 0.01%)</title><rect x="18" y="277" width="0" height="15" fill="rgb(220,219,6)"/><text x="21.00" y="287.50"></text></g><g><title>attach_pmd_device (291 samples, 0.08%)</title><rect x="17" y="501" width="1" height="15" fill="rgb(231,52,27)"/><text x="20.00" y="511.50"></text></g><g><title>rte_eth_dev_attach (291 samples, 0.08%)</title><rect x="17" y="485" width="1" height="15" fill="rgb(215,32,19)"/><text x="20.00" y="495.50"></text></g><g><title>rte_eal_hotplug_add (291 samples, 0.08%)</title><rect x="17" y="469" width="1" height="15" fill="rgb(252,28,7)"/><text x="20.00" y="479.50"></text></g><g><title>pci_probe_all_drivers (291 samples, 0.08%)</title><rect x="17" y="453" width="1" height="15" fill="rgb(231,52,20)"/><text x="20.00" y="463.50"></text></g><g><title>rte_pci_probe_one_driver (291 samples, 0.08%)</title><rect x="17" y="437" width="1" height="15" fill="rgb(208,185,32)"/><text x="20.00" y="447.50"></text></g><g><title>eth_i40e_pci_probe (291 samples, 0.08%)</title><rect x="17" y="421" width="1" height="15" fill="rgb(225,39,39)"/><text x="20.00" y="431.50"></text></g><g><title>rte_eth_dev_pci_generic_probe (291 samples, 0.08%)</title><rect x="17" y="405" width="1" height="15" fill="rgb(241,2,24)"/><text x="20.00" y="415.50"></text></g><g><title>eth_i40e_dev_init (291 samples, 0.08%)</title><rect x="17" y="389" width="1" height="15" fill="rgb(249,32,15)"/><text x="20.00" y="399.50"></text></g><g><title>i40e_dev_start (66 samples, 0.02%)</title><rect x="18" y="469" width="1" height="15" fill="rgb(246,111,16)"/><text x="21.00" y="479.50"></text></g><g><title>i40e_dev_switch_queues (32 samples, 0.01%)</title><rect x="19" y="453" width="0" height="15" fill="rgb(238,173,24)"/><text x="22.00" y="463.50"></text></g><g><title>rte_eth_dev_start (94 samples, 0.03%)</title><rect x="18" y="485" width="1" height="15" fill="rgb(243,56,14)"/><text x="21.00" y="495.50"></text></g><g><title>e2d2::scheduler::context::initialize_system (395 samples, 0.11%)</title><rect x="17" y="533" width="2" height="15" fill="rgb(251,102,37)"/><text x="20.00" y="543.50"></text></g><g><title>e2d2::interface::port::phy_port::PmdPort::new_dpdk_port (395 samples, 0.11%)</title><rect x="17" y="517" width="2" height="15" fill="rgb(221,112,21)"/><text x="20.00" y="527.50"></text></g><g><title>init_pmd_port (104 samples, 0.03%)</title><rect x="18" y="501" width="1" height="15" fill="rgb(220,3,52)"/><text x="21.00" y="511.50"></text></g><g><title>_start (452 samples, 0.13%)</title><rect x="17" y="613" width="2" height="15" fill="rgb(249,42,16)"/><text x="20.00" y="623.50"></text></g><g><title>__libc_start_main (452 samples, 0.13%)</title><rect x="17" y="597" width="2" height="15" fill="rgb(206,110,36)"/><text x="20.00" y="607.50"></text></g><g><title>main (452 samples, 0.13%)</title><rect x="17" y="581" width="2" height="15" fill="rgb(241,197,12)"/><text x="20.00" y="591.50"></text></g><g><title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h8a731bc98067ee20 (452 samples, 0.13%)</title><rect x="17" y="565" width="2" height="15" fill="rgb(218,157,14)"/><text x="20.00" y="575.50"></text></g><g><title>pvn_tls::main (452 samples, 0.13%)</title><rect x="17" y="549" width="2" height="15" fill="rgb(235,217,12)"/><text x="20.00" y="559.50"></text></g><g><title>pvn-tls (2,728 samples, 0.78%)</title><rect x="10" y="629" width="9" height="15" fill="rgb(209,198,45)"/><text x="13.00" y="639.50"></text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (872 samples, 0.25%)</title><rect x="19" y="613" width="3" height="15" fill="rgb(222,70,50)"/><text x="22.00" y="623.50"></text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;::execute (810 samples, 0.23%)</title><rect x="22" y="613" width="2" height="15" fill="rgb(245,0,46)"/><text x="25.00" y="623.50"></text></g><g><title>[libc-2.27.so] (349 samples, 0.10%)</title><rect x="24" y="613" width="2" height="15" fill="rgb(238,158,38)"/><text x="27.00" y="623.50"></text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;::execute (349 samples, 0.10%)</title><rect x="24" y="597" width="2" height="15" fill="rgb(226,217,17)"/><text x="27.00" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (776 samples, 0.22%)</title><rect x="26" y="597" width="2" height="15" fill="rgb(213,89,9)"/><text x="29.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (2,448 samples, 0.70%)</title><rect x="28" y="597" width="9" height="15" fill="rgb(209,135,47)"/><text x="31.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (11,202 samples, 3.21%)</title><rect x="37" y="597" width="37" height="15" fill="rgb(216,59,29)"/><text x="40.00" y="607.50">&lt;e2..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (11,200 samples, 3.21%)</title><rect x="37" y="581" width="37" height="15" fill="rgb(212,133,7)"/><text x="40.00" y="591.50">&lt;e2..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (11,200 samples, 3.21%)</title><rect x="37" y="565" width="37" height="15" fill="rgb(251,2,0)"/><text x="40.00" y="575.50">&lt;e2..</text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (559 samples, 0.16%)</title><rect x="73" y="549" width="1" height="15" fill="rgb(247,104,1)"/><text x="76.00" y="559.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::act (559 samples, 0.16%)</title><rect x="73" y="533" width="1" height="15" fill="rgb(240,112,26)"/><text x="76.00" y="543.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (966 samples, 0.28%)</title><rect x="79" y="581" width="3" height="15" fill="rgb(217,200,49)"/><text x="82.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (966 samples, 0.28%)</title><rect x="79" y="565" width="3" height="15" fill="rgb(241,17,11)"/><text x="82.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (2,629 samples, 0.75%)</title><rect x="74" y="597" width="9" height="15" fill="rgb(206,32,17)"/><text x="77.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (404 samples, 0.12%)</title><rect x="82" y="581" width="1" height="15" fill="rgb(229,10,13)"/><text x="85.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (404 samples, 0.12%)</title><rect x="82" y="565" width="1" height="15" fill="rgb(220,69,36)"/><text x="85.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (6,146 samples, 1.76%)</title><rect x="83" y="597" width="21" height="15" fill="rgb(236,108,10)"/><text x="86.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (195 samples, 0.06%)</title><rect x="103" y="581" width="1" height="15" fill="rgb(254,157,22)"/><text x="106.00" y="591.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (195 samples, 0.06%)</title><rect x="103" y="565" width="1" height="15" fill="rgb(206,81,40)"/><text x="106.00" y="575.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (195 samples, 0.06%)</title><rect x="103" y="549" width="1" height="15" fill="rgb(241,185,30)"/><text x="106.00" y="559.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (195 samples, 0.06%)</title><rect x="103" y="533" width="1" height="15" fill="rgb(245,207,4)"/><text x="106.00" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (195 samples, 0.06%)</title><rect x="103" y="517" width="1" height="15" fill="rgb(218,72,8)"/><text x="106.00" y="527.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (2,169 samples, 0.62%)</title><rect x="112" y="565" width="7" height="15" fill="rgb(238,81,52)"/><text x="115.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (862 samples, 0.25%)</title><rect x="119" y="565" width="3" height="15" fill="rgb(216,218,27)"/><text x="122.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;::execute (8,866 samples, 2.54%)</title><rect x="104" y="597" width="30" height="15" fill="rgb(247,214,51)"/><text x="107.00" y="607.50">&lt;e..</text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::act (6,501 samples, 1.86%)</title><rect x="112" y="581" width="22" height="15" fill="rgb(250,101,16)"/><text x="115.00" y="591.50">&lt;..</text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (3,470 samples, 0.99%)</title><rect x="122" y="565" width="12" height="15" fill="rgb(249,215,19)"/><text x="125.00" y="575.50"></text></g><g><title>__GI___pthread_mutex_lock (895 samples, 0.26%)</title><rect x="134" y="597" width="3" height="15" fill="rgb(210,106,22)"/><text x="137.00" y="607.50"></text></g><g><title>core::ptr::real_drop_in_place (804 samples, 0.23%)</title><rect x="144" y="517" width="2" height="15" fill="rgb(245,198,18)"/><text x="147.00" y="527.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (804 samples, 0.23%)</title><rect x="144" y="501" width="2" height="15" fill="rgb(230,2,36)"/><text x="147.00" y="511.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_unlock (804 samples, 0.23%)</title><rect x="144" y="485" width="2" height="15" fill="rgb(228,164,18)"/><text x="147.00" y="495.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (804 samples, 0.23%)</title><rect x="144" y="469" width="2" height="15" fill="rgb(206,63,30)"/><text x="147.00" y="479.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request (3,487 samples, 1.00%)</title><rect x="137" y="597" width="12" height="15" fill="rgb(222,105,12)"/><text x="140.00" y="607.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_loop (3,487 samples, 1.00%)</title><rect x="137" y="581" width="12" height="15" fill="rgb(227,136,37)"/><text x="140.00" y="591.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_internal (3,487 samples, 1.00%)</title><rect x="137" y="565" width="12" height="15" fill="rgb(254,176,18)"/><text x="140.00" y="575.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (1,581 samples, 0.45%)</title><rect x="144" y="549" width="5" height="15" fill="rgb(236,202,35)"/><text x="147.00" y="559.50"></text></g><g><title>std::sync::mpsc::sync::Packet&lt;T&gt;::try_recv (1,581 samples, 0.45%)</title><rect x="144" y="533" width="5" height="15" fill="rgb(217,79,50)"/><text x="147.00" y="543.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (777 samples, 0.22%)</title><rect x="146" y="517" width="3" height="15" fill="rgb(246,50,5)"/><text x="149.00" y="527.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_lock (777 samples, 0.22%)</title><rect x="146" y="501" width="3" height="15" fill="rgb(246,24,38)"/><text x="149.00" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (777 samples, 0.22%)</title><rect x="146" y="485" width="3" height="15" fill="rgb(249,81,26)"/><text x="149.00" y="495.50"></text></g><g><title>i40e_recv_pkts_vec (4,039 samples, 1.16%)</title><rect x="149" y="597" width="14" height="15" fill="rgb(246,123,17)"/><text x="152.00" y="607.50"></text></g><g><title>[unknown] (42,964 samples, 12.31%)</title><rect x="26" y="613" width="145" height="15" fill="rgb(250,185,25)"/><text x="29.00" y="623.50">[unknown]</text></g><g><title>recv_pkts (2,476 samples, 0.71%)</title><rect x="163" y="597" width="8" height="15" fill="rgb(229,196,36)"/><text x="166.00" y="607.50"></text></g><g><title>rte_eth_rx_burst (805 samples, 0.23%)</title><rect x="168" y="581" width="3" height="15" fill="rgb(238,211,48)"/><text x="171.00" y="591.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (750 samples, 0.21%)</title><rect x="202" y="389" width="3" height="15" fill="rgb(214,174,42)"/><text x="205.00" y="399.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (750 samples, 0.21%)</title><rect x="202" y="373" width="3" height="15" fill="rgb(206,70,2)"/><text x="205.00" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1,568 samples, 0.45%)</title><rect x="199" y="405" width="6" height="15" fill="rgb(215,205,29)"/><text x="202.00" y="415.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (811 samples, 0.23%)</title><rect x="208" y="309" width="2" height="15" fill="rgb(205,122,6)"/><text x="211.00" y="319.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::free_packet_batch (811 samples, 0.23%)</title><rect x="208" y="293" width="2" height="15" fill="rgb(222,205,18)"/><text x="211.00" y="303.50"></text></g><g><title>rte_prefetch0 (800 samples, 0.23%)</title><rect x="243" y="181" width="3" height="15" fill="rgb(211,204,45)"/><text x="246.00" y="191.50"></text></g><g><title>_recv_raw_pkts_vec (2,406 samples, 0.69%)</title><rect x="238" y="197" width="8" height="15" fill="rgb(234,114,28)"/><text x="241.00" y="207.50"></text></g><g><title>i40e_recv_pkts_vec (3,188 samples, 0.91%)</title><rect x="235" y="213" width="11" height="15" fill="rgb(243,27,49)"/><text x="238.00" y="223.50"></text></g><g><title>rte_eth_rx_burst (7,258 samples, 2.08%)</title><rect x="221" y="229" width="25" height="15" fill="rgb(208,177,1)"/><text x="224.00" y="239.50">r..</text></g><g><title>recv_pkts (8,052 samples, 2.31%)</title><rect x="219" y="245" width="27" height="15" fill="rgb(216,78,38)"/><text x="222.00" y="255.50">r..</text></g><g><title>e2d2::interface::port::&lt;impl e2d2::interface::PacketRx for e2d2::allocators::cache_aligned::CacheAligned&lt;T&gt;&gt;::recv (8,872 samples, 2.54%)</title><rect x="216" y="293" width="30" height="15" fill="rgb(231,182,16)"/><text x="219.00" y="303.50">e2..</text></g><g><title>&lt;e2d2::interface::port::phy_port::PortQueue as e2d2::interface::PacketRx&gt;::recv (8,872 samples, 2.54%)</title><rect x="216" y="277" width="30" height="15" fill="rgb(210,73,39)"/><text x="219.00" y="287.50">&lt;e..</text></g><g><title>e2d2::interface::port::phy_port::PortQueue::recv_queue (8,872 samples, 2.54%)</title><rect x="216" y="261" width="30" height="15" fill="rgb(235,0,36)"/><text x="219.00" y="271.50">e2..</text></g><g><title>e2d2::operators::packet_batch::PacketBatch::add_to_batch (817 samples, 0.23%)</title><rect x="246" y="293" width="3" height="15" fill="rgb(218,44,7)"/><text x="249.00" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (817 samples, 0.23%)</title><rect x="246" y="277" width="3" height="15" fill="rgb(216,198,45)"/><text x="249.00" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (818 samples, 0.23%)</title><rect x="249" y="245" width="3" height="15" fill="rgb(239,69,10)"/><text x="252.00" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (818 samples, 0.23%)</title><rect x="249" y="229" width="3" height="15" fill="rgb(215,47,6)"/><text x="252.00" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (819 samples, 0.23%)</title><rect x="249" y="261" width="3" height="15" fill="rgb(236,203,52)"/><text x="252.00" y="271.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (12,985 samples, 3.72%)</title><rect x="208" y="357" width="44" height="15" fill="rgb(221,180,54)"/><text x="211.00" y="367.50">&lt;e2d..</text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (12,985 samples, 3.72%)</title><rect x="208" y="341" width="44" height="15" fill="rgb(212,5,3)"/><text x="211.00" y="351.50">&lt;e2d..</text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (12,985 samples, 3.72%)</title><rect x="208" y="325" width="44" height="15" fill="rgb(206,114,27)"/><text x="211.00" y="335.50">e2d2..</text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (12,174 samples, 3.49%)</title><rect x="210" y="309" width="42" height="15" fill="rgb(252,177,10)"/><text x="213.00" y="319.50">e2d..</text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (820 samples, 0.23%)</title><rect x="249" y="293" width="3" height="15" fill="rgb(222,198,36)"/><text x="252.00" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (820 samples, 0.23%)</title><rect x="249" y="277" width="3" height="15" fill="rgb(246,227,4)"/><text x="252.00" y="287.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (14,666 samples, 4.20%)</title><rect x="205" y="389" width="49" height="15" fill="rgb(239,54,1)"/><text x="208.00" y="399.50">&lt;e2d..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (14,666 samples, 4.20%)</title><rect x="205" y="373" width="49" height="15" fill="rgb(228,216,40)"/><text x="208.00" y="383.50">&lt;e2d..</text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (809 samples, 0.23%)</title><rect x="252" y="357" width="2" height="15" fill="rgb(228,171,0)"/><text x="255.00" y="367.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (809 samples, 0.23%)</title><rect x="252" y="341" width="2" height="15" fill="rgb(235,157,53)"/><text x="255.00" y="351.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (809 samples, 0.23%)</title><rect x="252" y="325" width="2" height="15" fill="rgb(236,161,14)"/><text x="255.00" y="335.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (809 samples, 0.23%)</title><rect x="252" y="309" width="2" height="15" fill="rgb(229,78,45)"/><text x="255.00" y="319.50"></text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (772 samples, 0.22%)</title><rect x="254" y="389" width="3" height="15" fill="rgb(243,122,49)"/><text x="257.00" y="399.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (772 samples, 0.22%)</title><rect x="254" y="373" width="3" height="15" fill="rgb(223,111,4)"/><text x="257.00" y="383.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (772 samples, 0.22%)</title><rect x="254" y="357" width="3" height="15" fill="rgb(228,78,53)"/><text x="257.00" y="367.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (772 samples, 0.22%)</title><rect x="254" y="341" width="3" height="15" fill="rgb(214,111,24)"/><text x="257.00" y="351.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (772 samples, 0.22%)</title><rect x="254" y="325" width="3" height="15" fill="rgb(216,103,41)"/><text x="257.00" y="335.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (772 samples, 0.22%)</title><rect x="254" y="309" width="3" height="15" fill="rgb(218,65,35)"/><text x="257.00" y="319.50"></text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (15,441 samples, 4.43%)</title><rect x="205" y="405" width="52" height="15" fill="rgb(244,55,14)"/><text x="208.00" y="415.50">&lt;e2d2..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (460 samples, 0.13%)</title><rect x="283" y="325" width="1" height="15" fill="rgb(242,7,33)"/><text x="286.00" y="335.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (444 samples, 0.13%)</title><rect x="283" y="309" width="1" height="15" fill="rgb(236,61,24)"/><text x="286.00" y="319.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (444 samples, 0.13%)</title><rect x="283" y="293" width="1" height="15" fill="rgb(235,7,12)"/><text x="286.00" y="303.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (5,842 samples, 1.67%)</title><rect x="281" y="341" width="20" height="15" fill="rgb(242,174,5)"/><text x="284.00" y="351.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (4,963 samples, 1.42%)</title><rect x="284" y="325" width="17" height="15" fill="rgb(224,223,6)"/><text x="287.00" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (658 samples, 0.19%)</title><rect x="305" y="245" width="2" height="15" fill="rgb(212,154,49)"/><text x="308.00" y="255.50"></text></g><g><title>_$LT$e2d2..operators..receive_batch..ReceiveBatch$LT$T$GT$$u20$as$u20$e2d2..operators..act..Act$GT$::act::_$u7b$$u7b$closure$u7d$$u7d$::h875165831de5abfa (658 samples, 0.19%)</title><rect x="305" y="229" width="2" height="15" fill="rgb(241,50,15)"/><text x="308.00" y="239.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (916 samples, 0.26%)</title><rect x="308" y="229" width="3" height="15" fill="rgb(231,68,18)"/><text x="311.00" y="239.50"></text></g><g><title>core::cmp::min (401 samples, 0.11%)</title><rect x="311" y="181" width="2" height="15" fill="rgb(224,55,36)"/><text x="314.00" y="191.50"></text></g><g><title>core::cmp::Ord::min (401 samples, 0.11%)</title><rect x="311" y="165" width="2" height="15" fill="rgb(249,212,49)"/><text x="314.00" y="175.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::le (258 samples, 0.07%)</title><rect x="312" y="149" width="1" height="15" fill="rgb(246,174,26)"/><text x="315.00" y="159.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (128 samples, 0.04%)</title><rect x="313" y="181" width="0" height="15" fill="rgb(212,156,10)"/><text x="316.00" y="191.50"></text></g><g><title>&lt;e2d2::queues::mpsc_mbuf_queue::MpscConsumer as e2d2::interface::PacketRx&gt;::recv (638 samples, 0.18%)</title><rect x="311" y="213" width="2" height="15" fill="rgb(243,216,12)"/><text x="314.00" y="223.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::dequeue (638 samples, 0.18%)</title><rect x="311" y="197" width="2" height="15" fill="rgb(216,133,40)"/><text x="314.00" y="207.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (36 samples, 0.01%)</title><rect x="313" y="181" width="0" height="15" fill="rgb(224,168,11)"/><text x="316.00" y="191.50"></text></g><g><title>core::sync::atomic::atomic_load (36 samples, 0.01%)</title><rect x="313" y="165" width="0" height="15" fill="rgb(216,18,14)"/><text x="316.00" y="175.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::add_to_batch (425 samples, 0.12%)</title><rect x="313" y="213" width="2" height="15" fill="rgb(216,54,27)"/><text x="316.00" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (425 samples, 0.12%)</title><rect x="313" y="197" width="2" height="15" fill="rgb(224,91,44)"/><text x="316.00" y="207.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (3,369 samples, 0.97%)</title><rect x="305" y="261" width="12" height="15" fill="rgb(250,48,39)"/><text x="308.00" y="271.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (2,711 samples, 0.78%)</title><rect x="307" y="245" width="10" height="15" fill="rgb(210,118,24)"/><text x="310.00" y="255.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (1,760 samples, 0.50%)</title><rect x="311" y="229" width="6" height="15" fill="rgb(221,208,39)"/><text x="314.00" y="239.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (596 samples, 0.17%)</title><rect x="315" y="213" width="2" height="15" fill="rgb(240,140,7)"/><text x="318.00" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (596 samples, 0.17%)</title><rect x="315" y="197" width="2" height="15" fill="rgb(251,5,22)"/><text x="318.00" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (385 samples, 0.11%)</title><rect x="315" y="181" width="2" height="15" fill="rgb(213,185,38)"/><text x="318.00" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (67 samples, 0.02%)</title><rect x="316" y="165" width="1" height="15" fill="rgb(219,223,49)"/><text x="319.00" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (67 samples, 0.02%)</title><rect x="316" y="149" width="1" height="15" fill="rgb(242,37,2)"/><text x="319.00" y="159.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (3,816 samples, 1.09%)</title><rect x="304" y="277" width="13" height="15" fill="rgb(238,210,46)"/><text x="307.00" y="287.50"></text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (1,483 samples, 0.42%)</title><rect x="317" y="277" width="5" height="15" fill="rgb(205,197,19)"/><text x="320.00" y="287.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (1,483 samples, 0.42%)</title><rect x="317" y="261" width="5" height="15" fill="rgb(229,81,28)"/><text x="320.00" y="271.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (1,483 samples, 0.42%)</title><rect x="317" y="245" width="5" height="15" fill="rgb(245,186,14)"/><text x="320.00" y="255.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (1,483 samples, 0.42%)</title><rect x="317" y="229" width="5" height="15" fill="rgb(220,218,0)"/><text x="320.00" y="239.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (5,708 samples, 1.64%)</title><rect x="302" y="309" width="20" height="15" fill="rgb(243,133,0)"/><text x="305.00" y="319.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::act (5,708 samples, 1.64%)</title><rect x="302" y="293" width="20" height="15" fill="rgb(208,42,8)"/><text x="305.00" y="303.50"></text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (427 samples, 0.12%)</title><rect x="322" y="309" width="1" height="15" fill="rgb(215,28,13)"/><text x="325.00" y="319.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (427 samples, 0.12%)</title><rect x="322" y="293" width="1" height="15" fill="rgb(230,157,53)"/><text x="325.00" y="303.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (427 samples, 0.12%)</title><rect x="322" y="277" width="1" height="15" fill="rgb(211,189,39)"/><text x="325.00" y="287.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (427 samples, 0.12%)</title><rect x="322" y="261" width="1" height="15" fill="rgb(217,35,27)"/><text x="325.00" y="271.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (427 samples, 0.12%)</title><rect x="322" y="245" width="1" height="15" fill="rgb(245,161,32)"/><text x="325.00" y="255.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (427 samples, 0.12%)</title><rect x="322" y="229" width="1" height="15" fill="rgb(247,215,21)"/><text x="325.00" y="239.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (6,471 samples, 1.85%)</title><rect x="301" y="341" width="22" height="15" fill="rgb(225,64,40)"/><text x="304.00" y="351.50">&lt;..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (6,471 samples, 1.85%)</title><rect x="301" y="325" width="22" height="15" fill="rgb(241,19,47)"/><text x="304.00" y="335.50">&lt;..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (19,135 samples, 5.48%)</title><rect x="258" y="357" width="65" height="15" fill="rgb(206,130,32)"/><text x="261.00" y="367.50">&lt;e2d2::..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (532 samples, 0.15%)</title><rect x="325" y="325" width="1" height="15" fill="rgb(215,184,40)"/><text x="328.00" y="335.50"></text></g><g><title>_$LT$e2d2..operators..receive_batch..ReceiveBatch$LT$T$GT$$u20$as$u20$e2d2..operators..act..Act$GT$::act::_$u7b$$u7b$closure$u7d$$u7d$::h875165831de5abfa (532 samples, 0.15%)</title><rect x="325" y="309" width="1" height="15" fill="rgb(230,40,50)"/><text x="328.00" y="319.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (1,515 samples, 0.43%)</title><rect x="327" y="309" width="5" height="15" fill="rgb(236,187,32)"/><text x="330.00" y="319.50"></text></g><g><title>core::cmp::min (459 samples, 0.13%)</title><rect x="332" y="261" width="2" height="15" fill="rgb(222,56,24)"/><text x="335.00" y="271.50"></text></g><g><title>core::cmp::Ord::min (459 samples, 0.13%)</title><rect x="332" y="245" width="2" height="15" fill="rgb(221,54,16)"/><text x="335.00" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::le (254 samples, 0.07%)</title><rect x="333" y="229" width="1" height="15" fill="rgb(235,72,21)"/><text x="336.00" y="239.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (215 samples, 0.06%)</title><rect x="334" y="261" width="1" height="15" fill="rgb(233,206,22)"/><text x="337.00" y="271.50"></text></g><g><title>&lt;e2d2::queues::mpsc_mbuf_queue::MpscConsumer as e2d2::interface::PacketRx&gt;::recv (779 samples, 0.22%)</title><rect x="332" y="293" width="3" height="15" fill="rgb(242,158,4)"/><text x="335.00" y="303.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::dequeue (779 samples, 0.22%)</title><rect x="332" y="277" width="3" height="15" fill="rgb(210,35,48)"/><text x="335.00" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (66 samples, 0.02%)</title><rect x="335" y="261" width="0" height="15" fill="rgb(232,106,40)"/><text x="338.00" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (66 samples, 0.02%)</title><rect x="335" y="245" width="0" height="15" fill="rgb(232,192,35)"/><text x="338.00" y="255.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::add_to_batch (407 samples, 0.12%)</title><rect x="335" y="293" width="1" height="15" fill="rgb(247,97,48)"/><text x="338.00" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (407 samples, 0.12%)</title><rect x="335" y="277" width="1" height="15" fill="rgb(210,26,4)"/><text x="338.00" y="287.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (4,271 samples, 1.22%)</title><rect x="325" y="341" width="14" height="15" fill="rgb(218,203,28)"/><text x="328.00" y="351.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (3,739 samples, 1.07%)</title><rect x="326" y="325" width="13" height="15" fill="rgb(238,113,8)"/><text x="329.00" y="335.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (2,170 samples, 0.62%)</title><rect x="332" y="309" width="7" height="15" fill="rgb(252,142,35)"/><text x="335.00" y="319.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (807 samples, 0.23%)</title><rect x="336" y="293" width="3" height="15" fill="rgb(230,115,4)"/><text x="339.00" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (807 samples, 0.23%)</title><rect x="336" y="277" width="3" height="15" fill="rgb(220,115,52)"/><text x="339.00" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (484 samples, 0.14%)</title><rect x="337" y="261" width="2" height="15" fill="rgb(218,106,28)"/><text x="340.00" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (50 samples, 0.01%)</title><rect x="339" y="245" width="0" height="15" fill="rgb(213,194,2)"/><text x="342.00" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (50 samples, 0.01%)</title><rect x="339" y="229" width="0" height="15" fill="rgb(214,44,38)"/><text x="342.00" y="239.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (23,844 samples, 6.83%)</title><rect x="258" y="373" width="81" height="15" fill="rgb(223,98,19)"/><text x="261.00" y="383.50">&lt;e2d2::op..</text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (4,709 samples, 1.35%)</title><rect x="323" y="357" width="16" height="15" fill="rgb(246,188,43)"/><text x="326.00" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (832 samples, 0.24%)</title><rect x="348" y="325" width="2" height="15" fill="rgb(212,96,38)"/><text x="351.00" y="335.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (832 samples, 0.24%)</title><rect x="348" y="309" width="2" height="15" fill="rgb(236,85,21)"/><text x="351.00" y="319.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (832 samples, 0.24%)</title><rect x="348" y="293" width="2" height="15" fill="rgb(230,64,40)"/><text x="351.00" y="303.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::done (30 samples, 0.01%)</title><rect x="357" y="229" width="0" height="15" fill="rgb(243,116,1)"/><text x="360.00" y="239.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (30 samples, 0.01%)</title><rect x="357" y="213" width="0" height="15" fill="rgb(206,210,53)"/><text x="360.00" y="223.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (30 samples, 0.01%)</title><rect x="357" y="197" width="0" height="15" fill="rgb(239,119,2)"/><text x="360.00" y="207.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::free_packet_batch (30 samples, 0.01%)</title><rect x="357" y="181" width="0" height="15" fill="rgb(249,137,48)"/><text x="360.00" y="191.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (424 samples, 0.12%)</title><rect x="355" y="261" width="2" height="15" fill="rgb(240,183,2)"/><text x="358.00" y="271.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::done (424 samples, 0.12%)</title><rect x="355" y="245" width="2" height="15" fill="rgb(221,72,53)"/><text x="358.00" y="255.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (1,109 samples, 0.32%)</title><rect x="353" y="293" width="4" height="15" fill="rgb(231,20,27)"/><text x="356.00" y="303.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (1,109 samples, 0.32%)</title><rect x="353" y="277" width="4" height="15" fill="rgb(210,36,33)"/><text x="356.00" y="287.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (1,902 samples, 0.55%)</title><rect x="350" y="325" width="7" height="15" fill="rgb(213,139,34)"/><text x="353.00" y="335.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (1,110 samples, 0.32%)</title><rect x="353" y="309" width="4" height="15" fill="rgb(222,193,7)"/><text x="356.00" y="319.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (4,479 samples, 1.28%)</title><rect x="342" y="357" width="15" height="15" fill="rgb(209,40,41)"/><text x="345.00" y="367.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (4,479 samples, 1.28%)</title><rect x="342" y="341" width="15" height="15" fill="rgb(236,181,38)"/><text x="345.00" y="351.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (5,296 samples, 1.52%)</title><rect x="339" y="373" width="18" height="15" fill="rgb(234,180,9)"/><text x="342.00" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (193 samples, 0.06%)</title><rect x="363" y="309" width="1" height="15" fill="rgb(223,28,8)"/><text x="366.00" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (183 samples, 0.05%)</title><rect x="363" y="293" width="1" height="15" fill="rgb(239,123,54)"/><text x="366.00" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (183 samples, 0.05%)</title><rect x="363" y="277" width="1" height="15" fill="rgb(251,215,41)"/><text x="366.00" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (945 samples, 0.27%)</title><rect x="363" y="325" width="3" height="15" fill="rgb(252,6,53)"/><text x="366.00" y="335.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (752 samples, 0.22%)</title><rect x="364" y="309" width="2" height="15" fill="rgb(229,106,40)"/><text x="367.00" y="319.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (752 samples, 0.22%)</title><rect x="364" y="293" width="2" height="15" fill="rgb(225,54,29)"/><text x="367.00" y="303.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (10,035 samples, 2.88%)</title><rect x="361" y="341" width="34" height="15" fill="rgb(227,134,1)"/><text x="364.00" y="351.50">&lt;e..</text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (8,485 samples, 2.43%)</title><rect x="366" y="325" width="29" height="15" fill="rgb(213,199,39)"/><text x="369.00" y="335.50">&lt;e..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (10,047 samples, 2.88%)</title><rect x="361" y="357" width="34" height="15" fill="rgb(232,48,20)"/><text x="364.00" y="367.50">&lt;e..</text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (11,211 samples, 3.21%)</title><rect x="357" y="373" width="38" height="15" fill="rgb(210,15,24)"/><text x="360.00" y="383.50">&lt;e2..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (768 samples, 0.22%)</title><rect x="399" y="357" width="3" height="15" fill="rgb(232,119,51)"/><text x="402.00" y="367.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::act::Act&gt;::send_q (2,095 samples, 0.60%)</title><rect x="395" y="373" width="7" height="15" fill="rgb(240,127,45)"/><text x="398.00" y="383.50"></text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::act (42,447 samples, 12.16%)</title><rect x="258" y="389" width="144" height="15" fill="rgb(240,14,13)"/><text x="261.00" y="399.50">&lt;e2d2::operators::..</text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;::execute (42,896 samples, 12.29%)</title><rect x="257" y="405" width="145" height="15" fill="rgb(246,109,39)"/><text x="260.00" y="415.50">&lt;e2d2::operators::..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (944 samples, 0.27%)</title><rect x="402" y="373" width="3" height="15" fill="rgb(210,181,50)"/><text x="405.00" y="383.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (63 samples, 0.02%)</title><rect x="405" y="357" width="0" height="15" fill="rgb(207,191,54)"/><text x="408.00" y="367.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (63 samples, 0.02%)</title><rect x="405" y="341" width="0" height="15" fill="rgb(251,53,0)"/><text x="408.00" y="351.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (847 samples, 0.24%)</title><rect x="405" y="373" width="3" height="15" fill="rgb(237,75,10)"/><text x="408.00" y="383.50"></text></g><g><title>__GI___pthread_mutex_unlock (2,254 samples, 0.65%)</title><rect x="402" y="405" width="8" height="15" fill="rgb(246,1,15)"/><text x="405.00" y="415.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (2,254 samples, 0.65%)</title><rect x="402" y="389" width="8" height="15" fill="rgb(210,226,16)"/><text x="405.00" y="399.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (441 samples, 0.13%)</title><rect x="408" y="373" width="2" height="15" fill="rgb(252,73,39)"/><text x="411.00" y="383.50"></text></g><g><title>e2d2::utils::asm::rdtsc_unsafe (12,631 samples, 3.62%)</title><rect x="410" y="405" width="42" height="15" fill="rgb(219,203,20)"/><text x="413.00" y="415.50">e2d..</text></g><g><title>__pthread_mutex_unlock_usercnt (19,056 samples, 5.46%)</title><rect x="469" y="293" width="64" height="15" fill="rgb(215,36,32)"/><text x="472.00" y="303.50">__pthre..</text></g><g><title>core::ptr::real_drop_in_place (20,637 samples, 5.91%)</title><rect x="463" y="373" width="70" height="15" fill="rgb(234,108,22)"/><text x="466.00" y="383.50">core::p..</text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20,637 samples, 5.91%)</title><rect x="463" y="357" width="70" height="15" fill="rgb(239,15,36)"/><text x="466.00" y="367.50">&lt;std::s..</text></g><g><title>std::sys_common::mutex::Mutex::raw_unlock (20,637 samples, 5.91%)</title><rect x="463" y="341" width="70" height="15" fill="rgb(215,179,29)"/><text x="466.00" y="351.50">std::sy..</text></g><g><title>std::sys::unix::mutex::Mutex::unlock (20,637 samples, 5.91%)</title><rect x="463" y="325" width="70" height="15" fill="rgb(213,194,45)"/><text x="466.00" y="335.50">std::sy..</text></g><g><title>__GI___pthread_mutex_unlock (20,637 samples, 5.91%)</title><rect x="463" y="309" width="70" height="15" fill="rgb(209,92,39)"/><text x="466.00" y="319.50">__GI___..</text></g><g><title>std::sys_common::poison::Flag::get (794 samples, 0.23%)</title><rect x="533" y="325" width="3" height="15" fill="rgb(249,78,29)"/><text x="536.00" y="335.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (794 samples, 0.23%)</title><rect x="533" y="309" width="3" height="15" fill="rgb(224,190,26)"/><text x="536.00" y="319.50"></text></g><g><title>core::sync::atomic::atomic_load (794 samples, 0.23%)</title><rect x="533" y="293" width="3" height="15" fill="rgb(206,41,31)"/><text x="536.00" y="303.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1,633 samples, 0.47%)</title><rect x="533" y="357" width="6" height="15" fill="rgb(250,76,43)"/><text x="536.00" y="367.50"></text></g><g><title>std::sys_common::poison::Flag::borrow (1,633 samples, 0.47%)</title><rect x="533" y="341" width="6" height="15" fill="rgb(228,34,34)"/><text x="536.00" y="351.50"></text></g><g><title>std::thread::panicking (839 samples, 0.24%)</title><rect x="536" y="325" width="3" height="15" fill="rgb(214,223,37)"/><text x="539.00" y="335.50"></text></g><g><title>std::panicking::panicking (839 samples, 0.24%)</title><rect x="536" y="309" width="3" height="15" fill="rgb(227,137,12)"/><text x="539.00" y="319.50"></text></g><g><title>std::panicking::update_panic_count (839 samples, 0.24%)</title><rect x="536" y="293" width="3" height="15" fill="rgb(251,115,43)"/><text x="539.00" y="303.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (839 samples, 0.24%)</title><rect x="536" y="277" width="3" height="15" fill="rgb(223,16,2)"/><text x="539.00" y="287.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (839 samples, 0.24%)</title><rect x="536" y="261" width="3" height="15" fill="rgb(229,167,23)"/><text x="539.00" y="271.50"></text></g><g><title>std::panicking::update_panic_count::_$u7b$$u7b$closure$u7d$$u7d$::h93a68fffdc8624a0 (839 samples, 0.24%)</title><rect x="536" y="245" width="3" height="15" fill="rgb(238,167,9)"/><text x="539.00" y="255.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (839 samples, 0.24%)</title><rect x="536" y="229" width="3" height="15" fill="rgb(237,48,9)"/><text x="539.00" y="239.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_lock (19,380 samples, 5.55%)</title><rect x="539" y="357" width="65" height="15" fill="rgb(228,185,54)"/><text x="542.00" y="367.50">std::sy..</text></g><g><title>std::sys::unix::mutex::Mutex::lock (19,380 samples, 5.55%)</title><rect x="539" y="341" width="65" height="15" fill="rgb(218,74,0)"/><text x="542.00" y="351.50">std::sy..</text></g><g><title>__GI___pthread_mutex_lock (19,380 samples, 5.55%)</title><rect x="539" y="325" width="65" height="15" fill="rgb(244,91,40)"/><text x="542.00" y="335.50">__GI___..</text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (44,878 samples, 12.86%)</title><rect x="452" y="405" width="152" height="15" fill="rgb(238,188,35)"/><text x="455.00" y="415.50">std::sync::mpsc::Re..</text></g><g><title>std::sync::mpsc::sync::Packet&lt;T&gt;::try_recv (42,489 samples, 12.18%)</title><rect x="460" y="389" width="144" height="15" fill="rgb(206,17,11)"/><text x="463.00" y="399.50">std::sync::mpsc::s..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (21,017 samples, 6.02%)</title><rect x="533" y="373" width="71" height="15" fill="rgb(226,161,26)"/><text x="536.00" y="383.50">std::syn..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_internal (126,414 samples, 36.23%)</title><rect x="177" y="421" width="427" height="15" fill="rgb(239,178,49)"/><text x="180.00" y="431.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler..</text></g><g><title>__GI___clone (128,089 samples, 36.71%)</title><rect x="171" y="613" width="433" height="15" fill="rgb(216,89,32)"/><text x="174.00" y="623.50">__GI___clone</text></g><g><title>start_thread (128,089 samples, 36.71%)</title><rect x="171" y="597" width="433" height="15" fill="rgb(234,128,7)"/><text x="174.00" y="607.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (128,089 samples, 36.71%)</title><rect x="171" y="581" width="433" height="15" fill="rgb(207,74,49)"/><text x="174.00" y="591.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys_common::thread::start_thread (128,089 samples, 36.71%)</title><rect x="171" y="565" width="433" height="15" fill="rgb(251,86,23)"/><text x="174.00" y="575.50">std::sys_common::thread::start_thread</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (128,089 samples, 36.71%)</title><rect x="171" y="549" width="433" height="15" fill="rgb(221,129,22)"/><text x="174.00" y="559.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::c..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (128,089 samples, 36.71%)</title><rect x="171" y="533" width="433" height="15" fill="rgb(212,209,48)"/><text x="174.00" y="543.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::c..</text></g><g><title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h83d6f0cf65a68686 (128,089 samples, 36.71%)</title><rect x="171" y="517" width="433" height="15" fill="rgb(217,178,14)"/><text x="174.00" y="527.50">core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (128,088 samples, 36.71%)</title><rect x="171" y="501" width="433" height="15" fill="rgb(247,85,4)"/><text x="174.00" y="511.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>e2d2::scheduler::context::NetBricksContext::start_scheduler::_$u7b$$u7b$closure$u7d$$u7d$::hb2befc178c075dc6 (128,088 samples, 36.71%)</title><rect x="171" y="485" width="433" height="15" fill="rgb(209,203,34)"/><text x="174.00" y="495.50">e2d2::scheduler::context::NetBricksContext::start_scheduler..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_requests (128,080 samples, 36.70%)</title><rect x="171" y="469" width="433" height="15" fill="rgb(248,3,49)"/><text x="174.00" y="479.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler:..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request (128,080 samples, 36.70%)</title><rect x="171" y="453" width="433" height="15" fill="rgb(223,78,21)"/><text x="174.00" y="463.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler:..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_loop (128,080 samples, 36.70%)</title><rect x="171" y="437" width="433" height="15" fill="rgb(212,28,47)"/><text x="174.00" y="447.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler:..</text></g><g><title>sched-2 (173,095 samples, 49.61%)</title><rect x="19" y="629" width="585" height="15" fill="rgb(231,22,35)"/><text x="22.00" y="639.50">sched-2</text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (294 samples, 0.08%)</title><rect x="604" y="613" width="1" height="15" fill="rgb(253,50,22)"/><text x="607.00" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (266 samples, 0.08%)</title><rect x="605" y="597" width="1" height="15" fill="rgb(216,43,41)"/><text x="608.00" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut (319 samples, 0.09%)</title><rect x="609" y="581" width="1" height="15" fill="rgb(215,29,3)"/><text x="612.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (277 samples, 0.08%)</title><rect x="610" y="581" width="1" height="15" fill="rgb(223,102,32)"/><text x="613.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (277 samples, 0.08%)</title><rect x="610" y="565" width="1" height="15" fill="rgb(240,91,39)"/><text x="613.00" y="575.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut (277 samples, 0.08%)</title><rect x="610" y="549" width="1" height="15" fill="rgb(206,99,2)"/><text x="613.00" y="559.50"></text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (1,597 samples, 0.46%)</title><rect x="606" y="597" width="5" height="15" fill="rgb(222,143,35)"/><text x="609.00" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut (89 samples, 0.03%)</title><rect x="626" y="549" width="0" height="15" fill="rgb(252,43,22)"/><text x="629.00" y="559.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (4,564 samples, 1.31%)</title><rect x="611" y="597" width="16" height="15" fill="rgb(251,119,36)"/><text x="614.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (4,158 samples, 1.19%)</title><rect x="613" y="581" width="14" height="15" fill="rgb(205,134,30)"/><text x="616.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (4,158 samples, 1.19%)</title><rect x="613" y="565" width="14" height="15" fill="rgb(217,19,35)"/><text x="616.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (192 samples, 0.06%)</title><rect x="626" y="549" width="1" height="15" fill="rgb(232,20,24)"/><text x="629.00" y="559.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::act (192 samples, 0.06%)</title><rect x="626" y="533" width="1" height="15" fill="rgb(229,187,2)"/><text x="629.00" y="543.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (409 samples, 0.12%)</title><rect x="628" y="581" width="2" height="15" fill="rgb(237,21,44)"/><text x="631.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (399 samples, 0.11%)</title><rect x="628" y="565" width="2" height="15" fill="rgb(238,55,48)"/><text x="631.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (999 samples, 0.29%)</title><rect x="627" y="597" width="3" height="15" fill="rgb(226,105,32)"/><text x="630.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (143 samples, 0.04%)</title><rect x="630" y="581" width="0" height="15" fill="rgb(213,92,21)"/><text x="633.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (143 samples, 0.04%)</title><rect x="630" y="565" width="0" height="15" fill="rgb(225,94,37)"/><text x="633.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (309 samples, 0.09%)</title><rect x="630" y="597" width="1" height="15" fill="rgb(252,217,14)"/><text x="633.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (2,356 samples, 0.68%)</title><rect x="631" y="597" width="8" height="15" fill="rgb(250,228,17)"/><text x="634.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (68 samples, 0.02%)</title><rect x="639" y="581" width="0" height="15" fill="rgb(235,13,43)"/><text x="642.00" y="591.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (68 samples, 0.02%)</title><rect x="639" y="565" width="0" height="15" fill="rgb(243,55,3)"/><text x="642.00" y="575.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (68 samples, 0.02%)</title><rect x="639" y="549" width="0" height="15" fill="rgb(224,67,9)"/><text x="642.00" y="559.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (68 samples, 0.02%)</title><rect x="639" y="533" width="0" height="15" fill="rgb(217,160,45)"/><text x="642.00" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (68 samples, 0.02%)</title><rect x="639" y="517" width="0" height="15" fill="rgb(236,226,50)"/><text x="642.00" y="527.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (867 samples, 0.25%)</title><rect x="644" y="565" width="3" height="15" fill="rgb(244,135,22)"/><text x="647.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (314 samples, 0.09%)</title><rect x="647" y="565" width="1" height="15" fill="rgb(226,172,0)"/><text x="650.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (1,196 samples, 0.34%)</title><rect x="648" y="565" width="4" height="15" fill="rgb(219,4,30)"/><text x="651.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;::execute (3,699 samples, 1.06%)</title><rect x="639" y="597" width="13" height="15" fill="rgb(220,204,51)"/><text x="642.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::act (2,384 samples, 0.68%)</title><rect x="644" y="581" width="8" height="15" fill="rgb(219,104,17)"/><text x="647.00" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (134 samples, 0.04%)</title><rect x="653" y="581" width="0" height="15" fill="rgb(244,211,20)"/><text x="656.00" y="591.50"></text></g><g><title>core::hash::Hasher::write_u16 (134 samples, 0.04%)</title><rect x="653" y="565" width="0" height="15" fill="rgb(217,75,26)"/><text x="656.00" y="575.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (134 samples, 0.04%)</title><rect x="653" y="549" width="0" height="15" fill="rgb(248,132,31)"/><text x="656.00" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (87 samples, 0.02%)</title><rect x="653" y="581" width="1" height="15" fill="rgb(239,106,13)"/><text x="656.00" y="591.50"></text></g><g><title>core::hash::Hasher::write_u32 (87 samples, 0.02%)</title><rect x="653" y="565" width="1" height="15" fill="rgb(253,133,16)"/><text x="656.00" y="575.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (87 samples, 0.02%)</title><rect x="653" y="549" width="1" height="15" fill="rgb(229,172,39)"/><text x="656.00" y="559.50"></text></g><g><title>&lt;e2d2::utils::flow::Flow as core::hash::Hash&gt;::hash (630 samples, 0.18%)</title><rect x="652" y="597" width="2" height="15" fill="rgb(233,124,30)"/><text x="655.00" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (755 samples, 0.22%)</title><rect x="654" y="597" width="2" height="15" fill="rgb(234,101,7)"/><text x="657.00" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (264 samples, 0.08%)</title><rect x="656" y="581" width="0" height="15" fill="rgb(250,222,30)"/><text x="659.00" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (264 samples, 0.08%)</title><rect x="656" y="565" width="0" height="15" fill="rgb(217,88,18)"/><text x="659.00" y="575.50"></text></g><g><title>__GI___pthread_mutex_lock (360 samples, 0.10%)</title><rect x="656" y="597" width="2" height="15" fill="rgb(245,154,32)"/><text x="659.00" y="607.50"></text></g><g><title>core::iter::adapters::Rev&lt;T&gt;::new (259 samples, 0.07%)</title><rect x="658" y="597" width="1" height="15" fill="rgb(243,229,16)"/><text x="661.00" y="607.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::enqueue_mbufs (441 samples, 0.13%)</title><rect x="659" y="597" width="1" height="15" fill="rgb(232,20,38)"/><text x="662.00" y="607.50"></text></g><g><title>i40e_recv_pkts_vec (1,556 samples, 0.45%)</title><rect x="660" y="597" width="5" height="15" fill="rgb(210,78,7)"/><text x="663.00" y="607.50"></text></g><g><title>pvn_tls::nf::lib::on_frame (829 samples, 0.24%)</title><rect x="665" y="597" width="3" height="15" fill="rgb(237,224,12)"/><text x="668.00" y="607.50"></text></g><g><title>pvn_tls::nf::lib::is_client_hello (208 samples, 0.06%)</title><rect x="670" y="581" width="0" height="15" fill="rgb(247,13,31)"/><text x="673.00" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (60 samples, 0.02%)</title><rect x="670" y="581" width="0" height="15" fill="rgb(211,80,26)"/><text x="673.00" y="591.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (60 samples, 0.02%)</title><rect x="670" y="565" width="0" height="15" fill="rgb(244,175,50)"/><text x="673.00" y="575.50"></text></g><g><title>hashbrown::map::make_hash (60 samples, 0.02%)</title><rect x="670" y="549" width="0" height="15" fill="rgb(220,136,29)"/><text x="673.00" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (97 samples, 0.03%)</title><rect x="670" y="469" width="1" height="15" fill="rgb(242,198,35)"/><text x="673.00" y="479.50"></text></g><g><title>core::hash::Hasher::write_i32 (97 samples, 0.03%)</title><rect x="670" y="453" width="1" height="15" fill="rgb(232,19,15)"/><text x="673.00" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (133 samples, 0.04%)</title><rect x="671" y="469" width="0" height="15" fill="rgb(226,49,6)"/><text x="674.00" y="479.50"></text></g><g><title>core::hash::Hasher::write_u16 (133 samples, 0.04%)</title><rect x="671" y="453" width="0" height="15" fill="rgb(254,53,46)"/><text x="674.00" y="463.50"></text></g><g><title>pvn_tls::nf::lib::validator::_$u7b$$u7b$closure$u7d$$u7d$::h7a1d2c2faf5027ec (919 samples, 0.26%)</title><rect x="668" y="597" width="3" height="15" fill="rgb(213,207,25)"/><text x="671.00" y="607.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (253 samples, 0.07%)</title><rect x="670" y="581" width="1" height="15" fill="rgb(252,193,50)"/><text x="673.00" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (253 samples, 0.07%)</title><rect x="670" y="565" width="1" height="15" fill="rgb(249,53,2)"/><text x="673.00" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (253 samples, 0.07%)</title><rect x="670" y="549" width="1" height="15" fill="rgb(232,5,18)"/><text x="673.00" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (253 samples, 0.07%)</title><rect x="670" y="533" width="1" height="15" fill="rgb(222,36,13)"/><text x="673.00" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (253 samples, 0.07%)</title><rect x="670" y="517" width="1" height="15" fill="rgb(207,10,1)"/><text x="673.00" y="527.50"></text></g><g><title>hashbrown::map::make_hash (253 samples, 0.07%)</title><rect x="670" y="501" width="1" height="15" fill="rgb(206,41,25)"/><text x="673.00" y="511.50"></text></g><g><title>&lt;e2d2::utils::flow::Flow as core::hash::Hash&gt;::hash (253 samples, 0.07%)</title><rect x="670" y="485" width="1" height="15" fill="rgb(207,203,23)"/><text x="673.00" y="495.50"></text></g><g><title>pvn_tls::nf::lib::validator::_$u7b$$u7b$closure$u7d$$u7d$::ha9286b45ddb48cba (30 samples, 0.01%)</title><rect x="671" y="597" width="0" height="15" fill="rgb(221,98,30)"/><text x="674.00" y="607.50"></text></g><g><title>recv_pkts (957 samples, 0.27%)</title><rect x="672" y="597" width="3" height="15" fill="rgb(239,106,9)"/><text x="675.00" y="607.50"></text></g><g><title>rte_eth_rx_burst (300 samples, 0.09%)</title><rect x="674" y="581" width="1" height="15" fill="rgb(244,210,4)"/><text x="677.00" y="591.50"></text></g><g><title>rustls::msgs::codec::Codec::read_bytes (1,170 samples, 0.34%)</title><rect x="675" y="597" width="4" height="15" fill="rgb(212,200,21)"/><text x="678.00" y="607.50"></text></g><g><title>[unknown] (21,815 samples, 6.25%)</title><rect x="605" y="613" width="74" height="15" fill="rgb(236,119,28)"/><text x="608.00" y="623.50">[unknown]</text></g><g><title>send_pkts (45 samples, 0.01%)</title><rect x="679" y="597" width="0" height="15" fill="rgb(254,51,14)"/><text x="682.00" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (609 samples, 0.17%)</title><rect x="690" y="405" width="2" height="15" fill="rgb(226,132,10)"/><text x="693.00" y="415.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (310 samples, 0.09%)</title><rect x="691" y="389" width="1" height="15" fill="rgb(206,145,42)"/><text x="694.00" y="399.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (310 samples, 0.09%)</title><rect x="691" y="373" width="1" height="15" fill="rgb(237,44,53)"/><text x="694.00" y="383.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut (668 samples, 0.19%)</title><rect x="693" y="389" width="2" height="15" fill="rgb(226,185,28)"/><text x="696.00" y="399.50"></text></g><g><title>pvn_tls::nf::lib::validator::_$u7b$$u7b$closure$u7d$$u7d$::ha9286b45ddb48cba (635 samples, 0.18%)</title><rect x="693" y="373" width="2" height="15" fill="rgb(205,89,43)"/><text x="696.00" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (467 samples, 0.13%)</title><rect x="695" y="389" width="2" height="15" fill="rgb(208,150,17)"/><text x="698.00" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (467 samples, 0.13%)</title><rect x="695" y="373" width="2" height="15" fill="rgb(228,175,43)"/><text x="698.00" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (467 samples, 0.13%)</title><rect x="695" y="357" width="2" height="15" fill="rgb(245,126,2)"/><text x="698.00" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (467 samples, 0.13%)</title><rect x="695" y="341" width="2" height="15" fill="rgb(240,214,51)"/><text x="698.00" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut (22,991 samples, 6.59%)</title><rect x="699" y="357" width="78" height="15" fill="rgb(229,5,10)"/><text x="702.00" y="367.50">&lt;alloc::b..</text></g><g><title>pvn_tls::nf::lib::validator::_$u7b$$u7b$closure$u7d$$u7d$::he6137436430a8863 (22,525 samples, 6.46%)</title><rect x="701" y="341" width="76" height="15" fill="rgb(246,72,54)"/><text x="704.00" y="351.50">pvn_tls:..</text></g><g><title>e2d2::headers::mac::MacHeader::swap_addresses (22,414 samples, 6.42%)</title><rect x="701" y="325" width="76" height="15" fill="rgb(208,46,27)"/><text x="704.00" y="335.50">e2d2::he..</text></g><g><title>e2d2::headers::mac::MacAddress::copy_address (22,414 samples, 6.42%)</title><rect x="701" y="309" width="76" height="15" fill="rgb(242,182,41)"/><text x="704.00" y="319.50">e2d2::he..</text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (22,414 samples, 6.42%)</title><rect x="701" y="293" width="76" height="15" fill="rgb(248,85,10)"/><text x="704.00" y="303.50">core::sl..</text></g><g><title>core::intrinsics::copy_nonoverlapping (22,414 samples, 6.42%)</title><rect x="701" y="277" width="76" height="15" fill="rgb(207,108,53)"/><text x="704.00" y="287.50">core::in..</text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (315 samples, 0.09%)</title><rect x="777" y="309" width="1" height="15" fill="rgb(227,24,26)"/><text x="780.00" y="319.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::free_packet_batch (315 samples, 0.09%)</title><rect x="777" y="293" width="1" height="15" fill="rgb(251,210,25)"/><text x="780.00" y="303.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (50 samples, 0.01%)</title><rect x="781" y="245" width="0" height="15" fill="rgb(240,108,53)"/><text x="784.00" y="255.50"></text></g><g><title>core::sync::atomic::atomic_store (50 samples, 0.01%)</title><rect x="781" y="229" width="0" height="15" fill="rgb(242,81,18)"/><text x="784.00" y="239.50"></text></g><g><title>_mm_add_epi16 (1,377 samples, 0.39%)</title><rect x="805" y="181" width="4" height="15" fill="rgb(226,64,14)"/><text x="808.00" y="191.50"></text></g><g><title>_mm_blend_epi16 (60 samples, 0.02%)</title><rect x="809" y="181" width="1" height="15" fill="rgb(238,78,5)"/><text x="812.00" y="191.50"></text></g><g><title>_mm_cvtsi128_si64 (32 samples, 0.01%)</title><rect x="810" y="181" width="0" height="15" fill="rgb(235,32,8)"/><text x="813.00" y="191.50"></text></g><g><title>_mm_loadu_si128 (4,266 samples, 1.22%)</title><rect x="810" y="181" width="14" height="15" fill="rgb(218,220,36)"/><text x="813.00" y="191.50"></text></g><g><title>_mm_packs_epi32 (43 samples, 0.01%)</title><rect x="824" y="181" width="0" height="15" fill="rgb(250,171,46)"/><text x="827.00" y="191.50"></text></g><g><title>_mm_set_epi16 (59 samples, 0.02%)</title><rect x="824" y="181" width="0" height="15" fill="rgb(239,46,14)"/><text x="827.00" y="191.50"></text></g><g><title>_mm_shuffle_epi8 (56 samples, 0.02%)</title><rect x="824" y="181" width="1" height="15" fill="rgb(228,13,45)"/><text x="827.00" y="191.50"></text></g><g><title>_mm_slli_epi32 (189 samples, 0.05%)</title><rect x="825" y="181" width="0" height="15" fill="rgb(210,38,49)"/><text x="828.00" y="191.50"></text></g><g><title>_mm_storeu_si128 (78 samples, 0.02%)</title><rect x="825" y="181" width="1" height="15" fill="rgb(212,49,38)"/><text x="828.00" y="191.50"></text></g><g><title>_mm_unpackhi_epi32 (42 samples, 0.01%)</title><rect x="826" y="181" width="0" height="15" fill="rgb(244,78,30)"/><text x="829.00" y="191.50"></text></g><g><title>_mm_and_si128 (97 samples, 0.03%)</title><rect x="826" y="165" width="1" height="15" fill="rgb(234,51,42)"/><text x="829.00" y="175.50"></text></g><g><title>_mm_blend_epi16 (147 samples, 0.04%)</title><rect x="827" y="165" width="0" height="15" fill="rgb(206,4,25)"/><text x="830.00" y="175.50"></text></g><g><title>_mm_or_si128 (81 samples, 0.02%)</title><rect x="827" y="165" width="0" height="15" fill="rgb(208,179,51)"/><text x="830.00" y="175.50"></text></g><g><title>_mm_set_epi64x (40 samples, 0.01%)</title><rect x="827" y="165" width="0" height="15" fill="rgb(231,219,53)"/><text x="830.00" y="175.50"></text></g><g><title>_mm_shuffle_epi8 (71 samples, 0.02%)</title><rect x="827" y="165" width="1" height="15" fill="rgb(224,134,51)"/><text x="830.00" y="175.50"></text></g><g><title>_mm_slli_epi32 (31 samples, 0.01%)</title><rect x="828" y="165" width="0" height="15" fill="rgb(236,57,23)"/><text x="831.00" y="175.50"></text></g><g><title>_mm_slli_si128 (51 samples, 0.01%)</title><rect x="828" y="165" width="0" height="15" fill="rgb(213,35,10)"/><text x="831.00" y="175.50"></text></g><g><title>_mm_srli_epi32 (56 samples, 0.02%)</title><rect x="828" y="165" width="0" height="15" fill="rgb(243,25,46)"/><text x="831.00" y="175.50"></text></g><g><title>_mm_srli_si128 (35 samples, 0.01%)</title><rect x="828" y="165" width="0" height="15" fill="rgb(244,173,4)"/><text x="831.00" y="175.50"></text></g><g><title>_mm_store_si128 (62 samples, 0.02%)</title><rect x="828" y="165" width="0" height="15" fill="rgb(246,36,44)"/><text x="831.00" y="175.50"></text></g><g><title>_mm_unpackhi_epi32 (52 samples, 0.01%)</title><rect x="828" y="165" width="1" height="15" fill="rgb(247,142,13)"/><text x="831.00" y="175.50"></text></g><g><title>desc_to_olflags_v (864 samples, 0.25%)</title><rect x="826" y="181" width="3" height="15" fill="rgb(223,124,13)"/><text x="829.00" y="191.50"></text></g><g><title>_mm_srli_epi64 (86 samples, 0.02%)</title><rect x="831" y="165" width="0" height="15" fill="rgb(208,81,8)"/><text x="834.00" y="175.50"></text></g><g><title>desc_to_ptype_v (820 samples, 0.23%)</title><rect x="829" y="181" width="2" height="15" fill="rgb(233,16,31)"/><text x="832.00" y="191.50"></text></g><g><title>_mm_unpackhi_epi64 (54 samples, 0.02%)</title><rect x="831" y="165" width="0" height="15" fill="rgb(244,163,7)"/><text x="834.00" y="175.50"></text></g><g><title>_mm_add_epi64 (79 samples, 0.02%)</title><rect x="832" y="165" width="0" height="15" fill="rgb(241,196,27)"/><text x="835.00" y="175.50"></text></g><g><title>_mm_loadu_si128 (118 samples, 0.03%)</title><rect x="832" y="165" width="1" height="15" fill="rgb(230,166,33)"/><text x="835.00" y="175.50"></text></g><g><title>_mm_store_si128 (66 samples, 0.02%)</title><rect x="833" y="165" width="0" height="15" fill="rgb(237,11,16)"/><text x="836.00" y="175.50"></text></g><g><title>_mm_unpackhi_epi64 (60 samples, 0.02%)</title><rect x="833" y="165" width="0" height="15" fill="rgb(229,52,28)"/><text x="836.00" y="175.50"></text></g><g><title>rte_lcore_id (51 samples, 0.01%)</title><rect x="833" y="149" width="0" height="15" fill="rgb(254,182,51)"/><text x="836.00" y="159.50"></text></g><g><title>__tls_get_addr@plt (36 samples, 0.01%)</title><rect x="833" y="133" width="0" height="15" fill="rgb(207,122,49)"/><text x="836.00" y="143.50"></text></g><g><title>rte_mempool_default_cache (56 samples, 0.02%)</title><rect x="833" y="149" width="1" height="15" fill="rgb(237,73,13)"/><text x="836.00" y="159.50"></text></g><g><title>__rte_ring_move_cons_head (202 samples, 0.06%)</title><rect x="835" y="53" width="1" height="15" fill="rgb(230,40,13)"/><text x="838.00" y="63.50"></text></g><g><title>rte_atomic32_cmpset (159 samples, 0.05%)</title><rect x="835" y="37" width="1" height="15" fill="rgb(228,155,1)"/><text x="838.00" y="47.50"></text></g><g><title>common_ring_mc_dequeue (577 samples, 0.17%)</title><rect x="834" y="101" width="2" height="15" fill="rgb(248,129,47)"/><text x="837.00" y="111.50"></text></g><g><title>rte_ring_mc_dequeue_bulk (511 samples, 0.15%)</title><rect x="834" y="85" width="2" height="15" fill="rgb(243,144,46)"/><text x="837.00" y="95.50"></text></g><g><title>__rte_ring_do_dequeue (511 samples, 0.15%)</title><rect x="834" y="69" width="2" height="15" fill="rgb(254,44,18)"/><text x="837.00" y="79.50"></text></g><g><title>rte_mempool_get_bulk (816 samples, 0.23%)</title><rect x="833" y="165" width="3" height="15" fill="rgb(221,42,34)"/><text x="836.00" y="175.50"></text></g><g><title>rte_mempool_generic_get (709 samples, 0.20%)</title><rect x="834" y="149" width="2" height="15" fill="rgb(240,90,21)"/><text x="837.00" y="159.50"></text></g><g><title>__mempool_generic_get (709 samples, 0.20%)</title><rect x="834" y="133" width="2" height="15" fill="rgb(242,204,32)"/><text x="837.00" y="143.50"></text></g><g><title>rte_mempool_ops_dequeue_bulk (618 samples, 0.18%)</title><rect x="834" y="117" width="2" height="15" fill="rgb(217,28,48)"/><text x="837.00" y="127.50"></text></g><g><title>i40e_rxq_rearm (1,344 samples, 0.39%)</title><rect x="831" y="181" width="5" height="15" fill="rgb(234,99,39)"/><text x="834.00" y="191.50"></text></g><g><title>e2d2::interface::port::&lt;impl e2d2::interface::PacketRx for e2d2::allocators::cache_aligned::CacheAligned&lt;T&gt;&gt;::recv (16,922 samples, 4.85%)</title><rect x="780" y="293" width="57" height="15" fill="rgb(219,189,28)"/><text x="783.00" y="303.50">e2d2::..</text></g><g><title>&lt;e2d2::interface::port::phy_port::PortQueue as e2d2::interface::PacketRx&gt;::recv (16,922 samples, 4.85%)</title><rect x="780" y="277" width="57" height="15" fill="rgb(226,26,26)"/><text x="783.00" y="287.50">&lt;e2d2:..</text></g><g><title>e2d2::interface::port::phy_port::PortQueue::recv_queue (16,922 samples, 4.85%)</title><rect x="780" y="261" width="57" height="15" fill="rgb(239,199,26)"/><text x="783.00" y="271.50">e2d2::..</text></g><g><title>recv_pkts (16,540 samples, 4.74%)</title><rect x="781" y="245" width="56" height="15" fill="rgb(240,80,15)"/><text x="784.00" y="255.50">recv_..</text></g><g><title>rte_eth_rx_burst (16,250 samples, 4.66%)</title><rect x="782" y="229" width="55" height="15" fill="rgb(235,121,48)"/><text x="785.00" y="239.50">rte_e..</text></g><g><title>i40e_recv_pkts_vec (14,647 samples, 4.20%)</title><rect x="788" y="213" width="49" height="15" fill="rgb(250,33,39)"/><text x="791.00" y="223.50">i40e..</text></g><g><title>_recv_raw_pkts_vec (14,340 samples, 4.11%)</title><rect x="789" y="197" width="48" height="15" fill="rgb(248,132,50)"/><text x="792.00" y="207.50">_rec..</text></g><g><title>rte_prefetch0 (324 samples, 0.09%)</title><rect x="836" y="181" width="1" height="15" fill="rgb(209,90,38)"/><text x="839.00" y="191.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::add_to_batch (314 samples, 0.09%)</title><rect x="837" y="293" width="1" height="15" fill="rgb(216,93,34)"/><text x="840.00" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (314 samples, 0.09%)</title><rect x="837" y="277" width="1" height="15" fill="rgb(212,174,23)"/><text x="840.00" y="287.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (18,445 samples, 5.29%)</title><rect x="777" y="357" width="62" height="15" fill="rgb(251,137,32)"/><text x="780.00" y="367.50">&lt;e2d2:..</text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (18,445 samples, 5.29%)</title><rect x="777" y="341" width="62" height="15" fill="rgb(252,77,48)"/><text x="780.00" y="351.50">&lt;e2d2:..</text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (18,428 samples, 5.28%)</title><rect x="777" y="325" width="62" height="15" fill="rgb(225,141,3)"/><text x="780.00" y="335.50">e2d2::..</text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (18,113 samples, 5.19%)</title><rect x="778" y="309" width="61" height="15" fill="rgb(215,170,48)"/><text x="781.00" y="319.50">e2d2::..</text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (286 samples, 0.08%)</title><rect x="838" y="293" width="1" height="15" fill="rgb(219,160,50)"/><text x="841.00" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (286 samples, 0.08%)</title><rect x="838" y="277" width="1" height="15" fill="rgb(231,95,24)"/><text x="841.00" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (286 samples, 0.08%)</title><rect x="838" y="261" width="1" height="15" fill="rgb(210,86,39)"/><text x="841.00" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (286 samples, 0.08%)</title><rect x="838" y="245" width="1" height="15" fill="rgb(223,139,32)"/><text x="841.00" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (286 samples, 0.08%)</title><rect x="838" y="229" width="1" height="15" fill="rgb(230,5,28)"/><text x="841.00" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (129 samples, 0.04%)</title><rect x="841" y="293" width="0" height="15" fill="rgb(231,24,17)"/><text x="844.00" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (129 samples, 0.04%)</title><rect x="841" y="277" width="0" height="15" fill="rgb(227,205,54)"/><text x="844.00" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (129 samples, 0.04%)</title><rect x="841" y="261" width="0" height="15" fill="rgb(243,124,2)"/><text x="844.00" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (129 samples, 0.04%)</title><rect x="841" y="245" width="0" height="15" fill="rgb(249,56,6)"/><text x="844.00" y="255.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (768 samples, 0.22%)</title><rect x="839" y="325" width="3" height="15" fill="rgb(225,56,25)"/><text x="842.00" y="335.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (768 samples, 0.22%)</title><rect x="839" y="309" width="3" height="15" fill="rgb(230,196,24)"/><text x="842.00" y="319.50"></text></g><g><title>e2d2::interface::packet::packet_from_mbuf_no_free (147 samples, 0.04%)</title><rect x="841" y="293" width="1" height="15" fill="rgb(223,45,42)"/><text x="844.00" y="303.50"></text></g><g><title>e2d2::interface::packet::packet_from_mbuf_no_increment (147 samples, 0.04%)</title><rect x="841" y="277" width="1" height="15" fill="rgb(206,159,26)"/><text x="844.00" y="287.50"></text></g><g><title>e2d2::native::zcsi::mbuf::&lt;impl e2d2::native_include::rte_mbuf&gt;::data_address (147 samples, 0.04%)</title><rect x="841" y="261" width="1" height="15" fill="rgb(225,202,42)"/><text x="844.00" y="271.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (43,238 samples, 12.39%)</title><rect x="697" y="389" width="146" height="15" fill="rgb(230,164,28)"/><text x="700.00" y="399.50">&lt;e2d2::operators::..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (43,238 samples, 12.39%)</title><rect x="697" y="373" width="146" height="15" fill="rgb(228,140,46)"/><text x="700.00" y="383.50">&lt;e2d2::operators::..</text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (1,143 samples, 0.33%)</title><rect x="839" y="357" width="4" height="15" fill="rgb(240,162,2)"/><text x="842.00" y="367.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (1,078 samples, 0.31%)</title><rect x="839" y="341" width="4" height="15" fill="rgb(252,209,42)"/><text x="842.00" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (310 samples, 0.09%)</title><rect x="842" y="325" width="1" height="15" fill="rgb(223,8,50)"/><text x="845.00" y="335.50"></text></g><g><title>_$LT$e2d2..operators..parsed_batch..ParsedBatch$LT$T$C$V$GT$$u20$as$u20$e2d2..operators..iterator..BatchIterator$GT$::next_payload::_$u7b$$u7b$closure$u7d$$u7d$::h5e8d9ecf9cb17da7 (310 samples, 0.09%)</title><rect x="842" y="309" width="1" height="15" fill="rgb(216,177,6)"/><text x="845.00" y="319.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::parse_header (310 samples, 0.09%)</title><rect x="842" y="293" width="1" height="15" fill="rgb(238,177,48)"/><text x="845.00" y="303.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::header_u8 (8,143 samples, 2.33%)</title><rect x="843" y="373" width="28" height="15" fill="rgb(212,47,46)"/><text x="846.00" y="383.50">e..</text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::save_header_and_offset (9,145 samples, 2.62%)</title><rect x="843" y="389" width="31" height="15" fill="rgb(250,12,30)"/><text x="846.00" y="399.50">e2..</text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::update_ptrs (1,002 samples, 0.29%)</title><rect x="871" y="373" width="3" height="15" fill="rgb(216,168,39)"/><text x="874.00" y="383.50"></text></g><g><title>e2d2::native::zcsi::mbuf::&lt;impl e2d2::native_include::rte_mbuf&gt;::write_metadata_slot (1,000 samples, 0.29%)</title><rect x="871" y="357" width="3" height="15" fill="rgb(223,209,2)"/><text x="874.00" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (388 samples, 0.11%)</title><rect x="875" y="293" width="2" height="15" fill="rgb(238,142,47)"/><text x="878.00" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (388 samples, 0.11%)</title><rect x="875" y="277" width="2" height="15" fill="rgb(230,177,50)"/><text x="878.00" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (388 samples, 0.11%)</title><rect x="875" y="261" width="2" height="15" fill="rgb(246,192,42)"/><text x="878.00" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (388 samples, 0.11%)</title><rect x="875" y="245" width="2" height="15" fill="rgb(219,98,46)"/><text x="878.00" y="255.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (1,079 samples, 0.31%)</title><rect x="874" y="357" width="4" height="15" fill="rgb(249,46,53)"/><text x="877.00" y="367.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (1,079 samples, 0.31%)</title><rect x="874" y="341" width="4" height="15" fill="rgb(240,189,22)"/><text x="877.00" y="351.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (1,079 samples, 0.31%)</title><rect x="874" y="325" width="4" height="15" fill="rgb(242,4,36)"/><text x="877.00" y="335.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (1,079 samples, 0.31%)</title><rect x="874" y="309" width="4" height="15" fill="rgb(252,2,42)"/><text x="877.00" y="319.50"></text></g><g><title>e2d2::interface::packet::packet_from_mbuf_no_free (336 samples, 0.10%)</title><rect x="877" y="293" width="1" height="15" fill="rgb(206,22,19)"/><text x="880.00" y="303.50"></text></g><g><title>e2d2::interface::packet::packet_from_mbuf_no_increment (336 samples, 0.10%)</title><rect x="877" y="277" width="1" height="15" fill="rgb(225,215,14)"/><text x="880.00" y="287.50"></text></g><g><title>e2d2::native::zcsi::mbuf::&lt;impl e2d2::native_include::rte_mbuf&gt;::data_address (336 samples, 0.10%)</title><rect x="877" y="261" width="1" height="15" fill="rgb(248,114,14)"/><text x="880.00" y="271.50"></text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (1,386 samples, 0.40%)</title><rect x="874" y="389" width="5" height="15" fill="rgb(229,200,33)"/><text x="877.00" y="399.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (1,350 samples, 0.39%)</title><rect x="874" y="373" width="5" height="15" fill="rgb(215,147,3)"/><text x="877.00" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (271 samples, 0.08%)</title><rect x="878" y="357" width="1" height="15" fill="rgb(225,182,21)"/><text x="881.00" y="367.50"></text></g><g><title>_$LT$e2d2..operators..parsed_batch..ParsedBatch$LT$T$C$V$GT$$u20$as$u20$e2d2..operators..iterator..BatchIterator$GT$::next_payload::_$u7b$$u7b$closure$u7d$$u7d$::hed5aebf8d4625c4a (271 samples, 0.08%)</title><rect x="878" y="341" width="1" height="15" fill="rgb(224,216,3)"/><text x="881.00" y="351.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::parse_header (271 samples, 0.08%)</title><rect x="878" y="325" width="1" height="15" fill="rgb(231,109,16)"/><text x="881.00" y="335.50"></text></g><g><title>core::cmp::min (485 samples, 0.14%)</title><rect x="883" y="325" width="2" height="15" fill="rgb(208,101,41)"/><text x="886.00" y="335.50"></text></g><g><title>core::cmp::Ord::min (485 samples, 0.14%)</title><rect x="883" y="309" width="2" height="15" fill="rgb(213,11,7)"/><text x="886.00" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (34 samples, 0.01%)</title><rect x="885" y="325" width="0" height="15" fill="rgb(232,46,42)"/><text x="888.00" y="335.50"></text></g><g><title>core::sync::atomic::atomic_store (34 samples, 0.01%)</title><rect x="885" y="309" width="0" height="15" fill="rgb(235,147,0)"/><text x="888.00" y="319.50"></text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (59,018 samples, 16.91%)</title><rect x="692" y="405" width="199" height="15" fill="rgb(244,176,7)"/><text x="695.00" y="415.50">&lt;e2d2::operators::group_by..</text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscProducer::enqueue_one (3,710 samples, 1.06%)</title><rect x="879" y="389" width="12" height="15" fill="rgb(243,152,5)"/><text x="882.00" y="399.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::enqueue_one (3,710 samples, 1.06%)</title><rect x="879" y="373" width="12" height="15" fill="rgb(223,134,33)"/><text x="882.00" y="383.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::enqueue (3,710 samples, 1.06%)</title><rect x="879" y="357" width="12" height="15" fill="rgb(239,14,14)"/><text x="882.00" y="367.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::enqueue_sp (3,241 samples, 0.93%)</title><rect x="880" y="341" width="11" height="15" fill="rgb(211,122,31)"/><text x="883.00" y="351.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::enqueue_mbufs (1,867 samples, 0.54%)</title><rect x="885" y="325" width="6" height="15" fill="rgb(215,15,25)"/><text x="888.00" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (164 samples, 0.05%)</title><rect x="900" y="325" width="1" height="15" fill="rgb(249,79,32)"/><text x="903.00" y="335.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (157 samples, 0.04%)</title><rect x="900" y="309" width="1" height="15" fill="rgb(238,76,30)"/><text x="903.00" y="319.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (157 samples, 0.04%)</title><rect x="900" y="293" width="1" height="15" fill="rgb(246,181,17)"/><text x="903.00" y="303.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (2,090 samples, 0.60%)</title><rect x="900" y="341" width="7" height="15" fill="rgb(229,100,39)"/><text x="903.00" y="351.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (1,795 samples, 0.51%)</title><rect x="901" y="325" width="6" height="15" fill="rgb(236,74,52)"/><text x="904.00" y="335.50"></text></g><g><title>e2d2::headers::tcp::TcpHeader::seq_num (1,038 samples, 0.30%)</title><rect x="915" y="277" width="3" height="15" fill="rgb(219,68,38)"/><text x="918.00" y="287.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (1,038 samples, 0.30%)</title><rect x="915" y="261" width="3" height="15" fill="rgb(206,33,40)"/><text x="918.00" y="271.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (1,038 samples, 0.30%)</title><rect x="915" y="245" width="3" height="15" fill="rgb(249,131,28)"/><text x="918.00" y="255.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::payload (176 samples, 0.05%)</title><rect x="918" y="261" width="1" height="15" fill="rgb(229,41,52)"/><text x="921.00" y="271.50"></text></g><g><title>core::ptr::&lt;impl *mut T&gt;::offset (176 samples, 0.05%)</title><rect x="918" y="245" width="1" height="15" fill="rgb(233,5,33)"/><text x="921.00" y="255.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::data_len (251 samples, 0.07%)</title><rect x="920" y="245" width="1" height="15" fill="rgb(237,54,14)"/><text x="923.00" y="255.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::get_payload (859 samples, 0.25%)</title><rect x="918" y="277" width="3" height="15" fill="rgb(221,138,42)"/><text x="921.00" y="287.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::payload_size (683 samples, 0.20%)</title><rect x="919" y="261" width="2" height="15" fill="rgb(243,132,35)"/><text x="922.00" y="271.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::payload_offset (218 samples, 0.06%)</title><rect x="921" y="245" width="0" height="15" fill="rgb(205,186,9)"/><text x="924.00" y="255.50"></text></g><g><title>&lt;e2d2::headers::tcp::TcpHeader as e2d2::headers::EndOffset&gt;::offset (218 samples, 0.06%)</title><rect x="921" y="229" width="0" height="15" fill="rgb(221,103,5)"/><text x="924.00" y="239.50"></text></g><g><title>e2d2::headers::tcp::TcpHeader::data_offset (115 samples, 0.03%)</title><rect x="921" y="213" width="0" height="15" fill="rgb(226,90,47)"/><text x="924.00" y="223.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::read_metadata (112 samples, 0.03%)</title><rect x="921" y="277" width="1" height="15" fill="rgb(235,189,38)"/><text x="924.00" y="287.50"></text></g><g><title>e2d2::utils::flow::Flow::reverse_flow (193 samples, 0.06%)</title><rect x="922" y="277" width="0" height="15" fill="rgb(213,81,53)"/><text x="925.00" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (257 samples, 0.07%)</title><rect x="922" y="261" width="1" height="15" fill="rgb(217,14,23)"/><text x="925.00" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (257 samples, 0.07%)</title><rect x="922" y="245" width="1" height="15" fill="rgb(213,92,21)"/><text x="925.00" y="255.50"></text></g><g><title>core::ptr::real_drop_in_place (101 samples, 0.03%)</title><rect x="923" y="261" width="1" height="15" fill="rgb(243,211,10)"/><text x="926.00" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (100 samples, 0.03%)</title><rect x="925" y="181" width="1" height="15" fill="rgb(233,217,9)"/><text x="928.00" y="191.50"></text></g><g><title>core::ops::function::FnOnce::call_once (100 samples, 0.03%)</title><rect x="925" y="165" width="1" height="15" fill="rgb(210,30,1)"/><text x="928.00" y="175.50"></text></g><g><title>rustls::msgs::codec::decode_u8 (100 samples, 0.03%)</title><rect x="925" y="149" width="1" height="15" fill="rgb(237,196,21)"/><text x="928.00" y="159.50"></text></g><g><title>&lt;rustls::msgs::enums::ContentType as rustls::msgs::codec::Codec&gt;::read (106 samples, 0.03%)</title><rect x="925" y="213" width="1" height="15" fill="rgb(216,124,8)"/><text x="928.00" y="223.50"></text></g><g><title>&lt;u8 as rustls::msgs::codec::Codec&gt;::read (102 samples, 0.03%)</title><rect x="925" y="197" width="1" height="15" fill="rgb(239,130,25)"/><text x="928.00" y="207.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (211 samples, 0.06%)</title><rect x="926" y="181" width="1" height="15" fill="rgb(236,118,0)"/><text x="929.00" y="191.50"></text></g><g><title>core::ops::function::FnOnce::call_once (211 samples, 0.06%)</title><rect x="926" y="165" width="1" height="15" fill="rgb(245,117,34)"/><text x="929.00" y="175.50"></text></g><g><title>rustls::msgs::codec::decode_u16 (211 samples, 0.06%)</title><rect x="926" y="149" width="1" height="15" fill="rgb(254,171,1)"/><text x="929.00" y="159.50"></text></g><g><title>&lt;rustls::msgs::enums::ProtocolVersion as rustls::msgs::codec::Codec&gt;::read (548 samples, 0.16%)</title><rect x="926" y="213" width="2" height="15" fill="rgb(238,167,46)"/><text x="929.00" y="223.50"></text></g><g><title>&lt;u16 as rustls::msgs::codec::Codec&gt;::read (316 samples, 0.09%)</title><rect x="926" y="197" width="2" height="15" fill="rgb(246,91,8)"/><text x="929.00" y="207.50"></text></g><g><title>rustls::msgs::codec::Reader::take (105 samples, 0.03%)</title><rect x="927" y="181" width="1" height="15" fill="rgb(238,78,35)"/><text x="930.00" y="191.50"></text></g><g><title>rustls::msgs::codec::Reader::left (104 samples, 0.03%)</title><rect x="927" y="165" width="1" height="15" fill="rgb(250,32,29)"/><text x="930.00" y="175.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (170 samples, 0.05%)</title><rect x="928" y="197" width="0" height="15" fill="rgb(239,202,36)"/><text x="931.00" y="207.50"></text></g><g><title>core::ops::function::FnOnce::call_once (170 samples, 0.05%)</title><rect x="928" y="181" width="0" height="15" fill="rgb(230,202,8)"/><text x="931.00" y="191.50"></text></g><g><title>rustls::msgs::codec::decode_u16 (170 samples, 0.05%)</title><rect x="928" y="165" width="0" height="15" fill="rgb(228,119,49)"/><text x="931.00" y="175.50"></text></g><g><title>pvn_tls::nf::lib::is_client_hello (1,934 samples, 0.55%)</title><rect x="922" y="277" width="7" height="15" fill="rgb(250,217,52)"/><text x="925.00" y="287.50"></text></g><g><title>pvn_tls::nf::lib::on_frame (1,573 samples, 0.45%)</title><rect x="924" y="261" width="5" height="15" fill="rgb(216,86,22)"/><text x="927.00" y="271.50"></text></g><g><title>rustls::msgs::codec::Codec::read_bytes (1,165 samples, 0.33%)</title><rect x="925" y="245" width="4" height="15" fill="rgb(229,39,51)"/><text x="928.00" y="255.50"></text></g><g><title>&lt;rustls::msgs::message::Message as rustls::msgs::codec::Codec&gt;::read (1,163 samples, 0.33%)</title><rect x="925" y="229" width="4" height="15" fill="rgb(237,72,5)"/><text x="928.00" y="239.50"></text></g><g><title>&lt;u16 as rustls::msgs::codec::Codec&gt;::read (391 samples, 0.11%)</title><rect x="928" y="213" width="1" height="15" fill="rgb(217,95,1)"/><text x="931.00" y="223.50"></text></g><g><title>rustls::msgs::codec::Reader::take (221 samples, 0.06%)</title><rect x="928" y="197" width="1" height="15" fill="rgb(240,54,30)"/><text x="931.00" y="207.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (103 samples, 0.03%)</title><rect x="929" y="261" width="1" height="15" fill="rgb(224,14,29)"/><text x="932.00" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (103 samples, 0.03%)</title><rect x="929" y="245" width="1" height="15" fill="rgb(235,95,5)"/><text x="932.00" y="255.50"></text></g><g><title>&lt;rustls::msgs::enums::ContentType as rustls::msgs::codec::Codec&gt;::read (120 samples, 0.03%)</title><rect x="931" y="213" width="0" height="15" fill="rgb(223,13,49)"/><text x="934.00" y="223.50"></text></g><g><title>&lt;rustls::msgs::enums::ProtocolVersion as rustls::msgs::codec::Codec&gt;::read (321 samples, 0.09%)</title><rect x="931" y="213" width="1" height="15" fill="rgb(207,148,3)"/><text x="934.00" y="223.50"></text></g><g><title>&lt;u16 as rustls::msgs::codec::Codec&gt;::read (100 samples, 0.03%)</title><rect x="932" y="197" width="0" height="15" fill="rgb(212,104,45)"/><text x="935.00" y="207.50"></text></g><g><title>rustls::msgs::codec::Reader::take (92 samples, 0.03%)</title><rect x="932" y="181" width="0" height="15" fill="rgb(237,220,42)"/><text x="935.00" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (85 samples, 0.02%)</title><rect x="932" y="197" width="0" height="15" fill="rgb(228,100,26)"/><text x="935.00" y="207.50"></text></g><g><title>core::ops::function::FnOnce::call_once (85 samples, 0.02%)</title><rect x="932" y="181" width="0" height="15" fill="rgb(223,8,18)"/><text x="935.00" y="191.50"></text></g><g><title>rustls::msgs::codec::decode_u16 (85 samples, 0.02%)</title><rect x="932" y="165" width="0" height="15" fill="rgb(223,82,53)"/><text x="935.00" y="175.50"></text></g><g><title>pvn_tls::nf::lib::is_server_hello (1,181 samples, 0.34%)</title><rect x="929" y="277" width="4" height="15" fill="rgb(231,63,39)"/><text x="932.00" y="287.50"></text></g><g><title>pvn_tls::nf::lib::on_frame (969 samples, 0.28%)</title><rect x="930" y="261" width="3" height="15" fill="rgb(224,22,7)"/><text x="933.00" y="271.50"></text></g><g><title>rustls::msgs::codec::Codec::read_bytes (755 samples, 0.22%)</title><rect x="930" y="245" width="3" height="15" fill="rgb(209,174,29)"/><text x="933.00" y="255.50"></text></g><g><title>&lt;rustls::msgs::message::Message as rustls::msgs::codec::Codec&gt;::read (649 samples, 0.19%)</title><rect x="931" y="229" width="2" height="15" fill="rgb(217,48,51)"/><text x="934.00" y="239.50"></text></g><g><title>&lt;u16 as rustls::msgs::codec::Codec&gt;::read (208 samples, 0.06%)</title><rect x="932" y="213" width="1" height="15" fill="rgb(213,65,27)"/><text x="935.00" y="223.50"></text></g><g><title>rustls::msgs::codec::Reader::take (123 samples, 0.04%)</title><rect x="932" y="197" width="1" height="15" fill="rgb(253,151,17)"/><text x="935.00" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::reserve (76 samples, 0.02%)</title><rect x="934" y="245" width="0" height="15" fill="rgb(225,23,52)"/><text x="937.00" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve (76 samples, 0.02%)</title><rect x="934" y="229" width="0" height="15" fill="rgb(228,85,29)"/><text x="937.00" y="239.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (289 samples, 0.08%)</title><rect x="937" y="165" width="1" height="15" fill="rgb(219,117,23)"/><text x="940.00" y="175.50"></text></g><g><title>core::slice::Iter&lt;T&gt;::post_inc_start (153 samples, 0.04%)</title><rect x="937" y="149" width="1" height="15" fill="rgb(242,35,24)"/><text x="940.00" y="159.50"></text></g><g><title>core::ptr::&lt;impl *const T&gt;::offset (153 samples, 0.04%)</title><rect x="937" y="133" width="1" height="15" fill="rgb(247,41,50)"/><text x="940.00" y="143.50"></text></g><g><title>core::iter::adapters::Rev&lt;T&gt;::new (81 samples, 0.02%)</title><rect x="938" y="165" width="0" height="15" fill="rgb(225,187,10)"/><text x="941.00" y="175.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (495 samples, 0.14%)</title><rect x="938" y="165" width="2" height="15" fill="rgb(218,25,33)"/><text x="941.00" y="175.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (1,400 samples, 0.40%)</title><rect x="936" y="213" width="4" height="15" fill="rgb(213,81,9)"/><text x="939.00" y="223.50"></text></g><g><title>core::hash::Hasher::write_u16 (1,400 samples, 0.40%)</title><rect x="936" y="197" width="4" height="15" fill="rgb(205,136,18)"/><text x="939.00" y="207.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (1,389 samples, 0.40%)</title><rect x="936" y="181" width="4" height="15" fill="rgb(247,32,42)"/><text x="939.00" y="191.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (81 samples, 0.02%)</title><rect x="940" y="165" width="0" height="15" fill="rgb(223,103,53)"/><text x="943.00" y="175.50"></text></g><g><title>core::ptr::&lt;impl *const T&gt;::add (81 samples, 0.02%)</title><rect x="940" y="149" width="0" height="15" fill="rgb(226,71,18)"/><text x="943.00" y="159.50"></text></g><g><title>core::ptr::&lt;impl *const T&gt;::offset (81 samples, 0.02%)</title><rect x="940" y="133" width="0" height="15" fill="rgb(206,54,37)"/><text x="943.00" y="143.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (572 samples, 0.16%)</title><rect x="943" y="165" width="1" height="15" fill="rgb(228,107,28)"/><text x="946.00" y="175.50"></text></g><g><title>core::slice::Iter&lt;T&gt;::post_inc_start (289 samples, 0.08%)</title><rect x="943" y="149" width="1" height="15" fill="rgb(249,160,47)"/><text x="946.00" y="159.50"></text></g><g><title>core::ptr::&lt;impl *const T&gt;::offset (289 samples, 0.08%)</title><rect x="943" y="133" width="1" height="15" fill="rgb(206,137,43)"/><text x="946.00" y="143.50"></text></g><g><title>core::iter::adapters::Rev&lt;T&gt;::new (129 samples, 0.04%)</title><rect x="944" y="165" width="1" height="15" fill="rgb(251,147,34)"/><text x="947.00" y="175.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (513 samples, 0.15%)</title><rect x="945" y="165" width="2" height="15" fill="rgb(221,185,45)"/><text x="948.00" y="175.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (2,020 samples, 0.58%)</title><rect x="940" y="213" width="7" height="15" fill="rgb(210,223,49)"/><text x="943.00" y="223.50"></text></g><g><title>core::hash::Hasher::write_u32 (2,020 samples, 0.58%)</title><rect x="940" y="197" width="7" height="15" fill="rgb(249,15,54)"/><text x="943.00" y="207.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (1,943 samples, 0.56%)</title><rect x="940" y="181" width="7" height="15" fill="rgb(246,78,0)"/><text x="943.00" y="191.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (137 samples, 0.04%)</title><rect x="947" y="165" width="0" height="15" fill="rgb(241,74,41)"/><text x="950.00" y="175.50"></text></g><g><title>core::ptr::&lt;impl *const T&gt;::add (137 samples, 0.04%)</title><rect x="947" y="149" width="0" height="15" fill="rgb(222,89,14)"/><text x="950.00" y="159.50"></text></g><g><title>core::ptr::&lt;impl *const T&gt;::offset (137 samples, 0.04%)</title><rect x="947" y="133" width="0" height="15" fill="rgb(233,158,38)"/><text x="950.00" y="143.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.01%)</title><rect x="947" y="165" width="1" height="15" fill="rgb(248,136,10)"/><text x="950.00" y="175.50"></text></g><g><title>core::iter::adapters::Rev&lt;T&gt;::new (69 samples, 0.02%)</title><rect x="948" y="165" width="0" height="15" fill="rgb(248,189,34)"/><text x="951.00" y="175.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (79 samples, 0.02%)</title><rect x="948" y="165" width="0" height="15" fill="rgb(237,146,52)"/><text x="951.00" y="175.50"></text></g><g><title>hashbrown::map::make_hash (4,286 samples, 1.23%)</title><rect x="934" y="245" width="14" height="15" fill="rgb(243,147,11)"/><text x="937.00" y="255.50"></text></g><g><title>&lt;e2d2::utils::flow::Flow as core::hash::Hash&gt;::hash (4,077 samples, 1.17%)</title><rect x="935" y="229" width="13" height="15" fill="rgb(241,50,31)"/><text x="938.00" y="239.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash (373 samples, 0.11%)</title><rect x="947" y="213" width="1" height="15" fill="rgb(249,102,46)"/><text x="950.00" y="223.50"></text></g><g><title>core::hash::Hasher::write_u8 (373 samples, 0.11%)</title><rect x="947" y="197" width="1" height="15" fill="rgb(234,97,28)"/><text x="950.00" y="207.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (373 samples, 0.11%)</title><rect x="947" y="181" width="1" height="15" fill="rgb(230,15,43)"/><text x="950.00" y="191.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (78 samples, 0.02%)</title><rect x="948" y="165" width="0" height="15" fill="rgb(217,167,1)"/><text x="951.00" y="175.50"></text></g><g><title>core::ptr::&lt;impl *const T&gt;::add (78 samples, 0.02%)</title><rect x="948" y="149" width="0" height="15" fill="rgb(239,186,25)"/><text x="951.00" y="159.50"></text></g><g><title>core::ptr::&lt;impl *const T&gt;::offset (78 samples, 0.02%)</title><rect x="948" y="133" width="0" height="15" fill="rgb(210,152,5)"/><text x="951.00" y="143.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::probe_seq (444 samples, 0.13%)</title><rect x="949" y="229" width="1" height="15" fill="rgb(206,157,26)"/><text x="952.00" y="239.50"></text></g><g><title>hashbrown::raw::imp::Group::load (44 samples, 0.01%)</title><rect x="950" y="229" width="1" height="15" fill="rgb(214,196,34)"/><text x="953.00" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (44 samples, 0.01%)</title><rect x="950" y="213" width="1" height="15" fill="rgb(226,139,24)"/><text x="953.00" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (44 samples, 0.01%)</title><rect x="950" y="197" width="1" height="15" fill="rgb(220,107,26)"/><text x="953.00" y="207.50"></text></g><g><title>hashbrown::raw::imp::Group::match_byte (479 samples, 0.14%)</title><rect x="951" y="229" width="1" height="15" fill="rgb(212,189,53)"/><text x="954.00" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (479 samples, 0.14%)</title><rect x="951" y="213" width="1" height="15" fill="rgb(229,75,5)"/><text x="954.00" y="223.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (5,680 samples, 1.63%)</title><rect x="933" y="261" width="19" height="15" fill="rgb(249,159,49)"/><text x="936.00" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (1,213 samples, 0.35%)</title><rect x="948" y="245" width="4" height="15" fill="rgb(218,35,41)"/><text x="951.00" y="255.50"></text></g><g><title>hashbrown::raw::imp::Group::match_empty (77 samples, 0.02%)</title><rect x="952" y="229" width="0" height="15" fill="rgb(232,68,28)"/><text x="955.00" y="239.50"></text></g><g><title>hashbrown::raw::imp::Group::match_byte (77 samples, 0.02%)</title><rect x="952" y="213" width="0" height="15" fill="rgb(251,137,8)"/><text x="955.00" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (77 samples, 0.02%)</title><rect x="952" y="197" width="0" height="15" fill="rgb(252,52,20)"/><text x="955.00" y="207.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (7,601 samples, 2.18%)</title><rect x="933" y="277" width="26" height="15" fill="rgb(216,101,33)"/><text x="936.00" y="287.50">s..</text></g><g><title>std::collections::hash::map::map_entry (1,809 samples, 0.52%)</title><rect x="952" y="261" width="7" height="15" fill="rgb(247,45,28)"/><text x="955.00" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (281 samples, 0.08%)</title><rect x="963" y="69" width="1" height="15" fill="rgb(225,65,22)"/><text x="966.00" y="79.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (525 samples, 0.15%)</title><rect x="963" y="85" width="1" height="15" fill="rgb(212,168,46)"/><text x="966.00" y="95.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (109 samples, 0.03%)</title><rect x="964" y="69" width="0" height="15" fill="rgb(253,20,37)"/><text x="967.00" y="79.50"></text></g><g><title>core::cmp::min (92 samples, 0.03%)</title><rect x="964" y="85" width="1" height="15" fill="rgb(222,185,14)"/><text x="967.00" y="95.50"></text></g><g><title>core::cmp::Ord::min (92 samples, 0.03%)</title><rect x="964" y="69" width="1" height="15" fill="rgb(229,96,36)"/><text x="967.00" y="79.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (2,774 samples, 0.79%)</title><rect x="959" y="165" width="9" height="15" fill="rgb(218,210,35)"/><text x="962.00" y="175.50"></text></g><g><title>core::hash::Hasher::write_i32 (2,774 samples, 0.79%)</title><rect x="959" y="149" width="9" height="15" fill="rgb(219,103,27)"/><text x="962.00" y="159.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2,447 samples, 0.70%)</title><rect x="960" y="133" width="8" height="15" fill="rgb(224,126,14)"/><text x="963.00" y="143.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,340 samples, 0.67%)</title><rect x="960" y="117" width="8" height="15" fill="rgb(226,170,33)"/><text x="963.00" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,340 samples, 0.67%)</title><rect x="960" y="101" width="8" height="15" fill="rgb(208,200,31)"/><text x="963.00" y="111.50"></text></g><g><title>core::hash::sip::u8to64_le (970 samples, 0.28%)</title><rect x="965" y="85" width="3" height="15" fill="rgb(206,9,14)"/><text x="968.00" y="95.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (111 samples, 0.03%)</title><rect x="968" y="69" width="0" height="15" fill="rgb(239,208,8)"/><text x="971.00" y="79.50"></text></g><g><title>core::cmp::min (103 samples, 0.03%)</title><rect x="971" y="85" width="0" height="15" fill="rgb(237,190,8)"/><text x="974.00" y="95.50"></text></g><g><title>core::cmp::Ord::min (103 samples, 0.03%)</title><rect x="971" y="69" width="0" height="15" fill="rgb(236,155,51)"/><text x="974.00" y="79.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (1,866 samples, 0.53%)</title><rect x="968" y="165" width="6" height="15" fill="rgb(229,228,9)"/><text x="971.00" y="175.50"></text></g><g><title>core::hash::Hasher::write_u16 (1,866 samples, 0.53%)</title><rect x="968" y="149" width="6" height="15" fill="rgb(215,162,17)"/><text x="971.00" y="159.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1,479 samples, 0.42%)</title><rect x="969" y="133" width="5" height="15" fill="rgb(223,152,7)"/><text x="972.00" y="143.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,479 samples, 0.42%)</title><rect x="969" y="117" width="5" height="15" fill="rgb(211,9,11)"/><text x="972.00" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,479 samples, 0.42%)</title><rect x="969" y="101" width="5" height="15" fill="rgb(233,218,54)"/><text x="972.00" y="111.50"></text></g><g><title>core::hash::sip::u8to64_le (835 samples, 0.24%)</title><rect x="971" y="85" width="3" height="15" fill="rgb(240,29,25)"/><text x="974.00" y="95.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (101 samples, 0.03%)</title><rect x="974" y="69" width="0" height="15" fill="rgb(244,86,29)"/><text x="977.00" y="79.50"></text></g><g><title>core::cmp::min (88 samples, 0.03%)</title><rect x="976" y="85" width="0" height="15" fill="rgb(218,41,4)"/><text x="979.00" y="95.50"></text></g><g><title>core::cmp::Ord::min (88 samples, 0.03%)</title><rect x="976" y="69" width="0" height="15" fill="rgb(226,94,43)"/><text x="979.00" y="79.50"></text></g><g><title>&lt;e2d2::utils::flow::Flow as core::hash::Hash&gt;::hash (5,532 samples, 1.59%)</title><rect x="959" y="181" width="18" height="15" fill="rgb(242,145,8)"/><text x="962.00" y="191.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash (892 samples, 0.26%)</title><rect x="974" y="165" width="3" height="15" fill="rgb(226,123,49)"/><text x="977.00" y="175.50"></text></g><g><title>core::hash::Hasher::write_u8 (892 samples, 0.26%)</title><rect x="974" y="149" width="3" height="15" fill="rgb(225,75,16)"/><text x="977.00" y="159.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (801 samples, 0.23%)</title><rect x="975" y="133" width="2" height="15" fill="rgb(232,224,11)"/><text x="978.00" y="143.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (801 samples, 0.23%)</title><rect x="975" y="117" width="2" height="15" fill="rgb(238,225,26)"/><text x="978.00" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (801 samples, 0.23%)</title><rect x="975" y="101" width="2" height="15" fill="rgb(219,50,13)"/><text x="978.00" y="111.50"></text></g><g><title>core::hash::sip::u8to64_le (324 samples, 0.09%)</title><rect x="976" y="85" width="1" height="15" fill="rgb(238,186,22)"/><text x="979.00" y="95.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (255 samples, 0.07%)</title><rect x="978" y="117" width="1" height="15" fill="rgb(250,125,25)"/><text x="981.00" y="127.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (475 samples, 0.14%)</title><rect x="978" y="133" width="2" height="15" fill="rgb(216,8,53)"/><text x="981.00" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (90 samples, 0.03%)</title><rect x="979" y="117" width="1" height="15" fill="rgb(215,44,9)"/><text x="982.00" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (439 samples, 0.13%)</title><rect x="980" y="117" width="2" height="15" fill="rgb(205,152,34)"/><text x="983.00" y="127.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1,705 samples, 0.49%)</title><rect x="977" y="181" width="6" height="15" fill="rgb(226,228,31)"/><text x="980.00" y="191.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,705 samples, 0.49%)</title><rect x="977" y="165" width="6" height="15" fill="rgb(205,64,50)"/><text x="980.00" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,705 samples, 0.49%)</title><rect x="977" y="149" width="6" height="15" fill="rgb(209,104,8)"/><text x="980.00" y="159.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,009 samples, 0.29%)</title><rect x="980" y="133" width="3" height="15" fill="rgb(225,116,54)"/><text x="983.00" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (309 samples, 0.09%)</title><rect x="982" y="117" width="1" height="15" fill="rgb(233,75,4)"/><text x="985.00" y="127.50"></text></g><g><title>hashbrown::map::make_hash (7,532 samples, 2.16%)</title><rect x="959" y="197" width="25" height="15" fill="rgb(253,62,32)"/><text x="962.00" y="207.50">h..</text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (295 samples, 0.08%)</title><rect x="983" y="181" width="1" height="15" fill="rgb(240,106,53)"/><text x="986.00" y="191.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (56 samples, 0.02%)</title><rect x="984" y="165" width="0" height="15" fill="rgb(212,181,47)"/><text x="987.00" y="175.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (56 samples, 0.02%)</title><rect x="984" y="149" width="0" height="15" fill="rgb(224,181,4)"/><text x="987.00" y="159.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (56 samples, 0.02%)</title><rect x="984" y="133" width="0" height="15" fill="rgb(232,5,13)"/><text x="987.00" y="143.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::probe_seq (246 samples, 0.07%)</title><rect x="984" y="181" width="1" height="15" fill="rgb(252,12,45)"/><text x="987.00" y="191.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::any_bit_set (38 samples, 0.01%)</title><rect x="985" y="181" width="0" height="15" fill="rgb(218,55,41)"/><text x="988.00" y="191.50"></text></g><g><title>hashbrown::raw::imp::Group::load (138 samples, 0.04%)</title><rect x="985" y="181" width="1" height="15" fill="rgb(248,83,8)"/><text x="988.00" y="191.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (138 samples, 0.04%)</title><rect x="985" y="165" width="1" height="15" fill="rgb(229,79,8)"/><text x="988.00" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (138 samples, 0.04%)</title><rect x="985" y="149" width="1" height="15" fill="rgb(248,28,24)"/><text x="988.00" y="159.50"></text></g><g><title>hashbrown::raw::imp::Group::match_byte (55 samples, 0.02%)</title><rect x="986" y="181" width="0" height="15" fill="rgb(221,166,7)"/><text x="989.00" y="191.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (55 samples, 0.02%)</title><rect x="986" y="165" width="0" height="15" fill="rgb(252,138,40)"/><text x="989.00" y="175.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut (23,229 samples, 6.66%)</title><rect x="908" y="309" width="78" height="15" fill="rgb(234,24,37)"/><text x="911.00" y="319.50">&lt;alloc::b..</text></g><g><title>pvn_tls::nf::lib::validator::_$u7b$$u7b$closure$u7d$$u7d$::h7a1d2c2faf5027ec (23,108 samples, 6.62%)</title><rect x="908" y="293" width="78" height="15" fill="rgb(245,51,12)"/><text x="911.00" y="303.50">pvn_tls::..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (8,182 samples, 2.34%)</title><rect x="959" y="277" width="27" height="15" fill="rgb(222,3,30)"/><text x="962.00" y="287.50">s..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (8,182 samples, 2.34%)</title><rect x="959" y="261" width="27" height="15" fill="rgb(237,101,15)"/><text x="962.00" y="271.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (8,182 samples, 2.34%)</title><rect x="959" y="245" width="27" height="15" fill="rgb(207,136,38)"/><text x="962.00" y="255.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (8,182 samples, 2.34%)</title><rect x="959" y="229" width="27" height="15" fill="rgb(223,92,11)"/><text x="962.00" y="239.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (8,182 samples, 2.34%)</title><rect x="959" y="213" width="27" height="15" fill="rgb(216,227,20)"/><text x="962.00" y="223.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (650 samples, 0.19%)</title><rect x="984" y="197" width="2" height="15" fill="rgb(238,163,17)"/><text x="987.00" y="207.50"></text></g><g><title>hashbrown::raw::imp::Group::match_empty (69 samples, 0.02%)</title><rect x="986" y="181" width="0" height="15" fill="rgb(220,163,43)"/><text x="989.00" y="191.50"></text></g><g><title>hashbrown::raw::imp::Group::match_byte (69 samples, 0.02%)</title><rect x="986" y="165" width="0" height="15" fill="rgb(225,42,48)"/><text x="989.00" y="175.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (69 samples, 0.02%)</title><rect x="986" y="149" width="0" height="15" fill="rgb(219,135,24)"/><text x="989.00" y="159.50"></text></g><g><title>&lt;byteorder::BigEndian as byteorder::ByteOrder&gt;::read_u16 (248 samples, 0.07%)</title><rect x="1001" y="229" width="1" height="15" fill="rgb(230,9,33)"/><text x="1004.00" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (248 samples, 0.07%)</title><rect x="1001" y="213" width="1" height="15" fill="rgb(247,29,6)"/><text x="1004.00" y="223.50"></text></g><g><title>e2d2::headers::ip::IpHeader::dst (515 samples, 0.15%)</title><rect x="1002" y="229" width="2" height="15" fill="rgb(230,204,43)"/><text x="1005.00" y="239.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (515 samples, 0.15%)</title><rect x="1002" y="213" width="2" height="15" fill="rgb(249,73,6)"/><text x="1005.00" y="223.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (515 samples, 0.15%)</title><rect x="1002" y="197" width="2" height="15" fill="rgb(244,37,0)"/><text x="1005.00" y="207.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut (5,221 samples, 1.50%)</title><rect x="988" y="277" width="18" height="15" fill="rgb(222,89,32)"/><text x="991.00" y="287.50"></text></g><g><title>pvn_tls::nf::lib::validator::_$u7b$$u7b$closure$u7d$$u7d$::h38e3877a1357d7bd (4,846 samples, 1.39%)</title><rect x="989" y="261" width="17" height="15" fill="rgb(220,185,12)"/><text x="992.00" y="271.50"></text></g><g><title>e2d2::headers::ip::IpHeader::flow (1,645 samples, 0.47%)</title><rect x="1000" y="245" width="6" height="15" fill="rgb(223,91,37)"/><text x="1003.00" y="255.50"></text></g><g><title>e2d2::headers::ip::IpHeader::src (503 samples, 0.14%)</title><rect x="1004" y="229" width="2" height="15" fill="rgb(233,105,5)"/><text x="1007.00" y="239.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (503 samples, 0.14%)</title><rect x="1004" y="213" width="2" height="15" fill="rgb(238,118,19)"/><text x="1007.00" y="223.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (503 samples, 0.14%)</title><rect x="1004" y="197" width="2" height="15" fill="rgb(207,79,34)"/><text x="1007.00" y="207.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (217 samples, 0.06%)</title><rect x="1006" y="245" width="1" height="15" fill="rgb(208,89,26)"/><text x="1009.00" y="255.50"></text></g><g><title>_$LT$e2d2..operators..receive_batch..ReceiveBatch$LT$T$GT$$u20$as$u20$e2d2..operators..act..Act$GT$::act::_$u7b$$u7b$closure$u7d$$u7d$::h875165831de5abfa (217 samples, 0.06%)</title><rect x="1006" y="229" width="1" height="15" fill="rgb(254,206,49)"/><text x="1009.00" y="239.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (304 samples, 0.09%)</title><rect x="1007" y="229" width="1" height="15" fill="rgb(219,131,14)"/><text x="1010.00" y="239.50"></text></g><g><title>core::cmp::min (148 samples, 0.04%)</title><rect x="1008" y="181" width="1" height="15" fill="rgb(242,105,43)"/><text x="1011.00" y="191.50"></text></g><g><title>core::cmp::Ord::min (148 samples, 0.04%)</title><rect x="1008" y="165" width="1" height="15" fill="rgb(215,2,28)"/><text x="1011.00" y="175.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::le (98 samples, 0.03%)</title><rect x="1008" y="149" width="1" height="15" fill="rgb(222,165,32)"/><text x="1011.00" y="159.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (52 samples, 0.01%)</title><rect x="1009" y="181" width="0" height="15" fill="rgb(243,223,7)"/><text x="1012.00" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (30 samples, 0.01%)</title><rect x="1009" y="181" width="0" height="15" fill="rgb(207,152,27)"/><text x="1012.00" y="191.50"></text></g><g><title>core::sync::atomic::atomic_store (30 samples, 0.01%)</title><rect x="1009" y="165" width="0" height="15" fill="rgb(212,105,32)"/><text x="1012.00" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (213 samples, 0.06%)</title><rect x="1011" y="149" width="1" height="15" fill="rgb(237,46,54)"/><text x="1014.00" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (429 samples, 0.12%)</title><rect x="1011" y="165" width="1" height="15" fill="rgb(207,67,34)"/><text x="1014.00" y="175.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (216 samples, 0.06%)</title><rect x="1012" y="149" width="0" height="15" fill="rgb(232,158,51)"/><text x="1015.00" y="159.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (216 samples, 0.06%)</title><rect x="1012" y="133" width="0" height="15" fill="rgb(250,131,7)"/><text x="1015.00" y="143.50"></text></g><g><title>&lt;e2d2::queues::mpsc_mbuf_queue::MpscConsumer as e2d2::interface::PacketRx&gt;::recv (1,471 samples, 0.42%)</title><rect x="1008" y="213" width="5" height="15" fill="rgb(250,24,37)"/><text x="1011.00" y="223.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::dequeue (1,471 samples, 0.42%)</title><rect x="1008" y="197" width="5" height="15" fill="rgb(229,169,40)"/><text x="1011.00" y="207.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::dequeue_mbufs (1,193 samples, 0.34%)</title><rect x="1009" y="181" width="4" height="15" fill="rgb(222,177,10)"/><text x="1012.00" y="191.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (189 samples, 0.05%)</title><rect x="1012" y="165" width="1" height="15" fill="rgb(239,14,54)"/><text x="1015.00" y="175.50"></text></g><g><title>core::sync::atomic::atomic_load (189 samples, 0.05%)</title><rect x="1012" y="149" width="1" height="15" fill="rgb(211,84,10)"/><text x="1015.00" y="159.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::add_to_batch (155 samples, 0.04%)</title><rect x="1013" y="213" width="1" height="15" fill="rgb(233,129,6)"/><text x="1016.00" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (155 samples, 0.04%)</title><rect x="1013" y="197" width="1" height="15" fill="rgb(208,217,12)"/><text x="1016.00" y="207.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (2,555 samples, 0.73%)</title><rect x="1006" y="277" width="8" height="15" fill="rgb(224,52,5)"/><text x="1009.00" y="287.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (2,423 samples, 0.69%)</title><rect x="1006" y="261" width="8" height="15" fill="rgb(249,20,26)"/><text x="1009.00" y="271.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (2,206 samples, 0.63%)</title><rect x="1007" y="245" width="7" height="15" fill="rgb(213,21,30)"/><text x="1010.00" y="255.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (1,880 samples, 0.54%)</title><rect x="1008" y="229" width="6" height="15" fill="rgb(207,27,53)"/><text x="1011.00" y="239.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (225 samples, 0.06%)</title><rect x="1014" y="213" width="0" height="15" fill="rgb(221,65,32)"/><text x="1017.00" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (225 samples, 0.06%)</title><rect x="1014" y="197" width="0" height="15" fill="rgb(246,207,14)"/><text x="1017.00" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (143 samples, 0.04%)</title><rect x="1014" y="181" width="0" height="15" fill="rgb(206,120,37)"/><text x="1017.00" y="191.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::write_metadata (7,450 samples, 2.14%)</title><rect x="1014" y="277" width="26" height="15" fill="rgb(220,172,7)"/><text x="1017.00" y="287.50">e..</text></g><g><title>core::intrinsics::copy_nonoverlapping (7,338 samples, 2.10%)</title><rect x="1015" y="261" width="25" height="15" fill="rgb(222,16,27)"/><text x="1018.00" y="271.50">c..</text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (937 samples, 0.27%)</title><rect x="1040" y="245" width="3" height="15" fill="rgb(228,29,12)"/><text x="1043.00" y="255.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (937 samples, 0.27%)</title><rect x="1040" y="229" width="3" height="15" fill="rgb(215,156,2)"/><text x="1043.00" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (370 samples, 0.11%)</title><rect x="1042" y="213" width="1" height="15" fill="rgb(212,164,2)"/><text x="1045.00" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (370 samples, 0.11%)</title><rect x="1042" y="197" width="1" height="15" fill="rgb(221,147,27)"/><text x="1045.00" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (370 samples, 0.11%)</title><rect x="1042" y="181" width="1" height="15" fill="rgb(222,111,7)"/><text x="1045.00" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (370 samples, 0.11%)</title><rect x="1042" y="165" width="1" height="15" fill="rgb(238,189,49)"/><text x="1045.00" y="175.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (17,524 samples, 5.02%)</title><rect x="986" y="309" width="59" height="15" fill="rgb(218,114,27)"/><text x="989.00" y="319.50">&lt;e2d2:..</text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::act (17,524 samples, 5.02%)</title><rect x="986" y="293" width="59" height="15" fill="rgb(211,213,9)"/><text x="989.00" y="303.50">&lt;e2d2:..</text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (1,747 samples, 0.50%)</title><rect x="1040" y="277" width="5" height="15" fill="rgb(249,219,6)"/><text x="1043.00" y="287.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (1,722 samples, 0.49%)</title><rect x="1040" y="261" width="5" height="15" fill="rgb(211,77,21)"/><text x="1043.00" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (785 samples, 0.22%)</title><rect x="1043" y="245" width="2" height="15" fill="rgb(222,191,36)"/><text x="1046.00" y="255.50"></text></g><g><title>_$LT$e2d2..operators..restore_header..RestoreHeader$LT$T$C$M$C$V$GT$$u20$as$u20$e2d2..operators..iterator..BatchIterator$GT$::next_payload::_$u7b$$u7b$closure$u7d$$u7d$::h41fd1f295d51559b (785 samples, 0.22%)</title><rect x="1043" y="229" width="2" height="15" fill="rgb(205,158,41)"/><text x="1046.00" y="239.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::restore_saved_header (785 samples, 0.22%)</title><rect x="1043" y="213" width="2" height="15" fill="rgb(222,33,51)"/><text x="1046.00" y="223.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::read_header (407 samples, 0.12%)</title><rect x="1044" y="197" width="1" height="15" fill="rgb(242,142,2)"/><text x="1047.00" y="207.50"></text></g><g><title>e2d2::native::zcsi::mbuf::&lt;impl e2d2::native_include::rte_mbuf&gt;::read_metadata_slot (407 samples, 0.12%)</title><rect x="1044" y="181" width="1" height="15" fill="rgb(229,210,41)"/><text x="1047.00" y="191.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (245 samples, 0.07%)</title><rect x="1046" y="245" width="0" height="15" fill="rgb(251,6,46)"/><text x="1049.00" y="255.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (245 samples, 0.07%)</title><rect x="1046" y="229" width="0" height="15" fill="rgb(251,210,28)"/><text x="1049.00" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (108 samples, 0.03%)</title><rect x="1046" y="213" width="0" height="15" fill="rgb(213,222,45)"/><text x="1049.00" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (108 samples, 0.03%)</title><rect x="1046" y="197" width="0" height="15" fill="rgb(252,224,43)"/><text x="1049.00" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (108 samples, 0.03%)</title><rect x="1046" y="181" width="0" height="15" fill="rgb(252,223,2)"/><text x="1049.00" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (108 samples, 0.03%)</title><rect x="1046" y="165" width="0" height="15" fill="rgb(246,179,51)"/><text x="1049.00" y="175.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::read_header (31 samples, 0.01%)</title><rect x="1046" y="197" width="0" height="15" fill="rgb(226,89,25)"/><text x="1049.00" y="207.50"></text></g><g><title>e2d2::native::zcsi::mbuf::&lt;impl e2d2::native_include::rte_mbuf&gt;::read_metadata_slot (31 samples, 0.01%)</title><rect x="1046" y="181" width="0" height="15" fill="rgb(241,206,30)"/><text x="1049.00" y="191.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (2,147 samples, 0.62%)</title><rect x="1046" y="277" width="7" height="15" fill="rgb(219,139,2)"/><text x="1049.00" y="287.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (2,147 samples, 0.62%)</title><rect x="1046" y="261" width="7" height="15" fill="rgb(228,90,26)"/><text x="1049.00" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,902 samples, 0.55%)</title><rect x="1046" y="245" width="7" height="15" fill="rgb(224,225,38)"/><text x="1049.00" y="255.50"></text></g><g><title>_$LT$e2d2..operators..restore_header..RestoreHeader$LT$T$C$M$C$V$GT$$u20$as$u20$e2d2..operators..iterator..BatchIterator$GT$::next_payload::_$u7b$$u7b$closure$u7d$$u7d$::h41fd1f295d51559b (1,902 samples, 0.55%)</title><rect x="1046" y="229" width="7" height="15" fill="rgb(232,130,34)"/><text x="1049.00" y="239.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::restore_saved_header (1,902 samples, 0.55%)</title><rect x="1046" y="213" width="7" height="15" fill="rgb(214,81,10)"/><text x="1049.00" y="223.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::read_offset (1,860 samples, 0.53%)</title><rect x="1046" y="197" width="7" height="15" fill="rgb(247,10,2)"/><text x="1049.00" y="207.50"></text></g><g><title>e2d2::native::zcsi::mbuf::&lt;impl e2d2::native_include::rte_mbuf&gt;::read_metadata_slot (1,860 samples, 0.53%)</title><rect x="1046" y="181" width="7" height="15" fill="rgb(237,14,26)"/><text x="1049.00" y="191.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (47,781 samples, 13.69%)</title><rect x="892" y="357" width="161" height="15" fill="rgb(206,204,44)"/><text x="895.00" y="367.50">&lt;e2d2::operators::re..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (43,349 samples, 12.42%)</title><rect x="907" y="341" width="146" height="15" fill="rgb(250,27,41)"/><text x="910.00" y="351.50">&lt;e2d2::operators::..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (43,349 samples, 12.42%)</title><rect x="907" y="325" width="146" height="15" fill="rgb(253,54,34)"/><text x="910.00" y="335.50">&lt;e2d2::operators::..</text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (2,361 samples, 0.68%)</title><rect x="1045" y="309" width="8" height="15" fill="rgb(224,202,44)"/><text x="1048.00" y="319.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (2,346 samples, 0.67%)</title><rect x="1046" y="293" width="7" height="15" fill="rgb(252,180,50)"/><text x="1049.00" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (199 samples, 0.06%)</title><rect x="1053" y="277" width="0" height="15" fill="rgb(216,36,28)"/><text x="1056.00" y="287.50"></text></g><g><title>_$LT$e2d2..operators..parsed_batch..ParsedBatch$LT$T$C$V$GT$$u20$as$u20$e2d2..operators..iterator..BatchIterator$GT$::next_payload::_$u7b$$u7b$closure$u7d$$u7d$::h88fdbb1d2b8d23cc (199 samples, 0.06%)</title><rect x="1053" y="261" width="0" height="15" fill="rgb(244,128,49)"/><text x="1056.00" y="271.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::parse_header (199 samples, 0.06%)</title><rect x="1053" y="245" width="0" height="15" fill="rgb(221,229,31)"/><text x="1056.00" y="255.50"></text></g><g><title>e2d2::interface::packet::Packet&lt;T,M&gt;::payload_size (111 samples, 0.03%)</title><rect x="1053" y="229" width="0" height="15" fill="rgb(240,167,36)"/><text x="1056.00" y="239.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (187 samples, 0.05%)</title><rect x="1054" y="325" width="1" height="15" fill="rgb(224,106,54)"/><text x="1057.00" y="335.50"></text></g><g><title>_$LT$e2d2..operators..receive_batch..ReceiveBatch$LT$T$GT$$u20$as$u20$e2d2..operators..act..Act$GT$::act::_$u7b$$u7b$closure$u7d$$u7d$::h875165831de5abfa (187 samples, 0.05%)</title><rect x="1054" y="309" width="1" height="15" fill="rgb(242,168,34)"/><text x="1057.00" y="319.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (584 samples, 0.17%)</title><rect x="1055" y="309" width="2" height="15" fill="rgb(214,61,12)"/><text x="1058.00" y="319.50"></text></g><g><title>core::cmp::min (199 samples, 0.06%)</title><rect x="1057" y="261" width="1" height="15" fill="rgb(232,169,18)"/><text x="1060.00" y="271.50"></text></g><g><title>core::cmp::Ord::min (199 samples, 0.06%)</title><rect x="1057" y="245" width="1" height="15" fill="rgb(232,111,4)"/><text x="1060.00" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::le (114 samples, 0.03%)</title><rect x="1057" y="229" width="1" height="15" fill="rgb(253,90,43)"/><text x="1060.00" y="239.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (106 samples, 0.03%)</title><rect x="1058" y="261" width="0" height="15" fill="rgb(230,178,1)"/><text x="1061.00" y="271.50"></text></g><g><title>&lt;e2d2::queues::mpsc_mbuf_queue::MpscConsumer as e2d2::interface::PacketRx&gt;::recv (391 samples, 0.11%)</title><rect x="1057" y="293" width="1" height="15" fill="rgb(215,198,10)"/><text x="1060.00" y="303.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::dequeue (391 samples, 0.11%)</title><rect x="1057" y="277" width="1" height="15" fill="rgb(217,36,4)"/><text x="1060.00" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (60 samples, 0.02%)</title><rect x="1058" y="261" width="0" height="15" fill="rgb(230,21,15)"/><text x="1061.00" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (60 samples, 0.02%)</title><rect x="1058" y="245" width="0" height="15" fill="rgb(225,140,33)"/><text x="1061.00" y="255.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::add_to_batch (150 samples, 0.04%)</title><rect x="1058" y="293" width="1" height="15" fill="rgb(230,164,28)"/><text x="1061.00" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (150 samples, 0.04%)</title><rect x="1058" y="277" width="1" height="15" fill="rgb(233,141,11)"/><text x="1061.00" y="287.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (49,670 samples, 14.23%)</title><rect x="892" y="373" width="168" height="15" fill="rgb(248,160,0)"/><text x="895.00" y="383.50">&lt;e2d2::operators::com..</text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (1,864 samples, 0.53%)</title><rect x="1053" y="357" width="7" height="15" fill="rgb(205,187,39)"/><text x="1056.00" y="367.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (1,698 samples, 0.49%)</title><rect x="1054" y="341" width="6" height="15" fill="rgb(207,43,47)"/><text x="1057.00" y="351.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (1,511 samples, 0.43%)</title><rect x="1055" y="325" width="5" height="15" fill="rgb(209,64,29)"/><text x="1058.00" y="335.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (910 samples, 0.26%)</title><rect x="1057" y="309" width="3" height="15" fill="rgb(221,225,20)"/><text x="1060.00" y="319.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (302 samples, 0.09%)</title><rect x="1059" y="293" width="1" height="15" fill="rgb(224,71,5)"/><text x="1062.00" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (302 samples, 0.09%)</title><rect x="1059" y="277" width="1" height="15" fill="rgb(241,87,39)"/><text x="1062.00" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (165 samples, 0.05%)</title><rect x="1059" y="261" width="1" height="15" fill="rgb(207,115,32)"/><text x="1062.00" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (316 samples, 0.09%)</title><rect x="1063" y="325" width="1" height="15" fill="rgb(217,109,4)"/><text x="1066.00" y="335.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (315 samples, 0.09%)</title><rect x="1063" y="309" width="1" height="15" fill="rgb(211,120,37)"/><text x="1066.00" y="319.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (315 samples, 0.09%)</title><rect x="1063" y="293" width="1" height="15" fill="rgb(220,36,33)"/><text x="1066.00" y="303.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (1,991 samples, 0.57%)</title><rect x="1060" y="373" width="6" height="15" fill="rgb(218,192,27)"/><text x="1063.00" y="383.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (1,684 samples, 0.48%)</title><rect x="1061" y="357" width="5" height="15" fill="rgb(220,80,44)"/><text x="1064.00" y="367.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (1,684 samples, 0.48%)</title><rect x="1061" y="341" width="5" height="15" fill="rgb(253,169,14)"/><text x="1064.00" y="351.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (708 samples, 0.20%)</title><rect x="1064" y="325" width="2" height="15" fill="rgb(206,180,7)"/><text x="1067.00" y="335.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (399 samples, 0.11%)</title><rect x="1065" y="309" width="1" height="15" fill="rgb(247,0,10)"/><text x="1068.00" y="319.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (399 samples, 0.11%)</title><rect x="1065" y="293" width="1" height="15" fill="rgb(247,73,33)"/><text x="1068.00" y="303.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (399 samples, 0.11%)</title><rect x="1065" y="277" width="1" height="15" fill="rgb(251,74,46)"/><text x="1068.00" y="287.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (203 samples, 0.06%)</title><rect x="1066" y="261" width="0" height="15" fill="rgb(210,145,43)"/><text x="1069.00" y="271.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::done (203 samples, 0.06%)</title><rect x="1066" y="245" width="0" height="15" fill="rgb(239,173,22)"/><text x="1069.00" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (80 samples, 0.02%)</title><rect x="1069" y="309" width="0" height="15" fill="rgb(222,117,14)"/><text x="1072.00" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (62 samples, 0.02%)</title><rect x="1069" y="293" width="0" height="15" fill="rgb(232,14,42)"/><text x="1072.00" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (62 samples, 0.02%)</title><rect x="1069" y="277" width="0" height="15" fill="rgb(220,159,0)"/><text x="1072.00" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (364 samples, 0.10%)</title><rect x="1069" y="325" width="1" height="15" fill="rgb(226,73,13)"/><text x="1072.00" y="335.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (284 samples, 0.08%)</title><rect x="1069" y="309" width="1" height="15" fill="rgb(235,68,36)"/><text x="1072.00" y="319.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (284 samples, 0.08%)</title><rect x="1069" y="293" width="1" height="15" fill="rgb(212,19,5)"/><text x="1072.00" y="303.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (4,025 samples, 1.15%)</title><rect x="1066" y="373" width="14" height="15" fill="rgb(224,218,49)"/><text x="1069.00" y="383.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (3,574 samples, 1.02%)</title><rect x="1068" y="357" width="12" height="15" fill="rgb(238,228,29)"/><text x="1071.00" y="367.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (3,573 samples, 1.02%)</title><rect x="1068" y="341" width="12" height="15" fill="rgb(242,16,50)"/><text x="1071.00" y="351.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (2,995 samples, 0.86%)</title><rect x="1070" y="325" width="10" height="15" fill="rgb(240,84,6)"/><text x="1073.00" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (319 samples, 0.09%)</title><rect x="1082" y="357" width="1" height="15" fill="rgb(224,28,49)"/><text x="1085.00" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (72 samples, 0.02%)</title><rect x="1083" y="309" width="0" height="15" fill="rgb(209,161,27)"/><text x="1086.00" y="319.50"></text></g><g><title>core::sync::atomic::atomic_store (72 samples, 0.02%)</title><rect x="1083" y="293" width="0" height="15" fill="rgb(238,9,20)"/><text x="1086.00" y="303.50"></text></g><g><title>rte_lcore_id (44 samples, 0.01%)</title><rect x="1089" y="213" width="0" height="15" fill="rgb(229,42,14)"/><text x="1092.00" y="223.50"></text></g><g><title>rte_mov128 (48 samples, 0.01%)</title><rect x="1089" y="149" width="0" height="15" fill="rgb(210,175,50)"/><text x="1092.00" y="159.50"></text></g><g><title>rte_mov32 (48 samples, 0.01%)</title><rect x="1089" y="133" width="0" height="15" fill="rgb(236,21,0)"/><text x="1092.00" y="143.50"></text></g><g><title>_mm256_storeu_si256 (37 samples, 0.01%)</title><rect x="1089" y="117" width="0" height="15" fill="rgb(223,34,19)"/><text x="1092.00" y="127.50"></text></g><g><title>rte_memcpy (140 samples, 0.04%)</title><rect x="1089" y="181" width="0" height="15" fill="rgb(227,45,16)"/><text x="1092.00" y="191.50"></text></g><g><title>rte_memcpy_generic (129 samples, 0.04%)</title><rect x="1089" y="165" width="0" height="15" fill="rgb(206,195,12)"/><text x="1092.00" y="175.50"></text></g><g><title>__rte_ring_move_prod_head (300 samples, 0.09%)</title><rect x="1091" y="117" width="1" height="15" fill="rgb(226,6,21)"/><text x="1094.00" y="127.50"></text></g><g><title>rte_atomic32_cmpset (279 samples, 0.08%)</title><rect x="1091" y="101" width="1" height="15" fill="rgb(207,76,35)"/><text x="1094.00" y="111.50"></text></g><g><title>rte_mempool_put_bulk (885 samples, 0.25%)</title><rect x="1089" y="229" width="3" height="15" fill="rgb(250,219,13)"/><text x="1092.00" y="239.50"></text></g><g><title>rte_mempool_generic_put (825 samples, 0.24%)</title><rect x="1089" y="213" width="3" height="15" fill="rgb(234,182,19)"/><text x="1092.00" y="223.50"></text></g><g><title>__mempool_generic_put (825 samples, 0.24%)</title><rect x="1089" y="197" width="3" height="15" fill="rgb(213,72,49)"/><text x="1092.00" y="207.50"></text></g><g><title>rte_mempool_ops_enqueue_bulk (623 samples, 0.18%)</title><rect x="1089" y="181" width="3" height="15" fill="rgb(251,122,54)"/><text x="1092.00" y="191.50"></text></g><g><title>common_ring_mp_enqueue (606 samples, 0.17%)</title><rect x="1090" y="165" width="2" height="15" fill="rgb(205,155,25)"/><text x="1093.00" y="175.50"></text></g><g><title>rte_ring_mp_enqueue_bulk (567 samples, 0.16%)</title><rect x="1090" y="149" width="2" height="15" fill="rgb(235,187,20)"/><text x="1093.00" y="159.50"></text></g><g><title>__rte_ring_do_enqueue (567 samples, 0.16%)</title><rect x="1090" y="133" width="2" height="15" fill="rgb(254,21,22)"/><text x="1093.00" y="143.50"></text></g><g><title>rte_mbuf_refcnt_read (209 samples, 0.06%)</title><rect x="1094" y="213" width="1" height="15" fill="rgb(241,149,4)"/><text x="1097.00" y="223.50"></text></g><g><title>rte_atomic16_read (209 samples, 0.06%)</title><rect x="1094" y="197" width="1" height="15" fill="rgb(229,205,40)"/><text x="1097.00" y="207.50"></text></g><g><title>i40e_tx_free_bufs (3,298 samples, 0.95%)</title><rect x="1084" y="245" width="11" height="15" fill="rgb(230,211,48)"/><text x="1087.00" y="255.50"></text></g><g><title>rte_pktmbuf_prefree_seg (1,042 samples, 0.30%)</title><rect x="1092" y="229" width="3" height="15" fill="rgb(236,210,27)"/><text x="1095.00" y="239.50"></text></g><g><title>tx_backlog_entry (371 samples, 0.11%)</title><rect x="1095" y="245" width="1" height="15" fill="rgb(234,49,19)"/><text x="1098.00" y="255.50"></text></g><g><title>vtx (86 samples, 0.02%)</title><rect x="1096" y="245" width="1" height="15" fill="rgb(244,49,2)"/><text x="1099.00" y="255.50"></text></g><g><title>_mm_set_epi64x (37 samples, 0.01%)</title><rect x="1097" y="229" width="0" height="15" fill="rgb(254,6,11)"/><text x="1100.00" y="239.50"></text></g><g><title>vtx1 (132 samples, 0.04%)</title><rect x="1097" y="245" width="0" height="15" fill="rgb(247,32,33)"/><text x="1100.00" y="255.50"></text></g><g><title>_mm_set_epi64x (527 samples, 0.15%)</title><rect x="1102" y="213" width="1" height="15" fill="rgb(224,176,6)"/><text x="1105.00" y="223.50"></text></g><g><title>i40e_xmit_fixed_burst_vec (5,968 samples, 1.71%)</title><rect x="1083" y="261" width="21" height="15" fill="rgb(241,178,25)"/><text x="1086.00" y="271.50"></text></g><g><title>vtx (1,951 samples, 0.56%)</title><rect x="1097" y="245" width="7" height="15" fill="rgb(235,85,2)"/><text x="1100.00" y="255.50"></text></g><g><title>vtx1 (1,951 samples, 0.56%)</title><rect x="1097" y="229" width="7" height="15" fill="rgb(218,219,18)"/><text x="1100.00" y="239.50"></text></g><g><title>_mm_store_si128 (86 samples, 0.02%)</title><rect x="1103" y="213" width="1" height="15" fill="rgb(210,34,3)"/><text x="1106.00" y="223.50"></text></g><g><title>e2d2::interface::port::&lt;impl e2d2::interface::PacketTx for e2d2::allocators::cache_aligned::CacheAligned&lt;T&gt;&gt;::send (6,229 samples, 1.79%)</title><rect x="1083" y="357" width="21" height="15" fill="rgb(254,205,0)"/><text x="1086.00" y="367.50"></text></g><g><title>&lt;e2d2::interface::port::phy_port::PortQueue as e2d2::interface::PacketTx&gt;::send (6,229 samples, 1.79%)</title><rect x="1083" y="341" width="21" height="15" fill="rgb(245,131,13)"/><text x="1086.00" y="351.50"></text></g><g><title>e2d2::interface::port::phy_port::PortQueue::send_queue (6,229 samples, 1.79%)</title><rect x="1083" y="325" width="21" height="15" fill="rgb(225,210,13)"/><text x="1086.00" y="335.50"></text></g><g><title>send_pkts (6,139 samples, 1.76%)</title><rect x="1083" y="309" width="21" height="15" fill="rgb(214,109,14)"/><text x="1086.00" y="319.50"></text></g><g><title>rte_eth_tx_burst (6,138 samples, 1.76%)</title><rect x="1083" y="293" width="21" height="15" fill="rgb(237,105,12)"/><text x="1086.00" y="303.50"></text></g><g><title>i40e_xmit_pkts_vec (6,035 samples, 1.73%)</title><rect x="1083" y="277" width="21" height="15" fill="rgb(219,17,40)"/><text x="1086.00" y="287.50"></text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;::execute (62,867 samples, 18.02%)</title><rect x="891" y="405" width="213" height="15" fill="rgb(234,46,31)"/><text x="894.00" y="415.50">&lt;e2d2::operators::send_batch..</text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::act (62,673 samples, 17.96%)</title><rect x="892" y="389" width="212" height="15" fill="rgb(209,74,44)"/><text x="895.00" y="399.50">&lt;e2d2::operators::send_batc..</text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::act::Act&gt;::send_q (6,987 samples, 2.00%)</title><rect x="1080" y="373" width="24" height="15" fill="rgb(236,52,40)"/><text x="1083.00" y="383.50">&lt;..</text></g><g><title>e2d2::utils::asm::rdtsc_unsafe (5,200 samples, 1.49%)</title><rect x="1104" y="405" width="17" height="15" fill="rgb(244,221,26)"/><text x="1107.00" y="415.50"></text></g><g><title>core::ptr::real_drop_in_place (7,650 samples, 2.19%)</title><rect x="1125" y="373" width="26" height="15" fill="rgb(228,32,54)"/><text x="1128.00" y="383.50">c..</text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,650 samples, 2.19%)</title><rect x="1125" y="357" width="26" height="15" fill="rgb(205,223,3)"/><text x="1128.00" y="367.50">&lt;..</text></g><g><title>std::sys_common::mutex::Mutex::raw_unlock (7,649 samples, 2.19%)</title><rect x="1125" y="341" width="26" height="15" fill="rgb(251,83,7)"/><text x="1128.00" y="351.50">s..</text></g><g><title>std::sys::unix::mutex::Mutex::unlock (7,649 samples, 2.19%)</title><rect x="1125" y="325" width="26" height="15" fill="rgb(232,184,50)"/><text x="1128.00" y="335.50">s..</text></g><g><title>__GI___pthread_mutex_unlock (7,649 samples, 2.19%)</title><rect x="1125" y="309" width="26" height="15" fill="rgb(205,135,53)"/><text x="1128.00" y="319.50">_..</text></g><g><title>__pthread_mutex_unlock_usercnt (7,056 samples, 2.02%)</title><rect x="1127" y="293" width="24" height="15" fill="rgb(222,126,50)"/><text x="1130.00" y="303.50">_..</text></g><g><title>std::sys_common::poison::Flag::get (265 samples, 0.08%)</title><rect x="1151" y="325" width="1" height="15" fill="rgb(222,93,2)"/><text x="1154.00" y="335.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (265 samples, 0.08%)</title><rect x="1151" y="309" width="1" height="15" fill="rgb(229,180,39)"/><text x="1154.00" y="319.50"></text></g><g><title>core::sync::atomic::atomic_load (265 samples, 0.08%)</title><rect x="1151" y="293" width="1" height="15" fill="rgb(223,15,13)"/><text x="1154.00" y="303.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (551 samples, 0.16%)</title><rect x="1151" y="357" width="2" height="15" fill="rgb(245,86,36)"/><text x="1154.00" y="367.50"></text></g><g><title>std::sys_common::poison::Flag::borrow (551 samples, 0.16%)</title><rect x="1151" y="341" width="2" height="15" fill="rgb(250,103,18)"/><text x="1154.00" y="351.50"></text></g><g><title>std::thread::panicking (286 samples, 0.08%)</title><rect x="1152" y="325" width="1" height="15" fill="rgb(228,13,32)"/><text x="1155.00" y="335.50"></text></g><g><title>std::panicking::panicking (286 samples, 0.08%)</title><rect x="1152" y="309" width="1" height="15" fill="rgb(206,120,20)"/><text x="1155.00" y="319.50"></text></g><g><title>std::panicking::update_panic_count (286 samples, 0.08%)</title><rect x="1152" y="293" width="1" height="15" fill="rgb(207,200,38)"/><text x="1155.00" y="303.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (286 samples, 0.08%)</title><rect x="1152" y="277" width="1" height="15" fill="rgb(217,12,21)"/><text x="1155.00" y="287.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (286 samples, 0.08%)</title><rect x="1152" y="261" width="1" height="15" fill="rgb(210,170,2)"/><text x="1155.00" y="271.50"></text></g><g><title>std::panicking::update_panic_count::_$u7b$$u7b$closure$u7d$$u7d$::h93a68fffdc8624a0 (286 samples, 0.08%)</title><rect x="1152" y="245" width="1" height="15" fill="rgb(215,108,53)"/><text x="1155.00" y="255.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (286 samples, 0.08%)</title><rect x="1152" y="229" width="1" height="15" fill="rgb(242,10,46)"/><text x="1155.00" y="239.50"></text></g><g><title>__GI___clone (149,666 samples, 42.89%)</title><rect x="679" y="613" width="506" height="15" fill="rgb(207,157,43)"/><text x="682.00" y="623.50">__GI___clone</text></g><g><title>start_thread (149,666 samples, 42.89%)</title><rect x="679" y="597" width="506" height="15" fill="rgb(237,201,53)"/><text x="682.00" y="607.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (149,666 samples, 42.89%)</title><rect x="679" y="581" width="506" height="15" fill="rgb(220,65,25)"/><text x="682.00" y="591.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys_common::thread::start_thread (149,666 samples, 42.89%)</title><rect x="679" y="565" width="506" height="15" fill="rgb(212,125,21)"/><text x="682.00" y="575.50">std::sys_common::thread::start_thread</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (149,666 samples, 42.89%)</title><rect x="679" y="549" width="506" height="15" fill="rgb(247,194,34)"/><text x="682.00" y="559.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (149,666 samples, 42.89%)</title><rect x="679" y="533" width="506" height="15" fill="rgb(227,90,4)"/><text x="682.00" y="543.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h83d6f0cf65a68686 (149,666 samples, 42.89%)</title><rect x="679" y="517" width="506" height="15" fill="rgb(234,86,8)"/><text x="682.00" y="527.50">core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (149,666 samples, 42.89%)</title><rect x="679" y="501" width="506" height="15" fill="rgb(208,41,11)"/><text x="682.00" y="511.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>e2d2::scheduler::context::NetBricksContext::start_scheduler::_$u7b$$u7b$closure$u7d$$u7d$::hb2befc178c075dc6 (149,666 samples, 42.89%)</title><rect x="679" y="485" width="506" height="15" fill="rgb(242,201,43)"/><text x="682.00" y="495.50">e2d2::scheduler::context::NetBricksContext::start_scheduler::_$u7b$$u..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_requests (149,658 samples, 42.89%)</title><rect x="679" y="469" width="506" height="15" fill="rgb(248,15,27)"/><text x="682.00" y="479.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_re..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request (149,658 samples, 42.89%)</title><rect x="679" y="453" width="506" height="15" fill="rgb(214,98,47)"/><text x="682.00" y="463.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_re..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_loop (149,658 samples, 42.89%)</title><rect x="679" y="437" width="506" height="15" fill="rgb(216,72,40)"/><text x="682.00" y="447.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_l..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_internal (149,047 samples, 42.71%)</title><rect x="681" y="421" width="504" height="15" fill="rgb(250,90,9)"/><text x="684.00" y="431.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_i..</text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (18,821 samples, 5.39%)</title><rect x="1121" y="405" width="64" height="15" fill="rgb(211,152,26)"/><text x="1124.00" y="415.50">std::sy..</text></g><g><title>std::sync::mpsc::sync::Packet&lt;T&gt;::try_recv (17,988 samples, 5.15%)</title><rect x="1124" y="389" width="61" height="15" fill="rgb(223,132,38)"/><text x="1127.00" y="399.50">std::s..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (10,034 samples, 2.88%)</title><rect x="1151" y="373" width="34" height="15" fill="rgb(244,77,11)"/><text x="1154.00" y="383.50">st..</text></g><g><title>std::sys_common::mutex::Mutex::raw_lock (9,479 samples, 2.72%)</title><rect x="1153" y="357" width="32" height="15" fill="rgb(213,1,25)"/><text x="1156.00" y="367.50">st..</text></g><g><title>std::sys::unix::mutex::Mutex::lock (9,479 samples, 2.72%)</title><rect x="1153" y="341" width="32" height="15" fill="rgb(241,119,50)"/><text x="1156.00" y="351.50">st..</text></g><g><title>__GI___pthread_mutex_lock (9,479 samples, 2.72%)</title><rect x="1153" y="325" width="32" height="15" fill="rgb(206,12,25)"/><text x="1156.00" y="335.50">__..</text></g><g><title>core::ptr::real_drop_in_place (271 samples, 0.08%)</title><rect x="1187" y="533" width="1" height="15" fill="rgb(253,47,23)"/><text x="1190.00" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (271 samples, 0.08%)</title><rect x="1187" y="517" width="1" height="15" fill="rgb(222,53,54)"/><text x="1190.00" y="527.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_unlock (271 samples, 0.08%)</title><rect x="1187" y="501" width="1" height="15" fill="rgb(207,114,22)"/><text x="1190.00" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (271 samples, 0.08%)</title><rect x="1187" y="485" width="1" height="15" fill="rgb(246,51,52)"/><text x="1190.00" y="495.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request (1,326 samples, 0.38%)</title><rect x="1185" y="613" width="4" height="15" fill="rgb(242,92,17)"/><text x="1188.00" y="623.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_loop (1,326 samples, 0.38%)</title><rect x="1185" y="597" width="4" height="15" fill="rgb(212,4,30)"/><text x="1188.00" y="607.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_internal (1,326 samples, 0.38%)</title><rect x="1185" y="581" width="4" height="15" fill="rgb(225,104,3)"/><text x="1188.00" y="591.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (585 samples, 0.17%)</title><rect x="1187" y="565" width="2" height="15" fill="rgb(215,73,12)"/><text x="1190.00" y="575.50"></text></g><g><title>std::sync::mpsc::sync::Packet&lt;T&gt;::try_recv (585 samples, 0.17%)</title><rect x="1187" y="549" width="2" height="15" fill="rgb(222,107,51)"/><text x="1190.00" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (314 samples, 0.09%)</title><rect x="1188" y="533" width="1" height="15" fill="rgb(239,100,10)"/><text x="1191.00" y="543.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_lock (314 samples, 0.09%)</title><rect x="1188" y="517" width="1" height="15" fill="rgb(253,93,52)"/><text x="1191.00" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (314 samples, 0.09%)</title><rect x="1188" y="501" width="1" height="15" fill="rgb(253,179,34)"/><text x="1191.00" y="511.50"></text></g><g><title>all (348,946 samples, 100%)</title><rect x="10" y="645" width="1180" height="15" fill="rgb(253,11,27)"/><text x="13.00" y="655.50"></text></g><g><title>sched-3 (173,116 samples, 49.61%)</title><rect x="604" y="629" width="586" height="15" fill="rgb(228,86,6)"/><text x="607.00" y="639.50">sched-3</text></g></g></svg>