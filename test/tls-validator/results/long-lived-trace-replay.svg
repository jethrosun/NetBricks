<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="694" fill="url(#background)"/><text id="title" x="600.00" y="24.00">Flame Graph</text><text id="details" x="10.00" y="677.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="677.00"> </text><g id="frames"><g><title>clear_huge_page (72 samples, 0.01%)</title><rect x="10" y="277" width="0" height="15" fill="rgb(233,103,10)"/><text x="13.00" y="287.50"></text></g><g><title>clear_page_erms (2,009 samples, 0.27%)</title><rect x="10" y="277" width="3" height="15" fill="rgb(244,67,19)"/><text x="13.00" y="287.50"></text></g><g><title>pvn_tls::main (2,120 samples, 0.28%)</title><rect x="10" y="597" width="3" height="15" fill="rgb(236,45,1)"/><text x="13.00" y="607.50"></text></g><g><title>e2d2::scheduler::context::initialize_system (2,120 samples, 0.28%)</title><rect x="10" y="581" width="3" height="15" fill="rgb(220,68,9)"/><text x="13.00" y="591.50"></text></g><g><title>init_system_whitelisted (2,120 samples, 0.28%)</title><rect x="10" y="565" width="3" height="15" fill="rgb(253,84,11)"/><text x="13.00" y="575.50"></text></g><g><title>init_eal (2,120 samples, 0.28%)</title><rect x="10" y="549" width="3" height="15" fill="rgb(221,91,23)"/><text x="13.00" y="559.50"></text></g><g><title>rte_eal_init (2,120 samples, 0.28%)</title><rect x="10" y="533" width="3" height="15" fill="rgb(230,67,42)"/><text x="13.00" y="543.50"></text></g><g><title>rte_eal_memory_init (2,120 samples, 0.28%)</title><rect x="10" y="517" width="3" height="15" fill="rgb(245,158,19)"/><text x="13.00" y="527.50"></text></g><g><title>rte_eal_hugepage_init (2,120 samples, 0.28%)</title><rect x="10" y="501" width="3" height="15" fill="rgb(215,213,50)"/><text x="13.00" y="511.50"></text></g><g><title>map_all_hugepages (2,120 samples, 0.28%)</title><rect x="10" y="485" width="3" height="15" fill="rgb(221,147,14)"/><text x="13.00" y="495.50"></text></g><g><title>__GI___mmap64 (2,120 samples, 0.28%)</title><rect x="10" y="469" width="3" height="15" fill="rgb(207,166,10)"/><text x="13.00" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,120 samples, 0.28%)</title><rect x="10" y="453" width="3" height="15" fill="rgb(234,29,50)"/><text x="13.00" y="463.50"></text></g><g><title>do_syscall_64 (2,120 samples, 0.28%)</title><rect x="10" y="437" width="3" height="15" fill="rgb(227,106,8)"/><text x="13.00" y="447.50"></text></g><g><title>sys_mmap (2,120 samples, 0.28%)</title><rect x="10" y="421" width="3" height="15" fill="rgb(235,133,51)"/><text x="13.00" y="431.50"></text></g><g><title>sys_mmap_pgoff (2,120 samples, 0.28%)</title><rect x="10" y="405" width="3" height="15" fill="rgb(218,176,53)"/><text x="13.00" y="415.50"></text></g><g><title>vm_mmap_pgoff (2,120 samples, 0.28%)</title><rect x="10" y="389" width="3" height="15" fill="rgb(224,54,52)"/><text x="13.00" y="399.50"></text></g><g><title>__mm_populate (2,120 samples, 0.28%)</title><rect x="10" y="373" width="3" height="15" fill="rgb(245,189,34)"/><text x="13.00" y="383.50"></text></g><g><title>populate_vma_page_range (2,120 samples, 0.28%)</title><rect x="10" y="357" width="3" height="15" fill="rgb(233,170,6)"/><text x="13.00" y="367.50"></text></g><g><title>__get_user_pages (2,120 samples, 0.28%)</title><rect x="10" y="341" width="3" height="15" fill="rgb(236,153,33)"/><text x="13.00" y="351.50"></text></g><g><title>follow_hugetlb_page (2,120 samples, 0.28%)</title><rect x="10" y="325" width="3" height="15" fill="rgb(235,50,10)"/><text x="13.00" y="335.50"></text></g><g><title>hugetlb_fault (2,100 samples, 0.28%)</title><rect x="10" y="309" width="3" height="15" fill="rgb(223,226,2)"/><text x="13.00" y="319.50"></text></g><g><title>hugetlb_no_page (2,100 samples, 0.28%)</title><rect x="10" y="293" width="3" height="15" fill="rgb(232,64,10)"/><text x="13.00" y="303.50"></text></g><g><title>[unknown] (2,198 samples, 0.29%)</title><rect x="10" y="613" width="3" height="15" fill="rgb(213,223,1)"/><text x="13.00" y="623.50"></text></g><g><title>i40e_pf_reset (76 samples, 0.01%)</title><rect x="13" y="373" width="0" height="15" fill="rgb(221,44,2)"/><text x="16.00" y="383.50"></text></g><g><title>rte_delay_us_block (76 samples, 0.01%)</title><rect x="13" y="357" width="0" height="15" fill="rgb(245,185,10)"/><text x="16.00" y="367.50"></text></g><g><title>rte_pause (69 samples, 0.01%)</title><rect x="13" y="341" width="0" height="15" fill="rgb(234,153,48)"/><text x="16.00" y="351.50"></text></g><g><title>_mm_pause (69 samples, 0.01%)</title><rect x="13" y="325" width="0" height="15" fill="rgb(245,210,16)"/><text x="16.00" y="335.50"></text></g><g><title>i40e_set_fc (93 samples, 0.01%)</title><rect x="13" y="373" width="0" height="15" fill="rgb(244,218,42)"/><text x="16.00" y="383.50"></text></g><g><title>pci_probe_all_drivers (299 samples, 0.04%)</title><rect x="13" y="453" width="0" height="15" fill="rgb(239,228,12)"/><text x="16.00" y="463.50"></text></g><g><title>rte_pci_probe_one_driver (299 samples, 0.04%)</title><rect x="13" y="437" width="0" height="15" fill="rgb(252,222,4)"/><text x="16.00" y="447.50"></text></g><g><title>eth_i40e_pci_probe (299 samples, 0.04%)</title><rect x="13" y="421" width="0" height="15" fill="rgb(248,8,7)"/><text x="16.00" y="431.50"></text></g><g><title>rte_eth_dev_pci_generic_probe (299 samples, 0.04%)</title><rect x="13" y="405" width="0" height="15" fill="rgb(231,168,0)"/><text x="16.00" y="415.50"></text></g><g><title>eth_i40e_dev_init (299 samples, 0.04%)</title><rect x="13" y="389" width="0" height="15" fill="rgb(228,97,1)"/><text x="16.00" y="399.50"></text></g><g><title>attach_pmd_device (300 samples, 0.04%)</title><rect x="13" y="501" width="1" height="15" fill="rgb(224,81,41)"/><text x="16.00" y="511.50"></text></g><g><title>rte_eth_dev_attach (300 samples, 0.04%)</title><rect x="13" y="485" width="1" height="15" fill="rgb(222,176,44)"/><text x="16.00" y="495.50"></text></g><g><title>rte_eal_hotplug_add (300 samples, 0.04%)</title><rect x="13" y="469" width="1" height="15" fill="rgb(234,67,4)"/><text x="16.00" y="479.50"></text></g><g><title>i40e_dev_start (73 samples, 0.01%)</title><rect x="14" y="469" width="0" height="15" fill="rgb(230,96,2)"/><text x="17.00" y="479.50"></text></g><g><title>rte_eth_dev_start (96 samples, 0.01%)</title><rect x="14" y="485" width="0" height="15" fill="rgb(243,120,16)"/><text x="17.00" y="495.50"></text></g><g><title>init_pmd_port (142 samples, 0.02%)</title><rect x="14" y="501" width="0" height="15" fill="rgb(219,137,33)"/><text x="17.00" y="511.50"></text></g><g><title>e2d2::scheduler::context::initialize_system (443 samples, 0.06%)</title><rect x="13" y="533" width="1" height="15" fill="rgb(243,216,41)"/><text x="16.00" y="543.50"></text></g><g><title>e2d2::interface::port::phy_port::PmdPort::new_dpdk_port (443 samples, 0.06%)</title><rect x="13" y="517" width="1" height="15" fill="rgb(250,196,17)"/><text x="16.00" y="527.50"></text></g><g><title>__libc_start_main (519 samples, 0.07%)</title><rect x="13" y="597" width="1" height="15" fill="rgb(227,20,18)"/><text x="16.00" y="607.50"></text></g><g><title>main (519 samples, 0.07%)</title><rect x="13" y="581" width="1" height="15" fill="rgb(249,139,44)"/><text x="16.00" y="591.50"></text></g><g><title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::hc87de8565012a906 (518 samples, 0.07%)</title><rect x="13" y="565" width="1" height="15" fill="rgb(215,43,40)"/><text x="16.00" y="575.50"></text></g><g><title>pvn_tls::main (518 samples, 0.07%)</title><rect x="13" y="549" width="1" height="15" fill="rgb(238,49,3)"/><text x="16.00" y="559.50"></text></g><g><title>_start (521 samples, 0.07%)</title><rect x="13" y="613" width="1" height="15" fill="rgb(243,42,53)"/><text x="16.00" y="623.50"></text></g><g><title>pvn-tls (2,748 samples, 0.37%)</title><rect x="10" y="629" width="4" height="15" fill="rgb(253,33,19)"/><text x="13.00" y="639.50"></text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (1,929 samples, 0.26%)</title><rect x="14" y="613" width="3" height="15" fill="rgb(227,63,19)"/><text x="17.00" y="623.50"></text></g><g><title>[libzcsi.so] (1,938 samples, 0.26%)</title><rect x="17" y="613" width="3" height="15" fill="rgb(244,52,2)"/><text x="20.00" y="623.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (1,938 samples, 0.26%)</title><rect x="17" y="597" width="3" height="15" fill="rgb(222,210,48)"/><text x="20.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (997 samples, 0.13%)</title><rect x="18" y="581" width="2" height="15" fill="rgb(245,134,36)"/><text x="21.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (997 samples, 0.13%)</title><rect x="18" y="565" width="2" height="15" fill="rgb(252,214,12)"/><text x="21.00" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3,036 samples, 0.41%)</title><rect x="20" y="597" width="5" height="15" fill="rgb(205,175,53)"/><text x="23.00" y="607.50"></text></g><g><title>e2d2::interface::port::&lt;impl e2d2::interface::PacketRx for e2d2::allocators::cache_aligned::CacheAligned&lt;T&gt;&gt;::recv (1,865 samples, 0.25%)</title><rect x="34" y="485" width="3" height="15" fill="rgb(220,221,0)"/><text x="37.00" y="495.50"></text></g><g><title>&lt;e2d2::interface::port::phy_port::PortQueue as e2d2::interface::PacketRx&gt;::recv (1,865 samples, 0.25%)</title><rect x="34" y="469" width="3" height="15" fill="rgb(217,137,26)"/><text x="37.00" y="479.50"></text></g><g><title>e2d2::interface::port::phy_port::PortQueue::recv_queue (1,865 samples, 0.25%)</title><rect x="34" y="453" width="3" height="15" fill="rgb(236,208,46)"/><text x="37.00" y="463.50"></text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (9,510 samples, 1.27%)</title><rect x="25" y="597" width="15" height="15" fill="rgb(246,52,26)"/><text x="28.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (3,768 samples, 0.50%)</title><rect x="34" y="581" width="6" height="15" fill="rgb(237,115,34)"/><text x="37.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (3,768 samples, 0.50%)</title><rect x="34" y="565" width="6" height="15" fill="rgb(219,41,49)"/><text x="37.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (3,768 samples, 0.50%)</title><rect x="34" y="549" width="6" height="15" fill="rgb(228,109,52)"/><text x="37.00" y="559.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (3,768 samples, 0.50%)</title><rect x="34" y="533" width="6" height="15" fill="rgb(205,100,46)"/><text x="37.00" y="543.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (3,768 samples, 0.50%)</title><rect x="34" y="517" width="6" height="15" fill="rgb(216,88,35)"/><text x="37.00" y="527.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (3,768 samples, 0.50%)</title><rect x="34" y="501" width="6" height="15" fill="rgb(210,33,23)"/><text x="37.00" y="511.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (1,903 samples, 0.25%)</title><rect x="37" y="485" width="3" height="15" fill="rgb(242,228,45)"/><text x="40.00" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1,903 samples, 0.25%)</title><rect x="37" y="469" width="3" height="15" fill="rgb(223,158,15)"/><text x="40.00" y="479.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (1,124 samples, 0.15%)</title><rect x="43" y="581" width="2" height="15" fill="rgb(238,209,32)"/><text x="46.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (1,124 samples, 0.15%)</title><rect x="43" y="565" width="2" height="15" fill="rgb(234,54,14)"/><text x="46.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (19,475 samples, 2.61%)</title><rect x="40" y="597" width="31" height="15" fill="rgb(253,187,49)"/><text x="43.00" y="607.50">&lt;e..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (16,462 samples, 2.21%)</title><rect x="45" y="581" width="26" height="15" fill="rgb(238,46,20)"/><text x="48.00" y="591.50">&lt;..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (16,462 samples, 2.21%)</title><rect x="45" y="565" width="26" height="15" fill="rgb(217,189,20)"/><text x="48.00" y="575.50">&lt;..</text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (1,207 samples, 0.16%)</title><rect x="69" y="549" width="2" height="15" fill="rgb(225,19,50)"/><text x="72.00" y="559.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::act (1,207 samples, 0.16%)</title><rect x="69" y="533" width="2" height="15" fill="rgb(206,68,9)"/><text x="72.00" y="543.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (5,555 samples, 0.74%)</title><rect x="71" y="597" width="8" height="15" fill="rgb(250,11,45)"/><text x="74.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (3,243 samples, 0.43%)</title><rect x="74" y="581" width="5" height="15" fill="rgb(234,202,53)"/><text x="77.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (3,242 samples, 0.43%)</title><rect x="74" y="565" width="5" height="15" fill="rgb(254,114,53)"/><text x="77.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (1,802 samples, 0.24%)</title><rect x="79" y="597" width="3" height="15" fill="rgb(236,220,41)"/><text x="82.00" y="607.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (14,169 samples, 1.90%)</title><rect x="82" y="597" width="23" height="15" fill="rgb(226,217,43)"/><text x="85.00" y="607.50">&lt;..</text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (428 samples, 0.06%)</title><rect x="104" y="581" width="1" height="15" fill="rgb(249,212,5)"/><text x="107.00" y="591.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (428 samples, 0.06%)</title><rect x="104" y="565" width="1" height="15" fill="rgb(232,112,38)"/><text x="107.00" y="575.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (428 samples, 0.06%)</title><rect x="104" y="549" width="1" height="15" fill="rgb(227,135,17)"/><text x="107.00" y="559.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (428 samples, 0.06%)</title><rect x="104" y="533" width="1" height="15" fill="rgb(243,108,33)"/><text x="107.00" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (428 samples, 0.06%)</title><rect x="104" y="517" width="1" height="15" fill="rgb(208,173,12)"/><text x="107.00" y="527.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (1,980 samples, 0.27%)</title><rect x="118" y="565" width="3" height="15" fill="rgb(220,132,25)"/><text x="121.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (1,876 samples, 0.25%)</title><rect x="121" y="565" width="3" height="15" fill="rgb(219,70,32)"/><text x="124.00" y="575.50"></text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;::execute (18,202 samples, 2.44%)</title><rect x="105" y="597" width="28" height="15" fill="rgb(252,162,47)"/><text x="108.00" y="607.50">&lt;..</text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::act (10,017 samples, 1.34%)</title><rect x="118" y="581" width="15" height="15" fill="rgb(226,209,18)"/><text x="121.00" y="591.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (6,161 samples, 0.83%)</title><rect x="124" y="565" width="9" height="15" fill="rgb(249,72,2)"/><text x="127.00" y="575.50"></text></g><g><title>__GI___pthread_mutex_lock (2,390 samples, 0.32%)</title><rect x="133" y="597" width="4" height="15" fill="rgb(240,44,31)"/><text x="136.00" y="607.50"></text></g><g><title>core::ptr::real_drop_in_place (1,877 samples, 0.25%)</title><rect x="140" y="517" width="3" height="15" fill="rgb(236,149,40)"/><text x="143.00" y="527.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,877 samples, 0.25%)</title><rect x="140" y="501" width="3" height="15" fill="rgb(210,176,45)"/><text x="143.00" y="511.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_unlock (1,877 samples, 0.25%)</title><rect x="140" y="485" width="3" height="15" fill="rgb(243,31,47)"/><text x="143.00" y="495.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1,877 samples, 0.25%)</title><rect x="140" y="469" width="3" height="15" fill="rgb(233,186,9)"/><text x="143.00" y="479.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request (5,328 samples, 0.71%)</title><rect x="137" y="597" width="9" height="15" fill="rgb(254,154,37)"/><text x="140.00" y="607.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_loop (5,328 samples, 0.71%)</title><rect x="137" y="581" width="9" height="15" fill="rgb(241,30,5)"/><text x="140.00" y="591.50"></text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_internal (5,328 samples, 0.71%)</title><rect x="137" y="565" width="9" height="15" fill="rgb(250,87,36)"/><text x="140.00" y="575.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (3,784 samples, 0.51%)</title><rect x="140" y="549" width="6" height="15" fill="rgb(225,52,40)"/><text x="143.00" y="559.50"></text></g><g><title>std::sync::mpsc::sync::Packet&lt;T&gt;::try_recv (3,784 samples, 0.51%)</title><rect x="140" y="533" width="6" height="15" fill="rgb(246,86,15)"/><text x="143.00" y="543.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,907 samples, 0.26%)</title><rect x="143" y="517" width="3" height="15" fill="rgb(248,163,10)"/><text x="146.00" y="527.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_lock (1,907 samples, 0.26%)</title><rect x="143" y="501" width="3" height="15" fill="rgb(219,118,0)"/><text x="146.00" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1,907 samples, 0.26%)</title><rect x="143" y="485" width="3" height="15" fill="rgb(212,88,2)"/><text x="146.00" y="495.50"></text></g><g><title>i40e_recv_pkts_vec (7,738 samples, 1.04%)</title><rect x="146" y="597" width="12" height="15" fill="rgb(251,11,15)"/><text x="149.00" y="607.50"></text></g><g><title>[unknown] (92,970 samples, 12.45%)</title><rect x="20" y="613" width="147" height="15" fill="rgb(223,58,36)"/><text x="23.00" y="623.50">[unknown]</text></g><g><title>recv_pkts (5,765 samples, 0.77%)</title><rect x="158" y="597" width="9" height="15" fill="rgb(242,194,0)"/><text x="161.00" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (3,399 samples, 0.46%)</title><rect x="196" y="293" width="5" height="15" fill="rgb(228,38,2)"/><text x="199.00" y="303.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1,925 samples, 0.26%)</title><rect x="198" y="277" width="3" height="15" fill="rgb(226,124,12)"/><text x="201.00" y="287.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (1,925 samples, 0.26%)</title><rect x="198" y="261" width="3" height="15" fill="rgb(236,195,39)"/><text x="201.00" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1,906 samples, 0.26%)</title><rect x="207" y="213" width="3" height="15" fill="rgb(219,173,40)"/><text x="210.00" y="223.50"></text></g><g><title>_$LT$e2d2..operators..receive_batch..ReceiveBatch$LT$T$GT$$u20$as$u20$e2d2..operators..act..Act$GT$::act::_$u7b$$u7b$closure$u7d$$u7d$::h04d16e535da9b6c3 (1,906 samples, 0.26%)</title><rect x="207" y="197" width="3" height="15" fill="rgb(251,127,27)"/><text x="210.00" y="207.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (1,885 samples, 0.25%)</title><rect x="210" y="197" width="3" height="15" fill="rgb(232,187,54)"/><text x="213.00" y="207.50"></text></g><g><title>_recv_raw_pkts_vec (5,666 samples, 0.76%)</title><rect x="240" y="85" width="9" height="15" fill="rgb(221,100,27)"/><text x="243.00" y="95.50"></text></g><g><title>i40e_recv_pkts_vec (7,573 samples, 1.01%)</title><rect x="237" y="101" width="12" height="15" fill="rgb(238,135,44)"/><text x="240.00" y="111.50"></text></g><g><title>e2d2::interface::port::&lt;impl e2d2::interface::PacketRx for e2d2::allocators::cache_aligned::CacheAligned&lt;T&gt;&gt;::recv (20,864 samples, 2.80%)</title><rect x="216" y="181" width="33" height="15" fill="rgb(248,135,42)"/><text x="219.00" y="191.50">e2..</text></g><g><title>&lt;e2d2::interface::port::phy_port::PortQueue as e2d2::interface::PacketRx&gt;::recv (20,864 samples, 2.80%)</title><rect x="216" y="165" width="33" height="15" fill="rgb(218,145,41)"/><text x="219.00" y="175.50">&lt;e..</text></g><g><title>e2d2::interface::port::phy_port::PortQueue::recv_queue (20,864 samples, 2.80%)</title><rect x="216" y="149" width="33" height="15" fill="rgb(252,108,5)"/><text x="219.00" y="159.50">e2..</text></g><g><title>recv_pkts (20,860 samples, 2.79%)</title><rect x="216" y="133" width="33" height="15" fill="rgb(228,6,23)"/><text x="219.00" y="143.50">re..</text></g><g><title>rte_eth_rx_burst (18,981 samples, 2.54%)</title><rect x="219" y="117" width="30" height="15" fill="rgb(230,79,50)"/><text x="222.00" y="127.50">rt..</text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (28,474 samples, 3.81%)</title><rect x="204" y="277" width="45" height="15" fill="rgb(205,168,46)"/><text x="207.00" y="287.50">&lt;e2d..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (28,474 samples, 3.81%)</title><rect x="204" y="261" width="45" height="15" fill="rgb(252,23,25)"/><text x="207.00" y="271.50">&lt;e2d..</text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (26,599 samples, 3.56%)</title><rect x="207" y="245" width="42" height="15" fill="rgb(215,73,37)"/><text x="210.00" y="255.50">&lt;e2..</text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (26,599 samples, 3.56%)</title><rect x="207" y="229" width="42" height="15" fill="rgb(213,97,11)"/><text x="210.00" y="239.50">&lt;e2..</text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (24,693 samples, 3.31%)</title><rect x="210" y="213" width="39" height="15" fill="rgb(241,45,42)"/><text x="213.00" y="223.50">e2d..</text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (22,808 samples, 3.06%)</title><rect x="213" y="197" width="36" height="15" fill="rgb(248,161,1)"/><text x="216.00" y="207.50">e2d..</text></g><g><title>&lt;e2d2::operators::group_by::GroupByProducer&lt;T,V&gt; as e2d2::scheduler::Executable&gt;::execute (30,405 samples, 4.07%)</title><rect x="201" y="293" width="48" height="15" fill="rgb(230,202,33)"/><text x="204.00" y="303.50">&lt;e2d..</text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (8,339 samples, 1.12%)</title><rect x="276" y="229" width="14" height="15" fill="rgb(208,162,27)"/><text x="279.00" y="239.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (6,480 samples, 0.87%)</title><rect x="279" y="213" width="11" height="15" fill="rgb(247,195,43)"/><text x="282.00" y="223.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (842 samples, 0.11%)</title><rect x="293" y="133" width="2" height="15" fill="rgb(250,60,50)"/><text x="296.00" y="143.50"></text></g><g><title>_$LT$e2d2..operators..receive_batch..ReceiveBatch$LT$T$GT$$u20$as$u20$e2d2..operators..act..Act$GT$::act::_$u7b$$u7b$closure$u7d$$u7d$::h8d1298e4bf1f28cf (842 samples, 0.11%)</title><rect x="293" y="117" width="2" height="15" fill="rgb(208,135,51)"/><text x="296.00" y="127.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (1,185 samples, 0.16%)</title><rect x="295" y="117" width="2" height="15" fill="rgb(237,214,4)"/><text x="298.00" y="127.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::le (600 samples, 0.08%)</title><rect x="298" y="37" width="1" height="15" fill="rgb(208,83,51)"/><text x="301.00" y="47.50"></text></g><g><title>core::cmp::min (890 samples, 0.12%)</title><rect x="298" y="69" width="1" height="15" fill="rgb(240,215,35)"/><text x="301.00" y="79.50"></text></g><g><title>core::cmp::Ord::min (890 samples, 0.12%)</title><rect x="298" y="53" width="1" height="15" fill="rgb(228,36,52)"/><text x="301.00" y="63.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (304 samples, 0.04%)</title><rect x="299" y="69" width="0" height="15" fill="rgb(215,173,39)"/><text x="302.00" y="79.50"></text></g><g><title>&lt;e2d2::queues::mpsc_mbuf_queue::MpscConsumer as e2d2::interface::PacketRx&gt;::recv (1,627 samples, 0.22%)</title><rect x="297" y="101" width="3" height="15" fill="rgb(242,50,31)"/><text x="300.00" y="111.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::dequeue (1,627 samples, 0.22%)</title><rect x="297" y="85" width="3" height="15" fill="rgb(247,19,21)"/><text x="300.00" y="95.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (105 samples, 0.01%)</title><rect x="299" y="69" width="1" height="15" fill="rgb(242,188,54)"/><text x="302.00" y="79.50"></text></g><g><title>core::sync::atomic::atomic_load (105 samples, 0.01%)</title><rect x="299" y="53" width="1" height="15" fill="rgb(226,146,5)"/><text x="302.00" y="63.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::add_to_batch (1,040 samples, 0.14%)</title><rect x="300" y="101" width="1" height="15" fill="rgb(242,220,17)"/><text x="303.00" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (1,040 samples, 0.14%)</title><rect x="300" y="85" width="1" height="15" fill="rgb(218,64,35)"/><text x="303.00" y="95.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (1,271 samples, 0.17%)</title><rect x="301" y="101" width="2" height="15" fill="rgb(215,34,9)"/><text x="304.00" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1,271 samples, 0.17%)</title><rect x="301" y="85" width="2" height="15" fill="rgb(228,61,48)"/><text x="304.00" y="95.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (887 samples, 0.12%)</title><rect x="302" y="69" width="1" height="15" fill="rgb(225,3,8)"/><text x="305.00" y="79.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (6,246 samples, 0.84%)</title><rect x="293" y="149" width="10" height="15" fill="rgb(237,192,34)"/><text x="296.00" y="159.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (5,404 samples, 0.72%)</title><rect x="295" y="133" width="8" height="15" fill="rgb(209,120,23)"/><text x="298.00" y="143.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (4,061 samples, 0.54%)</title><rect x="297" y="117" width="6" height="15" fill="rgb(209,32,53)"/><text x="300.00" y="127.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (7,119 samples, 0.95%)</title><rect x="292" y="165" width="11" height="15" fill="rgb(248,87,50)"/><text x="295.00" y="175.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (11,188 samples, 1.50%)</title><rect x="291" y="197" width="18" height="15" fill="rgb(242,155,50)"/><text x="294.00" y="207.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::act (11,188 samples, 1.50%)</title><rect x="291" y="181" width="18" height="15" fill="rgb(231,147,4)"/><text x="294.00" y="191.50"></text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (3,319 samples, 0.44%)</title><rect x="303" y="165" width="6" height="15" fill="rgb(221,113,25)"/><text x="306.00" y="175.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (3,319 samples, 0.44%)</title><rect x="303" y="149" width="6" height="15" fill="rgb(206,101,25)"/><text x="306.00" y="159.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (3,319 samples, 0.44%)</title><rect x="303" y="133" width="6" height="15" fill="rgb(251,167,25)"/><text x="306.00" y="143.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (3,319 samples, 0.44%)</title><rect x="303" y="117" width="6" height="15" fill="rgb(218,94,35)"/><text x="306.00" y="127.50"></text></g><g><title>e2d2::operators::iterator::PayloadEnumerator&lt;T,M&gt;::next (932 samples, 0.12%)</title><rect x="309" y="197" width="1" height="15" fill="rgb(247,193,8)"/><text x="312.00" y="207.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (932 samples, 0.12%)</title><rect x="309" y="181" width="1" height="15" fill="rgb(231,177,47)"/><text x="312.00" y="191.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (932 samples, 0.12%)</title><rect x="309" y="165" width="1" height="15" fill="rgb(243,190,28)"/><text x="312.00" y="175.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (932 samples, 0.12%)</title><rect x="309" y="149" width="1" height="15" fill="rgb(234,211,35)"/><text x="312.00" y="159.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::iterator::BatchIterator&gt;::next_payload (932 samples, 0.12%)</title><rect x="309" y="133" width="1" height="15" fill="rgb(207,15,6)"/><text x="312.00" y="143.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::iterator::BatchIterator&gt;::next_payload (932 samples, 0.12%)</title><rect x="309" y="117" width="1" height="15" fill="rgb(233,70,19)"/><text x="312.00" y="127.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (12,910 samples, 1.73%)</title><rect x="290" y="229" width="20" height="15" fill="rgb(210,116,29)"/><text x="293.00" y="239.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (12,910 samples, 1.73%)</title><rect x="290" y="213" width="20" height="15" fill="rgb(208,195,37)"/><text x="293.00" y="223.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (36,373 samples, 4.87%)</title><rect x="253" y="245" width="57" height="15" fill="rgb(230,215,34)"/><text x="256.00" y="255.50">&lt;e2d2:..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (817 samples, 0.11%)</title><rect x="312" y="213" width="1" height="15" fill="rgb(228,182,7)"/><text x="315.00" y="223.50"></text></g><g><title>_$LT$e2d2..operators..receive_batch..ReceiveBatch$LT$T$GT$$u20$as$u20$e2d2..operators..act..Act$GT$::act::_$u7b$$u7b$closure$u7d$$u7d$::h8d1298e4bf1f28cf (817 samples, 0.11%)</title><rect x="312" y="197" width="1" height="15" fill="rgb(234,128,27)"/><text x="315.00" y="207.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (3,857 samples, 0.52%)</title><rect x="313" y="197" width="6" height="15" fill="rgb(214,227,27)"/><text x="316.00" y="207.50"></text></g><g><title>core::cmp::min (779 samples, 0.10%)</title><rect x="320" y="149" width="1" height="15" fill="rgb(226,79,54)"/><text x="323.00" y="159.50"></text></g><g><title>core::cmp::Ord::min (779 samples, 0.10%)</title><rect x="320" y="133" width="1" height="15" fill="rgb(214,158,18)"/><text x="323.00" y="143.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::le (489 samples, 0.07%)</title><rect x="321" y="117" width="0" height="15" fill="rgb(230,114,14)"/><text x="324.00" y="127.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (524 samples, 0.07%)</title><rect x="321" y="149" width="1" height="15" fill="rgb(247,51,15)"/><text x="324.00" y="159.50"></text></g><g><title>&lt;e2d2::queues::mpsc_mbuf_queue::MpscConsumer as e2d2::interface::PacketRx&gt;::recv (1,497 samples, 0.20%)</title><rect x="320" y="181" width="2" height="15" fill="rgb(215,64,24)"/><text x="323.00" y="191.50"></text></g><g><title>e2d2::queues::mpsc_mbuf_queue::MpscQueue::dequeue (1,497 samples, 0.20%)</title><rect x="320" y="165" width="2" height="15" fill="rgb(222,153,28)"/><text x="323.00" y="175.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::add_to_batch (621 samples, 0.08%)</title><rect x="322" y="181" width="1" height="15" fill="rgb(241,1,23)"/><text x="325.00" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (621 samples, 0.08%)</title><rect x="322" y="165" width="1" height="15" fill="rgb(254,132,54)"/><text x="325.00" y="175.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::act (9,505 samples, 1.27%)</title><rect x="312" y="229" width="15" height="15" fill="rgb(235,38,1)"/><text x="315.00" y="239.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv (8,688 samples, 1.16%)</title><rect x="313" y="213" width="14" height="15" fill="rgb(219,129,32)"/><text x="316.00" y="223.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::recv_internal (4,633 samples, 0.62%)</title><rect x="319" y="197" width="8" height="15" fill="rgb(215,71,53)"/><text x="322.00" y="207.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::packet_ptr (2,070 samples, 0.28%)</title><rect x="323" y="181" width="4" height="15" fill="rgb(252,191,53)"/><text x="326.00" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (2,070 samples, 0.28%)</title><rect x="323" y="165" width="4" height="15" fill="rgb(212,37,16)"/><text x="326.00" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,193 samples, 0.16%)</title><rect x="325" y="149" width="2" height="15" fill="rgb(239,139,19)"/><text x="328.00" y="159.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::act (10,467 samples, 1.40%)</title><rect x="310" y="245" width="17" height="15" fill="rgb(249,209,42)"/><text x="313.00" y="255.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (46,843 samples, 6.28%)</title><rect x="253" y="261" width="74" height="15" fill="rgb(207,223,17)"/><text x="256.00" y="271.50">&lt;e2d2::o..</text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1,940 samples, 0.26%)</title><rect x="336" y="197" width="3" height="15" fill="rgb(217,11,3)"/><text x="339.00" y="207.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (1,940 samples, 0.26%)</title><rect x="336" y="181" width="3" height="15" fill="rgb(212,99,10)"/><text x="339.00" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1,946 samples, 0.26%)</title><rect x="336" y="213" width="3" height="15" fill="rgb(217,42,19)"/><text x="339.00" y="223.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (2,098 samples, 0.28%)</title><rect x="342" y="181" width="3" height="15" fill="rgb(236,76,22)"/><text x="345.00" y="191.50"></text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (2,098 samples, 0.28%)</title><rect x="342" y="165" width="3" height="15" fill="rgb(221,55,5)"/><text x="345.00" y="175.50"></text></g><g><title>&lt;e2d2::operators::parsed_batch::ParsedBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::done (482 samples, 0.06%)</title><rect x="344" y="149" width="1" height="15" fill="rgb(234,3,4)"/><text x="347.00" y="159.50"></text></g><g><title>&lt;e2d2::operators::add_metadata::AddMetadataBatch&lt;M,V&gt; as e2d2::operators::act::Act&gt;::done (482 samples, 0.06%)</title><rect x="344" y="133" width="1" height="15" fill="rgb(239,20,20)"/><text x="347.00" y="143.50"></text></g><g><title>&lt;e2d2::operators::restore_header::RestoreHeader&lt;T,M,V&gt; as e2d2::operators::act::Act&gt;::done (407 samples, 0.05%)</title><rect x="344" y="117" width="1" height="15" fill="rgb(227,183,45)"/><text x="347.00" y="127.50"></text></g><g><title>&lt;e2d2::operators::receive_batch::ReceiveBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (407 samples, 0.05%)</title><rect x="344" y="101" width="1" height="15" fill="rgb(240,37,41)"/><text x="347.00" y="111.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::deallocate_batch (407 samples, 0.05%)</title><rect x="344" y="85" width="1" height="15" fill="rgb(233,129,22)"/><text x="347.00" y="95.50"></text></g><g><title>e2d2::operators::packet_batch::PacketBatch::free_packet_batch (407 samples, 0.05%)</title><rect x="344" y="69" width="1" height="15" fill="rgb(242,221,23)"/><text x="347.00" y="79.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (2,103 samples, 0.28%)</title><rect x="342" y="197" width="3" height="15" fill="rgb(209,1,45)"/><text x="345.00" y="207.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (4,032 samples, 0.54%)</title><rect x="339" y="213" width="6" height="15" fill="rgb(226,222,4)"/><text x="342.00" y="223.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::done (9,713 samples, 1.30%)</title><rect x="330" y="229" width="15" height="15" fill="rgb(227,187,48)"/><text x="333.00" y="239.50"></text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::done (9,714 samples, 1.30%)</title><rect x="330" y="245" width="15" height="15" fill="rgb(246,219,37)"/><text x="333.00" y="255.50"></text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::done (11,680 samples, 1.56%)</title><rect x="327" y="261" width="18" height="15" fill="rgb(220,46,9)"/><text x="330.00" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (186 samples, 0.02%)</title><rect x="350" y="197" width="0" height="15" fill="rgb(210,16,27)"/><text x="353.00" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (145 samples, 0.02%)</title><rect x="350" y="181" width="0" height="15" fill="rgb(207,154,33)"/><text x="353.00" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (145 samples, 0.02%)</title><rect x="350" y="165" width="0" height="15" fill="rgb(222,154,53)"/><text x="353.00" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1,556 samples, 0.21%)</title><rect x="350" y="213" width="2" height="15" fill="rgb(236,13,4)"/><text x="353.00" y="223.50"></text></g><g><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1,370 samples, 0.18%)</title><rect x="350" y="197" width="2" height="15" fill="rgb(219,206,10)"/><text x="353.00" y="207.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (1,370 samples, 0.18%)</title><rect x="350" y="181" width="2" height="15" fill="rgb(248,179,28)"/><text x="353.00" y="191.50"></text></g><g><title>&lt;e2d2::operators::merge_batch::MergeBatch&lt;T&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (20,189 samples, 2.70%)</title><rect x="347" y="229" width="32" height="15" fill="rgb(218,209,54)"/><text x="350.00" y="239.50">&lt;e..</text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (16,534 samples, 2.21%)</title><rect x="352" y="213" width="27" height="15" fill="rgb(246,160,39)"/><text x="355.00" y="223.50">&lt;..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::get_packet_batch (20,316 samples, 2.72%)</title><rect x="346" y="245" width="33" height="15" fill="rgb(231,185,41)"/><text x="349.00" y="255.50">&lt;e..</text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::get_packet_batch (21,206 samples, 2.84%)</title><rect x="345" y="261" width="34" height="15" fill="rgb(224,228,8)"/><text x="348.00" y="271.50">&lt;e..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1,883 samples, 0.25%)</title><rect x="384" y="245" width="3" height="15" fill="rgb(247,173,37)"/><text x="387.00" y="255.50"></text></g><g><title>&lt;e2d2::operators::packet_batch::PacketBatch as e2d2::operators::act::Act&gt;::send_q (5,063 samples, 0.68%)</title><rect x="379" y="261" width="8" height="15" fill="rgb(253,146,41)"/><text x="382.00" y="271.50"></text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::act (84,793 samples, 11.36%)</title><rect x="253" y="277" width="134" height="15" fill="rgb(235,69,38)"/><text x="256.00" y="287.50">&lt;e2d2::operators..</text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;::execute (86,722 samples, 11.62%)</title><rect x="249" y="293" width="138" height="15" fill="rgb(248,185,21)"/><text x="252.00" y="303.50">&lt;e2d2::operators:..</text></g><g><title>e2d2::utils::asm::rdtsc_unsafe (29,573 samples, 3.96%)</title><rect x="387" y="293" width="46" height="15" fill="rgb(229,120,41)"/><text x="390.00" y="303.50">e2d2..</text></g><g><title>__pthread_mutex_unlock_usercnt (45,825 samples, 6.14%)</title><rect x="451" y="181" width="72" height="15" fill="rgb(219,170,33)"/><text x="454.00" y="191.50">__pthrea..</text></g><g><title>core::ptr::real_drop_in_place (49,623 samples, 6.65%)</title><rect x="445" y="261" width="78" height="15" fill="rgb(218,195,54)"/><text x="448.00" y="271.50">core::ptr..</text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (49,623 samples, 6.65%)</title><rect x="445" y="245" width="78" height="15" fill="rgb(219,129,14)"/><text x="448.00" y="255.50">&lt;std::syn..</text></g><g><title>std::sys_common::mutex::Mutex::raw_unlock (49,623 samples, 6.65%)</title><rect x="445" y="229" width="78" height="15" fill="rgb(239,89,51)"/><text x="448.00" y="239.50">std::sys_..</text></g><g><title>std::sys::unix::mutex::Mutex::unlock (49,623 samples, 6.65%)</title><rect x="445" y="213" width="78" height="15" fill="rgb(229,152,17)"/><text x="448.00" y="223.50">std::sys:..</text></g><g><title>__GI___pthread_mutex_unlock (49,622 samples, 6.65%)</title><rect x="445" y="197" width="78" height="15" fill="rgb(253,77,54)"/><text x="448.00" y="207.50">__GI___pt..</text></g><g><title>std::sys_common::poison::Flag::get (1,823 samples, 0.24%)</title><rect x="523" y="213" width="3" height="15" fill="rgb(233,144,7)"/><text x="526.00" y="223.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1,823 samples, 0.24%)</title><rect x="523" y="197" width="3" height="15" fill="rgb(240,198,34)"/><text x="526.00" y="207.50"></text></g><g><title>core::sync::atomic::atomic_load (1,823 samples, 0.24%)</title><rect x="523" y="181" width="3" height="15" fill="rgb(205,67,10)"/><text x="526.00" y="191.50"></text></g><g><title>std::panicking::update_panic_count (1,840 samples, 0.25%)</title><rect x="526" y="181" width="3" height="15" fill="rgb(240,147,4)"/><text x="529.00" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,840 samples, 0.25%)</title><rect x="526" y="165" width="3" height="15" fill="rgb(218,145,36)"/><text x="529.00" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,840 samples, 0.25%)</title><rect x="526" y="149" width="3" height="15" fill="rgb(228,168,5)"/><text x="529.00" y="159.50"></text></g><g><title>std::panicking::update_panic_count::_$u7b$$u7b$closure$u7d$$u7d$::hdd6811239ad811d8 (1,839 samples, 0.25%)</title><rect x="526" y="133" width="3" height="15" fill="rgb(254,219,29)"/><text x="529.00" y="143.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1,839 samples, 0.25%)</title><rect x="526" y="117" width="3" height="15" fill="rgb(229,144,37)"/><text x="529.00" y="127.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (3,664 samples, 0.49%)</title><rect x="523" y="245" width="6" height="15" fill="rgb(210,71,32)"/><text x="526.00" y="255.50"></text></g><g><title>std::sys_common::poison::Flag::borrow (3,664 samples, 0.49%)</title><rect x="523" y="229" width="6" height="15" fill="rgb(228,153,7)"/><text x="526.00" y="239.50"></text></g><g><title>std::thread::panicking (1,841 samples, 0.25%)</title><rect x="526" y="213" width="3" height="15" fill="rgb(229,1,50)"/><text x="529.00" y="223.50"></text></g><g><title>std::panicking::panicking (1,841 samples, 0.25%)</title><rect x="526" y="197" width="3" height="15" fill="rgb(240,96,0)"/><text x="529.00" y="207.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (106,520 samples, 14.27%)</title><rect x="433" y="293" width="169" height="15" fill="rgb(240,211,19)"/><text x="436.00" y="303.50">std::sync::mpsc::Rece..</text></g><g><title>std::sync::mpsc::sync::Packet&lt;T&gt;::try_recv (101,293 samples, 13.57%)</title><rect x="442" y="277" width="160" height="15" fill="rgb(231,224,3)"/><text x="445.00" y="287.50">std::sync::mpsc::syn..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (49,711 samples, 6.66%)</title><rect x="523" y="261" width="79" height="15" fill="rgb(247,119,27)"/><text x="526.00" y="271.50">std::sync..</text></g><g><title>std::sys_common::mutex::Mutex::raw_lock (46,043 samples, 6.17%)</title><rect x="529" y="245" width="73" height="15" fill="rgb(253,2,29)"/><text x="532.00" y="255.50">std::sys..</text></g><g><title>std::sys::unix::mutex::Mutex::lock (46,043 samples, 6.17%)</title><rect x="529" y="229" width="73" height="15" fill="rgb(234,183,40)"/><text x="532.00" y="239.50">std::sys..</text></g><g><title>__GI___pthread_mutex_lock (46,043 samples, 6.17%)</title><rect x="529" y="213" width="73" height="15" fill="rgb(248,29,21)"/><text x="532.00" y="223.50">__GI___p..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_internal (271,296 samples, 36.34%)</title><rect x="173" y="309" width="429" height="15" fill="rgb(249,28,13)"/><text x="176.00" y="319.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler..</text></g><g><title>sched-2 (371,887 samples, 49.82%)</title><rect x="14" y="629" width="588" height="15" fill="rgb(228,171,36)"/><text x="17.00" y="639.50">sched-2</text></g><g><title>__GI___clone (275,036 samples, 36.85%)</title><rect x="167" y="613" width="435" height="15" fill="rgb(211,113,31)"/><text x="170.00" y="623.50">__GI___clone</text></g><g><title>start_thread (275,036 samples, 36.85%)</title><rect x="167" y="597" width="435" height="15" fill="rgb(229,113,2)"/><text x="170.00" y="607.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (275,036 samples, 36.85%)</title><rect x="167" y="581" width="435" height="15" fill="rgb(219,81,34)"/><text x="170.00" y="591.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys_common::thread::start_thread (275,036 samples, 36.85%)</title><rect x="167" y="565" width="435" height="15" fill="rgb(212,93,30)"/><text x="170.00" y="575.50">std::sys_common::thread::start_thread</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (275,036 samples, 36.85%)</title><rect x="167" y="549" width="435" height="15" fill="rgb(206,213,6)"/><text x="170.00" y="559.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::c..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (275,036 samples, 36.85%)</title><rect x="167" y="533" width="435" height="15" fill="rgb(222,184,0)"/><text x="170.00" y="543.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::c..</text></g><g><title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h85f59d60f147d050 (275,036 samples, 36.85%)</title><rect x="167" y="517" width="435" height="15" fill="rgb(208,136,7)"/><text x="170.00" y="527.50">core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim..</text></g><g><title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::hdf1901ae8223da03 (275,036 samples, 36.85%)</title><rect x="167" y="501" width="435" height="15" fill="rgb(247,97,39)"/><text x="170.00" y="511.50">std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u..</text></g><g><title>std::panic::catch_unwind (275,036 samples, 36.85%)</title><rect x="167" y="485" width="435" height="15" fill="rgb(237,160,3)"/><text x="170.00" y="495.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (275,036 samples, 36.85%)</title><rect x="167" y="469" width="435" height="15" fill="rgb(229,229,54)"/><text x="170.00" y="479.50">std::panicking::try</text></g><g><title>__rust_maybe_catch_panic (275,036 samples, 36.85%)</title><rect x="167" y="453" width="435" height="15" fill="rgb(211,177,37)"/><text x="170.00" y="463.50">__rust_maybe_catch_panic</text></g><g><title>std::panicking::try::do_call (275,036 samples, 36.85%)</title><rect x="167" y="437" width="435" height="15" fill="rgb(244,186,4)"/><text x="170.00" y="447.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (275,036 samples, 36.85%)</title><rect x="167" y="421" width="435" height="15" fill="rgb(237,92,0)"/><text x="170.00" y="431.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::Fn..</text></g><g><title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h4bd6a348999fe437 (275,036 samples, 36.85%)</title><rect x="167" y="405" width="435" height="15" fill="rgb(240,29,0)"/><text x="170.00" y="415.50">std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (275,036 samples, 36.85%)</title><rect x="167" y="389" width="435" height="15" fill="rgb(227,186,42)"/><text x="170.00" y="399.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>e2d2::scheduler::context::NetBricksContext::start_scheduler::_$u7b$$u7b$closure$u7d$$u7d$::h008d40440c8a9600 (275,036 samples, 36.85%)</title><rect x="167" y="373" width="435" height="15" fill="rgb(245,181,9)"/><text x="170.00" y="383.50">e2d2::scheduler::context::NetBricksContext::start_scheduler..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_requests (275,036 samples, 36.85%)</title><rect x="167" y="357" width="435" height="15" fill="rgb(241,177,35)"/><text x="170.00" y="367.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler:..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request (275,036 samples, 36.85%)</title><rect x="167" y="341" width="435" height="15" fill="rgb(226,90,34)"/><text x="170.00" y="351.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler:..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_loop (275,036 samples, 36.85%)</title><rect x="167" y="325" width="435" height="15" fill="rgb(248,222,22)"/><text x="170.00" y="335.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (123,760 samples, 16.58%)</title><rect x="994" y="117" width="195" height="15" fill="rgb(246,176,21)"/><text x="997.00" y="127.50">&lt;alloc::vec::Vec&lt;T&gt; as co..</text></g><g><title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (123,760 samples, 16.58%)</title><rect x="994" y="101" width="195" height="15" fill="rgb(247,104,17)"/><text x="997.00" y="111.50">core::slice::&lt;impl core::..</text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (123,760 samples, 16.58%)</title><rect x="994" y="85" width="195" height="15" fill="rgb(222,171,18)"/><text x="997.00" y="95.50">&lt;usize as core::slice::Sl..</text></g><g><title>e2d2::state::reordered_buffer::reordered_buffer::ReorderedBuffer::out_of_order_insert (371,727 samples, 49.80%)</title><rect x="602" y="165" width="587" height="15" fill="rgb(222,87,48)"/><text x="605.00" y="175.50">e2d2::state::reordered_buffer::reordered_buffer::ReorderedBuffer::out_of_order_i..</text></g><g><title>e2d2::state::reordered_buffer::reordered_buffer::SegmentList::insert_segment (371,727 samples, 49.80%)</title><rect x="602" y="149" width="587" height="15" fill="rgb(222,166,49)"/><text x="605.00" y="159.50">e2d2::state::reordered_buffer::reordered_buffer::SegmentList::insert_segment</text></g><g><title>e2d2::state::reordered_buffer::reordered_buffer::SegmentList::merge_at_idx (371,727 samples, 49.80%)</title><rect x="602" y="133" width="587" height="15" fill="rgb(238,1,48)"/><text x="605.00" y="143.50">e2d2::state::reordered_buffer::reordered_buffer::SegmentList::merge_at_idx</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut (371,776 samples, 49.81%)</title><rect x="602" y="197" width="587" height="15" fill="rgb(240,52,44)"/><text x="605.00" y="207.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnMut&lt;A&gt;&gt;::call_mut</text></g><g><title>pvn_tls::nf::lib::validator::_$u7b$$u7b$closure$u7d$$u7d$::h0de64372acadfb90 (371,776 samples, 49.81%)</title><rect x="602" y="181" width="587" height="15" fill="rgb(244,2,38)"/><text x="605.00" y="191.50">pvn_tls::nf::lib::validator::_$u7b$$u7b$closure$u7d$$u7d$::h0de64372acadfb90</text></g><g><title>std::panic::catch_unwind (371,786 samples, 49.81%)</title><rect x="602" y="485" width="587" height="15" fill="rgb(219,171,13)"/><text x="605.00" y="495.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (371,786 samples, 49.81%)</title><rect x="602" y="469" width="587" height="15" fill="rgb(248,80,4)"/><text x="605.00" y="479.50">std::panicking::try</text></g><g><title>__rust_maybe_catch_panic (371,786 samples, 49.81%)</title><rect x="602" y="453" width="587" height="15" fill="rgb(207,195,30)"/><text x="605.00" y="463.50">__rust_maybe_catch_panic</text></g><g><title>std::panicking::try::do_call (371,786 samples, 49.81%)</title><rect x="602" y="437" width="587" height="15" fill="rgb(222,27,3)"/><text x="605.00" y="447.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (371,786 samples, 49.81%)</title><rect x="602" y="421" width="587" height="15" fill="rgb(252,151,24)"/><text x="605.00" y="431.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;</text></g><g><title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h4bd6a348999fe437 (371,786 samples, 49.81%)</title><rect x="602" y="405" width="587" height="15" fill="rgb(205,66,37)"/><text x="605.00" y="415.50">std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (371,786 samples, 49.81%)</title><rect x="602" y="389" width="587" height="15" fill="rgb(238,167,5)"/><text x="605.00" y="399.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>e2d2::scheduler::context::NetBricksContext::start_scheduler::_$u7b$$u7b$closure$u7d$$u7d$::h008d40440c8a9600 (371,786 samples, 49.81%)</title><rect x="602" y="373" width="587" height="15" fill="rgb(231,193,10)"/><text x="605.00" y="383.50">e2d2::scheduler::context::NetBricksContext::start_scheduler::_$u7b$$u7b$closure$..</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_requests (371,778 samples, 49.81%)</title><rect x="602" y="357" width="587" height="15" fill="rgb(218,2,25)"/><text x="605.00" y="367.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_requests</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request (371,778 samples, 49.81%)</title><rect x="602" y="341" width="587" height="15" fill="rgb(215,15,49)"/><text x="605.00" y="351.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::handle_request</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_loop (371,778 samples, 49.81%)</title><rect x="602" y="325" width="587" height="15" fill="rgb(225,148,26)"/><text x="605.00" y="335.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_loop</text></g><g><title>e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_internal (371,778 samples, 49.81%)</title><rect x="602" y="309" width="587" height="15" fill="rgb(247,102,26)"/><text x="605.00" y="319.50">e2d2::scheduler::standalone_scheduler::StandaloneScheduler::execute_internal</text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;::execute (371,777 samples, 49.81%)</title><rect x="602" y="293" width="587" height="15" fill="rgb(213,93,31)"/><text x="605.00" y="303.50">&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::scheduler::Executable&gt;:..</text></g><g><title>&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::act (371,777 samples, 49.81%)</title><rect x="602" y="277" width="587" height="15" fill="rgb(237,174,5)"/><text x="605.00" y="287.50">&lt;e2d2::operators::send_batch::SendBatch&lt;Port,V&gt; as e2d2::operators::act::Act&gt;::a..</text></g><g><title>&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::Act&gt;::act (371,777 samples, 49.81%)</title><rect x="602" y="261" width="587" height="15" fill="rgb(233,58,46)"/><text x="605.00" y="271.50">&lt;e2d2::operators::composition_batch::CompositionBatch as e2d2::operators::act::A..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (371,777 samples, 49.81%)</title><rect x="602" y="245" width="587" height="15" fill="rgb(217,162,30)"/><text x="605.00" y="255.50">&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act..</text></g><g><title>&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act&gt;::act (371,777 samples, 49.81%)</title><rect x="602" y="229" width="587" height="15" fill="rgb(205,16,43)"/><text x="605.00" y="239.50">&lt;e2d2::operators::reset_parse::ResetParsingBatch&lt;V&gt; as e2d2::operators::act::Act..</text></g><g><title>&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::Act&gt;::act (371,777 samples, 49.81%)</title><rect x="602" y="213" width="587" height="15" fill="rgb(227,220,45)"/><text x="605.00" y="223.50">&lt;e2d2::operators::transform_batch::TransformBatch&lt;T,V&gt; as e2d2::operators::act::..</text></g><g><title>sched-3 (371,808 samples, 49.81%)</title><rect x="602" y="629" width="587" height="15" fill="rgb(252,154,36)"/><text x="605.00" y="639.50">sched-3</text></g><g><title>__GI___clone (371,787 samples, 49.81%)</title><rect x="602" y="613" width="587" height="15" fill="rgb(224,162,16)"/><text x="605.00" y="623.50">__GI___clone</text></g><g><title>start_thread (371,787 samples, 49.81%)</title><rect x="602" y="597" width="587" height="15" fill="rgb(205,194,44)"/><text x="605.00" y="607.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (371,787 samples, 49.81%)</title><rect x="602" y="581" width="587" height="15" fill="rgb(221,130,41)"/><text x="605.00" y="591.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys_common::thread::start_thread (371,787 samples, 49.81%)</title><rect x="602" y="565" width="587" height="15" fill="rgb(227,79,3)"/><text x="605.00" y="575.50">std::sys_common::thread::start_thread</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (371,787 samples, 49.81%)</title><rect x="602" y="549" width="587" height="15" fill="rgb(224,120,12)"/><text x="605.00" y="559.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (371,787 samples, 49.81%)</title><rect x="602" y="533" width="587" height="15" fill="rgb(242,184,38)"/><text x="605.00" y="543.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h85f59d60f147d050 (371,787 samples, 49.81%)</title><rect x="602" y="517" width="587" height="15" fill="rgb(220,22,33)"/><text x="605.00" y="527.50">core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h85f59d60..</text></g><g><title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::hdf1901ae8223da03 (371,787 samples, 49.81%)</title><rect x="602" y="501" width="587" height="15" fill="rgb(233,147,9)"/><text x="605.00" y="511.50">std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::hdf1901ae82..</text></g><g><title>all (746,459 samples, 100%)</title><rect x="10" y="645" width="1180" height="15" fill="rgb(240,69,10)"/><text x="13.00" y="655.50"></text></g></g></svg>