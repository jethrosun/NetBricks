Going to start with configuration Configuration: name:  =========== Running TLS Validator ============   mempool size: 2047 core cache: 32 primary core: 0
 Ports:
	Port 0000:01:00.0 RXQ_Count: 1 RX_Queues: [ 2 ] TXQ_Count: 1 TX_Queues: 2 RXD: 128 TXD: 128 Loopback false
	Port 0000:01:00.1 RXQ_Count: 1 RX_Queues: [ 3 ] TXQ_Count: 1 TX_Queues: 3 RXD: 128 TXD: 128 Loopback false
Cores:
	2
	3
	4
	5

EAL: Probing VFIO support...
Running on node 0
Devname: "0000:01:00.0"
EAL: PCI device 0000:01:00.0 on NUMA socket -1
EAL:   Invalid NUMA socket, default to 0
EAL:   probe driver: 8086:1583 net_i40e
Going to try and use port 0
Devname: "0000:01:00.1"
EAL: PCI device 0000:01:00.1 on NUMA socket -1
EAL:   Invalid NUMA socket, default to 0
EAL:   probe driver: 8086:1583 net_i40e
Going to try and use port 1
Running on node 0
Running on node 0
Receiving port f8:f2:1e:2e:9c:51 rxq 0 txq 0
Running on node 0
Running 0 pipelines
Receiving port f8:f2:1e:2e:9c:50 rxq 0 txq 0
Running 1 pipelines
Running 1 pipelines
Running on node 0
Running 0 pipelines
Starting scheduler on 3
Starting scheduler on 4
Starting scheduler on 2
Starting scheduler on 5
0 OVERALL RX 0.00 TX 0.00 CYCLE_PER_DELAY 0 0 0


TCP Headers: tcp src_port 443 dst_port 59071 seq 3900289529 ack 3347003301 data_offset 8 flags | ACK PSH |cwnd 62 csum 10537 urgent 0


Pkt #3900289529 is Vacant

And the flow is: Flow { src_ip: 3338456601, dst_ip: 180932078, src_port: 59071, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 0, dst_ip: 0, src_port: 0, dst_port: 0, proto: 0 }
current flow is a new flow, we should invoke the reassemble function for the previous flow

dumped an empty payload for Flow=Flow { src_ip: 3338456601, dst_ip: 180932078, src_port: 59071, dst_port: 443, proto: 6 }
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped
      3: Packet is not a TLS handshake so not displaying


TCP Headers: tcp src_port 59071 dst_port 443 seq 3347003301 ack 3900289590 data_offset 8 flags | ACK PSH |cwnd 4096 csum 17488 urgent 0


Pkt #3347003301 is Vacant

And the flow is: Flow { src_ip: 180932078, dst_ip: 3338456601, src_port: 443, dst_port: 59071, proto: 6 }
Previous one is: Flow { src_ip: 3338456601, dst_ip: 180932078, src_port: 59071, dst_port: 443, proto: 6 }
current flow is a new flow, we should invoke the reassemble function for the previous flow

dumped an empty payload for Flow=Flow { src_ip: 180932078, dst_ip: 3338456601, src_port: 443, dst_port: 59071, proto: 6 }
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped
      3: Packet is not a TLS handshake so not displaying


TCP Headers: tcp src_port 59295 dst_port 443 seq 1251343127 ack 2582310255 data_offset 8 flags | ACK PSH |cwnd 4138 csum 5638 urgent 0


Pkt #1251343127 is Vacant

And the flow is: Flow { src_ip: 180932078, dst_ip: 3223256437, src_port: 443, dst_port: 59295, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 3338456601, src_port: 443, dst_port: 59071, proto: 6 }
current flow is a new flow, we should invoke the reassemble function for the previous flow

dumped an empty payload for Flow=Flow { src_ip: 180932078, dst_ip: 3223256437, src_port: 443, dst_port: 59295, proto: 6 }
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped

 ************************************************ 
      3: Packet match handshake!
      
Message { typ: Handshake, version: TLSv1_0, payload: Opaque(Payload([1, 0, 1, 252, 3, 3, 124, 247, 156, 215, 73, 59, 228, 146, 127, 124, 189, 62, 163, 56, 189, 26, 201, 140, 200, 245, 69, 214, 60, 60, 53, 24, 16, 16, 7, 110, 221, 108, 32, 10, 229, 112, 220, 191, 46, 140, 141, 118, 110, 215, 191, 87, 251, 61, 12, 26, 243, 248, 214, 28, 19, 43, 166, 184, 243, 241, 114, 29, 112, 187, 91, 0, 40, 192, 44, 192, 43, 192, 36, 192, 35, 192, 10, 192, 9, 204, 169, 192, 48, 192, 47, 192, 40, 192, 39, 192, 20, 192, 19, 204, 168, 0, 157, 0, 156, 0, 61, 0, 60, 0, 53, 0, 47, 1, 0, 1, 139, 255, 1, 0, 1, 0, 0, 0, 0, 19, 0, 17, 0, 0, 14, 97, 112, 105, 46, 103, 105, 116, 104, 117, 98, 46, 99, 111, 109, 0, 23, 0, 0, 0, 13, 0, 20, 0, 18, 4, 3, 8, 4, 4, 1, 5, 3, 8, 5, 5, 1, 8, 6, 6, 1, 2, 1, 0, 5, 0, 5, 1, 0, 0, 0, 0, 51, 116, 0, 0, 0, 18, 0, 0, 0, 16, 0, 48, 0, 46, 2, 104, 50, 5, 104, 50, 45, 49, 54, 5, 104, 50, 45, 49, 53, 5, 104, 50, 45, 49, 52, 8, 115, 112, 100, 121, 47, 51, 46, 49, 6, 115, 112, 100, 121, 47, 51, 8, 104, 116, 116, 112, 47, 49, 46, 49, 0, 11, 0, 2, 1, 0, 0, 10, 0, 10, 0, 8, 0, 29, 0, 23, 0, 24, 0, 25, 0, 21, 0, 246, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])) }

reading size of 517 payload into the flow entry 
Flow { src_ip: 180932078, dst_ip: 3223256437, src_port: 443, dst_port: 59295, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 517
      4: This packet is inserted, quack


TCP Headers: tcp src_port 443 dst_port 59295 seq 2582310255 ack 1251343644 data_offset 8 flags | ACK |cwnd 29 csum 13755 urgent 0


Pkt #2582310255 is Vacant

And the flow is: Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59295, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 3223256437, src_port: 443, dst_port: 59295, proto: 6 }
current flow is a new flow, we should invoke the reassemble function for the previous flow

Occupied, start parsing

TLS packet match handshake!

Message { typ: Handshake, version: TLSv1_0, payload: Opaque(Payload([1, 0, 1, 252, 3, 3, 124, 247, 156, 215, 73, 59, 228, 146, 127, 124, 189, 62, 163, 56, 189, 26, 201, 140, 200, 245, 69, 214, 60, 60, 53, 24, 16, 16, 7, 110, 221, 108, 32, 10, 229, 112, 220, 191, 46, 140, 141, 118, 110, 215, 191, 87, 251, 61, 12, 26, 243, 248, 214, 28, 19, 43, 166, 184, 243, 241, 114, 29, 112, 187, 91, 0, 40, 192, 44, 192, 43, 192, 36, 192, 35, 192, 10, 192, 9, 204, 169, 192, 48, 192, 47, 192, 40, 192, 39, 192, 20, 192, 19, 204, 168, 0, 157, 0, 156, 0, 61, 0, 60, 0, 53, 0, 47, 1, 0, 1, 139, 255, 1, 0, 1, 0, 0, 0, 0, 19, 0, 17, 0, 0, 14, 97, 112, 105, 46, 103, 105, 116, 104, 117, 98, 46, 99, 111, 109, 0, 23, 0, 0, 0, 13, 0, 20, 0, 18, 4, 3, 8, 4, 4, 1, 5, 3, 8, 5, 5, 1, 8, 6, 6, 1, 2, 1, 0, 5, 0, 5, 1, 0, 0, 0, 0, 51, 116, 0, 0, 0, 18, 0, 0, 0, 16, 0, 48, 0, 46, 2, 104, 50, 5, 104, 50, 45, 49, 54, 5, 104, 50, 45, 49, 53, 5, 104, 50, 45, 49, 52, 8, 115, 112, 100, 121, 47, 51, 46, 49, 6, 115, 112, 100, 121, 47, 51, 8, 104, 116, 116, 112, 47, 49, 46, 49, 0, 11, 0, 2, 1, 0, 0, 10, 0, 10, 0, 8, 0, 29, 0, 23, 0, 24, 0, 25, 0, 21, 0, 246, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])) }

  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped

 ************************************************ 
      3: Packet match handshake!
      
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([2, 0, 0, 108, 3, 3, 123, 80, 231, 54, 142, 234, 178, 199, 23, 22, 163, 52, 107, 183, 225, 34, 150, 9, 214, 184, 242, 26, 131, 38, 68, 79, 87, 78, 71, 82, 68, 1, 32, 50, 168, 137, 170, 87, 124, 140, 75, 191, 53, 219, 243, 215, 215, 101, 223, 51, 18, 187, 252, 208, 174, 131, 148, 109, 92, 73, 153, 151, 139, 216, 218, 192, 47, 0, 0, 36, 255, 1, 0, 1, 0, 0, 0, 0, 0, 0, 11, 0, 4, 3, 0, 1, 2, 0, 16, 0, 11, 0, 9, 8, 104, 116, 116, 112, 47, 49, 46, 49, 0, 23, 0, 0])) }

reading size of 1424 payload into the flow entry 
Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59295, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1424
      4: This packet is inserted, quack


TCP Headers: tcp src_port 443 dst_port 59295 seq 2582311679 ack 1251343644 data_offset 8 flags | ACK |cwnd 29 csum 1062 urgent 0

Pkt #2582311679 is Occupied!

And the flow is: Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59295, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59295, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1424 payload into the flow entry 
Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59295, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1424
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59295 seq 2582313103 ack 1251343644 data_offset 8 flags | ACK PSH |cwnd 29 csum 59711 urgent 0

Pkt #2582313103 is Occupied!

And the flow is: Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59295, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59295, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 438 payload into the flow entry 
Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59295, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 438
flow and prev flow are the same



TCP Headers: tcp src_port 59295 dst_port 443 seq 1251343644 ack 2582313541 data_offset 8 flags | ACK PSH |cwnd 4096 csum 16926 urgent 0

Pkt #1251343644 is Occupied!

And the flow is: Flow { src_ip: 180932078, dst_ip: 3223256437, src_port: 443, dst_port: 59295, proto: 6 }
Previous one is: Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59295, dst_port: 443, proto: 6 }
Packet match handshake!
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([16, 0, 0, 33, 32, 178, 39, 74, 244, 57, 247, 177, 8, 162, 87, 193, 169, 170, 26, 111, 218, 182, 95, 1, 226, 243, 154, 146, 231, 160, 110, 59, 135, 32, 27, 15, 54])) }
Inserted
reading size of 93 payload into the flow entry 
Flow { src_ip: 180932078, dst_ip: 3223256437, src_port: 443, dst_port: 59295, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 93
Quack: occupied

Displaying the payload in raw bytes 


The size of the value is 3286

************************************************************


Trying to display the payload via rustls...


************************************************************


Bytes in tls frame one is 
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([2, 0, 0, 6c, 3, 3, 7b, 50, e7, 36, 8e, ea, b2, c7, 17, 16, a3, 34, 6b, b7, e1, 22, 96, 9, d6, b8, f2, 1a, 83, 26, 44, 4f, 57, 4e, 47, 52, 44, 1, 20, 32, a8, 89, aa, 57, 7c, 8c, 4b, bf, 35, db, f3, d7, d7, 65, df, 33, 12, bb, fc, d0, ae, 83, 94, 6d, 5c, 49, 99, 97, 8b, d8, da, c0, 2f, 0, 0, 24, ff, 1, 0, 1, 0, 0, 0, 0, 0, 0, b, 0, 4, 3, 0, 1, 2, 0, 10, 0, b, 0, 9, 8, 68, 74, 74, 70, 2f, 31, 2e, 31, 0, 17, 0, 0])) }

length of the packet payload is 112


Bytes in tls frame one is 
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([2, 0, 0, 6c, 3, 3, 7b, 50, e7, 36, 8e, ea, b2, c7, 17, 16, a3, 34, 6b, b7, e1, 22, 96, 9, d6, b8, f2, 1a, 83, 26, 44, 4f, 57, 4e, 47, 52, 44, 1, 20, 32, a8, 89, aa, 57, 7c, 8c, 4b, bf, 35, db, f3, d7, d7, 65, df, 33, 12, bb, fc, d0, ae, 83, 94, 6d, 5c, 49, 99, 97, 8b, d8, da, c0, 2f, 0, 0, 24, ff, 1, 0, 1, 0, 0, 0, 0, 0, 0, b, 0, 4, 3, 0, 1, 2, 0, 10, 0, b, 0, 9, 8, 68, 74, 74, 70, 2f, 31, 2e, 31, 0, 17, 0, 0])) }

length of the packet payload is 112

is server hello
DEBUG: entering

Bytes in tls frame one is 
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([2, 0, 0, 6c, 3, 3, 7b, 50, e7, 36, 8e, ea, b2, c7, 17, 16, a3, 34, 6b, b7, e1, 22, 96, 9, d6, b8, f2, 1a, 83, 26, 44, 4f, 57, 4e, 47, 52, 44, 1, 20, 32, a8, 89, aa, 57, 7c, 8c, 4b, bf, 35, db, f3, d7, d7, 65, df, 33, 12, bb, fc, d0, ae, 83, 94, 6d, 5c, 49, 99, 97, 8b, d8, da, c0, 2f, 0, 0, 24, ff, 1, 0, 1, 0, 0, 0, 0, 0, 0, b, 0, 4, 3, 0, 1, 2, 0, 10, 0, b, 0, 9, 8, 68, 74, 74, 70, 2f, 31, 2e, 31, 0, 17, 0, 0])) }

length of the packet payload is 112

ServerHelloPayload { legacy_version: TLSv1_2, random: Random([123, 80, 231, 54, 142, 234, 178, 199, 23, 22, 163, 52, 107, 183, 225, 34, 150, 9, 214, 184, 242, 26, 131, 38, 68, 79, 87, 78, 71, 82, 68, 1]), session_id: SessionID(50, 168, 137, 170, 87, 124, 140, 75, 191, 53, 219, 243, 215, 215, 101, 223, 51, 18, 187, 252, 208, 174, 131, 148, 109, 92, 73, 153, 151, 139, 216, 218), cipher_suite: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, compression_method: Null, extensions: [RenegotiationInfo(PayloadU8([])), ServerNameAck, ECPointFormats([Uncompressed, ANSIX962CompressedPrime, ANSIX962CompressedChar2]), Protocols([PayloadU8([104, 116, 116, 112, 47, 49, 46, 49])]), ExtendedMasterSecretAck] }

And the magic number is 117


Bytes in tls frame one is 
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([b, 0, b, 1e, 0, b, 1b, 0, 6, 60, 30, 82, 6, 5c, 30, 82, 5, 44, a0, 3, 2, 1, 2, 2, 10, 4, 30, d9, 79, 1f, fc, b5, 20, ac, 33, 9f, a4, a7, 3a, 7b, 76, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, b, 5, 0, 30, 70, 31, b, 30, 9, 6, 3, 55, 4, 6, 13, 2, 55, 53, 31, 15, 30, 13, 6, 3, 55, 4, a, 13, c, 44, 69, 67, 69, 43, 65, 72, 74, 20, 49, 6e, 63, 31, 19, 30, 17, 6, 3, 55, 4, b, 13, 10, 77, 77, 77, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 31, 2f, 30, 2d, 6, 3, 55, 4, 3, 13, 26, 44, 69, 67, 69, 43, 65, 72, 74, 20, 53, 48, 41, 32, 20, 48, 69, 67, 68, 20, 41, 73, 73, 75, 72, 61, 6e, 63, 65, 20, 53, 65, 72, 76, 65, 72, 20, 43, 41, 30, 1e, 17, d, 31, 38, 30, 36, 31, 39, 30, 30, 30, 30, 30, 30, 5a, 17, d, 31, 39, 30, 37, 31, 30, 31, 32, 30, 30, 30, 30, 5a, 30, 68, 31, b, 30, 9, 6, 3, 55, 4, 6, 13, 2, 55, 53, 31, 13, 30, 11, 6, 3, 55, 4, 8, 13, a, 43, 61, 6c, 69, 66, 6f, 72, 6e, 69, 61, 31, 16, 30, 14, 6, 3, 55, 4, 7, 13, d, 53, 61, 6e, 20, 46, 72, 61, 6e, 63, 69, 73, 63, 6f, 31, 15, 30, 13, 6, 3, 55, 4, a, 13, c, 47, 69, 74, 48, 75, 62, 2c, 20, 49, 6e, 63, 2e, 31, 15, 30, 13, 6, 3, 55, 4, 3, c, c, 2a, 2e, 67, 69, 74, 68, 75, 62, 2e, 63, 6f, 6d, 30, 82, 1, 22, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, 1, 5, 0, 3, 82, 1, f, 0, 30, 82, 1, a, 2, 82, 1, 1, 0, cb, ed, d4, a7, ca, 81, 90, 89, ff, ed, 2f, 40, 7d, 69, 47, 39, df, 12, 75, 79, a7, 5b, 1f, 89, 8, 81, ef, 9d, 6c, e3, 15, c2, de, 2e, f4, 1b, da, b3, 2a, a8, 20, cb, e5, 70, e5, be, 4c, 82, e5, 26, 7c, 67, 22, c8, 4d, e9, 9e, 8f, 96, 89, 62, e0, 6f, cd, c2, 8f, cf, 26, 74, 41, f6, 19, 8a, c9, 14, f6, 7c, cb, da, a0, 50, 8f, c6, a5, cc, 92, 7f, 9, cd, f6, 1, 6b, ae, 5a, b3, eb, cd, 5c, 41, 98, e1, 16, f6, 4, 42, 18, 50, 83, de, 6d, 33, e7, 7c, ba, 1a, 37, 26, 5, 2d, b0, 71, 7e, d1, 6a, a, 9b, f, b8, 36, 7e, b1, 6, 92, 8e, 6, ee, 49, 96, f7, a1, fa, 77, 28, 76, 8f, d4, 68, bb, c4, f0, 0, ae, 82, 9d, b8, 97, 3c, 3, 3f, e5, e, 9d, c9, f7, 58, 94, 73, 82, 80, fe, f9, 17, b8, 61, 74, a0, 79, 82, 9a, 6b, 9b, d0, 3f, 3a, 74, 2c, 99, 98, d4, 3f, 3c, b8, bb, 41, a, b, 11, 3c, 31, f8, 41, 7a, b6, 6b, 65, da, 1d, f3, c6, 5d, c, 6d, c2, bd, 38, 26, d3, 9d, 1b, 73, e9, 46, 95, bb, 13, fa, cd, 3d, 96, 9d, 1d, 83, 14, 99, 21, e2, 3c, fa, cc, 95, d8, ec, 2d, e1, 81, 7f, 3d, d8, de, 7b, 29, ad, cd, 7, 48, c1, 2, 3, 1, 0, 1, a3, 82, 2, f8, 30, 82, 2, f4, 30, 1f, 6, 3, 55, 1d, 23, 4, 18, 30, 16, 80, 14, 51, 68, ff, 90, af, 2, 7, 75, 3c, cc, d9, 65, 64, 62, a2, 12, b8, 59, 72, 3b, 30, 1d, 6, 3, 55, 1d, e, 4, 16, 4, 14, 9f, 16, df, 7e, 50, 26, 6f, 63, 76, ef, 96, e1, 5a, 37, 84, 3a, 92, eb, f8, 3, 30, 23, 6, 3, 55, 1d, 11, 4, 1c, 30, 1a, 82, c, 2a, 2e, 67, 69, 74, 68, 75, 62, 2e, 63, 6f, 6d, 82, a, 67, 69, 74, 68, 75, 62, 2e, 63, 6f, 6d, 30, e, 6, 3, 55, 1d, f, 1, 1, ff, 4, 4, 3, 2, 5, a0, 30, 1d, 6, 3, 55, 1d, 25, 4, 16, 30, 14, 6, 8, 2b, 6, 1, 5, 5, 7, 3, 1, 6, 8, 2b, 6, 1, 5, 5, 7, 3, 2, 30, 75, 6, 3, 55, 1d, 1f, 4, 6e, 30, 6c, 30, 34, a0, 32, a0, 30, 86, 2e, 68, 74, 74, 70, 3a, 2f, 2f, 63, 72, 6c, 33, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 73, 68, 61, 32, 2d, 68, 61, 2d, 73, 65, 72, 76, 65, 72, 2d, 67, 36, 2e, 63, 72, 6c, 30, 34, a0, 32, a0, 30, 86, 2e, 68, 74, 74, 70, 3a, 2f, 2f, 63, 72, 6c, 34, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 73, 68, 61, 32, 2d, 68, 61, 2d, 73, 65, 72, 76, 65, 72, 2d, 67, 36, 2e, 63, 72, 6c, 30, 4c, 6, 3, 55, 1d, 20, 4, 45, 30, 43, 30, 37, 6, 9, 60, 86, 48, 1, 86, fd, 6c, 1, 1, 30, 2a, 30, 28, 6, 8, 2b, 6, 1, 5, 5, 7, 2, 1, 16, 1c, 68, 74, 74, 70, 73, 3a, 2f, 2f, 77, 77, 77, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 43, 50, 53, 30, 8, 6, 6, 67, 81, c, 1, 2, 2, 30, 81, 83, 6, 8, 2b, 6, 1, 5, 5, 7, 1, 1, 4, 77, 30, 75, 30, 24, 6, 8, 2b, 6, 1, 5, 5, 7, 30, 1, 86, 18, 68, 74, 74, 70, 3a, 2f, 2f, 6f, 63, 73, 70, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 30, 4d, 6, 8, 2b, 6, 1, 5, 5, 7, 30, 2, 86, 41, 68, 74, 74, 70, 3a, 2f, 2f, 63, 61, 63, 65, 72, 74, 73, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 44, 69, 67, 69, 43, 65, 72, 74, 53, 48, 41, 32, 48, 69, 67, 68, 41, 73, 73, 75, 72, 61, 6e, 63, 65, 53, 65, 72, 76, 65, 72, 43, 41, 2e, 63, 72, 74, 30, c, 6, 3, 55, 1d, 13, 1, 1, ff, 4, 2, 30, 0, 30, 82, 1, 3, 6, a, 2b, 6, 1, 4, 1, d6, 79, 2, 4, 2, 4, 81, f4, 4, 81, f1, 0, ef, 0, 75, 0, a4, b9, 9, 90, b4, 18, 58, 14, 87, bb, 13, a2, cc, 67, 70, a, 3c, 35, 98, 4, f9, 1b, df, b8, e3, 77, cd, e, c8, d, dc, 10, 0, 0, 1, 64, 19, 2c, ae, f2, 0, 0, 4, 3, 0, 46, 30, 44, 2, 20, 2b, a0, 98, 66, d8, 15, 6d, a, ef, 8b, 5c, ca, 80, 0, f8, 19, 66, 13, e, a4, 17, cf, 8a, 6b, 81, 8e, ce, 76, 8b, 15, 8e, 53, 2, 20, 8, 41, f1, ee, c6, 20, d2, 6, 63, 7, 5, af, 3b, 4f, d2, da, ea, 76, 8d, 8, cc, 5c, 43, a8, ac, c6, f1, b6, 5e, c8, b7, 58, 0, 76, 0, 87, 75, bf, e7, 59, 7c, f8, 8c, 43, 99, 5f, bd, f3, 6e, ff, 56, 8d, 47, 56, 36, ff, 4a, b5, 60, c1, b4, ea, ff, 5e, a0, 83, f, 0, 0, 1, 64, 19, 2c, af, cf, 0, 0, 4, 3, 0, 47, 30, 45, 2, 20, 32, 95, 91, fb, 81, 22, 88, f3, b4, 1d, 97, d1, 67, 8a, 77, f5, 33, 6a, e8, b5, 1c, 90, c, 9f, 13, e, 79, bf, 9f, f3, be, 6d, 2, 21, 0, 81, fa, 6d, e6, 65, 5b, ee, 3f, e9, f6, b, 5d, bd, a2, fe, 32, df, c9, 46, 9, 6d, a9, e4, bc, ec, 34, f, 26, 7a, 6e, b1, 86, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, b, 5, 0, 3, 82, 1, 1, 0, e, 79, 1f, a0, 17, 7d, 33, fd, 22, e7, b1, 61, 6b, a8, cc, d3, 7, 85, 1a, a6, 67, 8d, 10, 5, 39, 6c, b3, e6, 4c, 45, 18, 3, df, 62, c5, 86, e4, a3, 5e, c0, 74, 66, 80, 3f, 43, bd, 41, 51, b6, ce, 32, 70, a7, ae, f2, 65, 48, 78, ed, 4e, 50, 54, 3c, a6, 3d, 2e, b5, ba, 55, ed, 64, b2, 6b, f7, fc, 4b, 16, 7e, c7, e0, c7, 6f, 62, fe, a3, 8b, e7, 7d, f4, b7, 60, 77, 15, fc, c5, bd, e8, 71, 90, 61, 20, 36, f5, 21, 49, 90, 80, 72, 13, 88, c3, 23, 76, 1b, bc, b2, 45, 7f, 88, d5, 84, 1e, 23, b9, e5, 36, 1f, ba, 8, c7, ef, 34, 48, 7f, a6, 58, b6, 10, 94, 21, c2, ba, 42, a4, 9, 32, aa, db, 4a, 9c, c6, 7a, 49, 71, ab, 84, 4a, 72, 7, a7, 1f, 9b, af, ab, fb, 95, a9, e8, 33, 3a, fc, 48, fe, 42, 23, 1a, 39, e8, 9f, 32, 21, a2, bf, 4f, 42, b0, f8, 6c, ba, fa, d5, e, 92, 8, 44, 4f, e8, 44, 47, 1e, 81, 2d, 91, fb, ef, 61, 82, 29, 63, ce, 8b, dc, 12, cf, 14, c3, 94, 15, ff, f1, 4b, 50, 85, 74, 8f, 41, f, 48, 6d, 81, b8, b4, 93, 63, 37, e1, 15, 6, 54, b6, c9, f9, b9, b2, a1, 2d, f9, cc, ca, 17, ea, 8d, 6, 6c, 48, f3, 0, 4, b5, 30, 82, 4, b1, 30, 82, 3, 99, a0, 3, 2, 1, 2, 2, 10, 4, e1, e7, a4, dc, 5c, f2, f3, 6d, c0, 2b, 42, b8, 5d, 15, 9f, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, b, 5, 0, 30, 6c, 31, b, 30, 9, 6, 3, 55, 4, 6, 13, 2, 55, 53, 31, 15, 30, 13, 6, 3, 55, 4, a, 13, c, 44, 69, 67, 69, 43, 65, 72, 74, 20, 49, 6e, 63, 31, 19, 30, 17, 6, 3, 55, 4, b, 13, 10, 77, 77, 77, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 31, 2b, 30, 29, 6, 3, 55, 4, 3, 13, 22, 44, 69, 67, 69, 43, 65, 72, 74, 20, 48, 69, 67, 68, 20, 41, 73, 73, 75, 72, 61, 6e, 63, 65, 20, 45, 56, 20, 52, 6f, 6f, 74, 20, 43, 41, 30, 1e, 17, d, 31, 33, 31, 30, 32, 32, 31, 32, 30, 30, 30, 30, 5a, 17, d, 32, 38, 31, 30, 32, 32, 31, 32, 30, 30, 30, 30, 5a, 30, 70, 31, b, 30, 9, 6, 3, 55, 4, 6, 13, 2, 55, 53, 31, 15, 30, 13, 6, 3, 55, 4, a, 13, c, 44, 69, 67, 69, 43, 65, 72, 74, 20, 49, 6e, 63, 31, 19, 30, 17, 6, 3, 55, 4, b, 13, 10, 77, 77, 77, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 31, 2f, 30, 2d, 6, 3, 55, 4, 3, 13, 26, 44, 69, 67, 69, 43, 65, 72, 74, 20, 53, 48, 41, 32, 20, 48, 69, 67, 68, 20, 41, 73, 73, 75, 72, 61, 6e, 63, 65, 20, 53, 65, 72, 76, 65, 72, 20, 43, 41, 30, 82, 1, 22, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, 1, 5, 0, 3, 82, 1, f, 0, 30, 82, 1, a, 2, 82, 1, 1, 0, b6, e0, 2f, c2, 24, 6, c8, 6d, 4, 5f, d7, ef, a, 64, 6, b2, 7d, 22, 26, 65, 16, ae, 42, 40, 9b, ce, dc, 9f, 9f, 76, 7, 3e, c3, 30, 55, 87, 19, b9, 4f, 94, e, 5a, 94, 1f, 55, 56, b4, c2, 2, 2a, af, d0, 98, ee, b, 40, d7, c4, d0, 3b, 72, c8, 14, 9e, ef, 90, b1, 11, a9, ae, d2, c8, b8, 43, 3a, d9, b, b, d5, d5, 95, f5, 40, af, c8, 1d, ed, 4d, 9c, 5f, 57, b7, 86, 50, 68, 99, f5, 8a, da, d2, c7, 5, 1f, a8, 97, c9, dc, a4, b1, 82, 84, 2d, c6, ad, a5, 9c, c7, 19, 82, a6, 85, f, 5e, 44, 58, 2a, 37, 8f, fd, 35, f1, b, 8, 27, 32, 5a, f5, bb, 8b, 9e, a4, bd, 51, d0, 27, e2, dd, 3b, 42, 33, a3, 5, 28, c4, bb, 28, cc, 9a, ac, 2b, 23, d, 78, c6, 7b, e6, 5e, 71, b7, 4a, 3e, 8, fb, 81, b7, 16, 16, a1, 9d, 23, 12, 4d, e5, d7, 92, 8, ac, 75, a4, 9c, ba, cd, 17, b2, 1e, 44, 35, 65, 7f, 53, 25, 39, d1, 1c, a, 9a, 63, 1b, 19, 92, 74, 68, a, 37, c2, c2, 52, 48, cb, 39, 5a, a2, b6, e1, 5d, c1, dd, a0, 20, b8, 21, a2, 93, 26, 6f, 14, 4a, 21, 41, c7, ed, 6d, 9b, f2, 48, 2f, f3, 3, f5, a2, 68, 92, 53, 2f, 5e, e3, 2, 3, 1, 0, 1, a3, 82, 1, 49, 30, 82, 1, 45, 30, 12, 6, 3, 55, 1d, 13, 1, 1, ff, 4, 8, 30, 6, 1, 1, ff, 2, 1, 0, 30, e, 6, 3, 55, 1d, f, 1, 1, ff, 4, 4, 3, 2, 1, 86, 30, 1d, 6, 3, 55, 1d, 25, 4, 16, 30, 14, 6, 8, 2b, 6, 1, 5, 5, 7, 3, 1, 6, 8, 2b, 6, 1, 5, 5, 7, 3, 2, 30, 34, 6, 8, 2b, 6, 1, 5, 5, 7, 1, 1, 4, 28, 30, 26, 30, 24, 6, 8, 2b, 6, 1, 5, 5, 7, 30, 1, 86, 18, 68, 74, 74, 70, 3a, 2f, 2f, 6f, 63, 73, 70, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 30, 4b, 6, 3, 55, 1d, 1f, 4, 44, 30, 42, 30, 40, a0, 3e, a0, 3c, 86, 3a, 68, 74, 74, 70, 3a, 2f, 2f, 63, 72, 6c, 34, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 44, 69, 67, 69, 43, 65, 72, 74, 48, 69, 67, 68, 41, 73, 73, 75, 72, 61, 6e, 63, 65, 45, 56, 52, 6f, 6f, 74, 43, 41, 2e, 63, 72, 6c, 30, 3d, 6, 3, 55, 1d, 20, 4, 36, 30, 34, 30, 32, 6, 4, 55, 1d, 20, 0, 30, 2a, 30, 28, 6, 8, 2b, 6, 1, 5, 5, 7, 2, 1, 16, 1c, 68, 74, 74, 70, 73, 3a, 2f, 2f, 77, 77, 77, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 43, 50, 53, 30, 1d, 6, 3, 55, 1d, e, 4, 16, 4, 14, 51, 68, ff, 90, af, 2, 7, 75, 3c, cc, d9, 65, 64, 62, a2, 12, b8, 59, 72, 3b, 30, 1f, 6, 3, 55, 1d, 23, 4, 18, 30, 16, 80, 14, b1, 3e, c3, 69, 3, f8, bf, 47, 1, d4, 98, 26, 1a, 8, 2, ef, 63, 64, 2b, c3, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, b, 5, 0, 3, 82, 1, 1, 0, 18, 8a, 95, 89, 3, e6, 6d, df, 5c, fc, 1d, 68, ea, 4a, 8f, 83, d6, 51, 2f, 8d, 6b, 44, 16, 9e, ac, 63, f5, d2, 6e, 6c, 84, 99, 8b, aa, 81, 71, 84, 5b, ed, 34, 4e, b0, b7, 79, 92, 29, cc, 2d, 80, 6a, f0, 8e, 20, e1, 79, a4, fe, 3, 47, 13, ea, f5, 86, ca, 59, 71, 7d, f4, 4, 96, 6b, d3, 59, 58, 3d, fe, d3, 31, 25, 5c, 18, 38, 84, a3, e6, 9f, 82, fd, 8c, 5b, 98, 31, 4e, cd, 78, 9e, 1a, fd, 85, cb, 49, aa, f2, 27, 8b, 99, 72, fc, 3e, aa, d5, 41, b, da, d5, 36, a1, bf, 1c, 6e, 47, 49, 7f, 5e, d9, 48, 7c, 3, d9, fd, 8b, 49, a0, 98, 26, 42, 40, eb, d6, 92, 11, a4, 64, a, 57, 54, c4, f5, 1d, d6, 2, 5e, 6b, ac, ee, c4, 80, 9a, 12, 72, fa, 56, 93, d7, ff, bf, 30, 85, 6, 30, bf, b, 7f, 4e, ff, 57, 5, 9d, 24, ed, 85, c3, 2b, fb, a6, 75, a8, ac, 2d, 16, ef, 7d, 79, 27, b2, eb, c2, 9d, b, 7, ea, aa, 85, d3, 1, a3, 20, 28, 41, 59, 43, 28, d2, 81, e3, aa, f6, ec, 7b, 3b, 77, b6, 40, 62, 80, 5, 41, 45, 1, ef, 17, 6, 3e, de, c0, 33, 9b, 67, d3, 61, 2e, 72, 87, e4, 69, fc, 12, 0, 57, 40, 1e, 70, f5, 1e, c9, b4])) }

length of the packet payload is 2850


Bytes in tls frame one is 
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([b, 0, b, 1e, 0, b, 1b, 0, 6, 60, 30, 82, 6, 5c, 30, 82, 5, 44, a0, 3, 2, 1, 2, 2, 10, 4, 30, d9, 79, 1f, fc, b5, 20, ac, 33, 9f, a4, a7, 3a, 7b, 76, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, b, 5, 0, 30, 70, 31, b, 30, 9, 6, 3, 55, 4, 6, 13, 2, 55, 53, 31, 15, 30, 13, 6, 3, 55, 4, a, 13, c, 44, 69, 67, 69, 43, 65, 72, 74, 20, 49, 6e, 63, 31, 19, 30, 17, 6, 3, 55, 4, b, 13, 10, 77, 77, 77, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 31, 2f, 30, 2d, 6, 3, 55, 4, 3, 13, 26, 44, 69, 67, 69, 43, 65, 72, 74, 20, 53, 48, 41, 32, 20, 48, 69, 67, 68, 20, 41, 73, 73, 75, 72, 61, 6e, 63, 65, 20, 53, 65, 72, 76, 65, 72, 20, 43, 41, 30, 1e, 17, d, 31, 38, 30, 36, 31, 39, 30, 30, 30, 30, 30, 30, 5a, 17, d, 31, 39, 30, 37, 31, 30, 31, 32, 30, 30, 30, 30, 5a, 30, 68, 31, b, 30, 9, 6, 3, 55, 4, 6, 13, 2, 55, 53, 31, 13, 30, 11, 6, 3, 55, 4, 8, 13, a, 43, 61, 6c, 69, 66, 6f, 72, 6e, 69, 61, 31, 16, 30, 14, 6, 3, 55, 4, 7, 13, d, 53, 61, 6e, 20, 46, 72, 61, 6e, 63, 69, 73, 63, 6f, 31, 15, 30, 13, 6, 3, 55, 4, a, 13, c, 47, 69, 74, 48, 75, 62, 2c, 20, 49, 6e, 63, 2e, 31, 15, 30, 13, 6, 3, 55, 4, 3, c, c, 2a, 2e, 67, 69, 74, 68, 75, 62, 2e, 63, 6f, 6d, 30, 82, 1, 22, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, 1, 5, 0, 3, 82, 1, f, 0, 30, 82, 1, a, 2, 82, 1, 1, 0, cb, ed, d4, a7, ca, 81, 90, 89, ff, ed, 2f, 40, 7d, 69, 47, 39, df, 12, 75, 79, a7, 5b, 1f, 89, 8, 81, ef, 9d, 6c, e3, 15, c2, de, 2e, f4, 1b, da, b3, 2a, a8, 20, cb, e5, 70, e5, be, 4c, 82, e5, 26, 7c, 67, 22, c8, 4d, e9, 9e, 8f, 96, 89, 62, e0, 6f, cd, c2, 8f, cf, 26, 74, 41, f6, 19, 8a, c9, 14, f6, 7c, cb, da, a0, 50, 8f, c6, a5, cc, 92, 7f, 9, cd, f6, 1, 6b, ae, 5a, b3, eb, cd, 5c, 41, 98, e1, 16, f6, 4, 42, 18, 50, 83, de, 6d, 33, e7, 7c, ba, 1a, 37, 26, 5, 2d, b0, 71, 7e, d1, 6a, a, 9b, f, b8, 36, 7e, b1, 6, 92, 8e, 6, ee, 49, 96, f7, a1, fa, 77, 28, 76, 8f, d4, 68, bb, c4, f0, 0, ae, 82, 9d, b8, 97, 3c, 3, 3f, e5, e, 9d, c9, f7, 58, 94, 73, 82, 80, fe, f9, 17, b8, 61, 74, a0, 79, 82, 9a, 6b, 9b, d0, 3f, 3a, 74, 2c, 99, 98, d4, 3f, 3c, b8, bb, 41, a, b, 11, 3c, 31, f8, 41, 7a, b6, 6b, 65, da, 1d, f3, c6, 5d, c, 6d, c2, bd, 38, 26, d3, 9d, 1b, 73, e9, 46, 95, bb, 13, fa, cd, 3d, 96, 9d, 1d, 83, 14, 99, 21, e2, 3c, fa, cc, 95, d8, ec, 2d, e1, 81, 7f, 3d, d8, de, 7b, 29, ad, cd, 7, 48, c1, 2, 3, 1, 0, 1, a3, 82, 2, f8, 30, 82, 2, f4, 30, 1f, 6, 3, 55, 1d, 23, 4, 18, 30, 16, 80, 14, 51, 68, ff, 90, af, 2, 7, 75, 3c, cc, d9, 65, 64, 62, a2, 12, b8, 59, 72, 3b, 30, 1d, 6, 3, 55, 1d, e, 4, 16, 4, 14, 9f, 16, df, 7e, 50, 26, 6f, 63, 76, ef, 96, e1, 5a, 37, 84, 3a, 92, eb, f8, 3, 30, 23, 6, 3, 55, 1d, 11, 4, 1c, 30, 1a, 82, c, 2a, 2e, 67, 69, 74, 68, 75, 62, 2e, 63, 6f, 6d, 82, a, 67, 69, 74, 68, 75, 62, 2e, 63, 6f, 6d, 30, e, 6, 3, 55, 1d, f, 1, 1, ff, 4, 4, 3, 2, 5, a0, 30, 1d, 6, 3, 55, 1d, 25, 4, 16, 30, 14, 6, 8, 2b, 6, 1, 5, 5, 7, 3, 1, 6, 8, 2b, 6, 1, 5, 5, 7, 3, 2, 30, 75, 6, 3, 55, 1d, 1f, 4, 6e, 30, 6c, 30, 34, a0, 32, a0, 30, 86, 2e, 68, 74, 74, 70, 3a, 2f, 2f, 63, 72, 6c, 33, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 73, 68, 61, 32, 2d, 68, 61, 2d, 73, 65, 72, 76, 65, 72, 2d, 67, 36, 2e, 63, 72, 6c, 30, 34, a0, 32, a0, 30, 86, 2e, 68, 74, 74, 70, 3a, 2f, 2f, 63, 72, 6c, 34, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 73, 68, 61, 32, 2d, 68, 61, 2d, 73, 65, 72, 76, 65, 72, 2d, 67, 36, 2e, 63, 72, 6c, 30, 4c, 6, 3, 55, 1d, 20, 4, 45, 30, 43, 30, 37, 6, 9, 60, 86, 48, 1, 86, fd, 6c, 1, 1, 30, 2a, 30, 28, 6, 8, 2b, 6, 1, 5, 5, 7, 2, 1, 16, 1c, 68, 74, 74, 70, 73, 3a, 2f, 2f, 77, 77, 77, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 43, 50, 53, 30, 8, 6, 6, 67, 81, c, 1, 2, 2, 30, 81, 83, 6, 8, 2b, 6, 1, 5, 5, 7, 1, 1, 4, 77, 30, 75, 30, 24, 6, 8, 2b, 6, 1, 5, 5, 7, 30, 1, 86, 18, 68, 74, 74, 70, 3a, 2f, 2f, 6f, 63, 73, 70, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 30, 4d, 6, 8, 2b, 6, 1, 5, 5, 7, 30, 2, 86, 41, 68, 74, 74, 70, 3a, 2f, 2f, 63, 61, 63, 65, 72, 74, 73, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 44, 69, 67, 69, 43, 65, 72, 74, 53, 48, 41, 32, 48, 69, 67, 68, 41, 73, 73, 75, 72, 61, 6e, 63, 65, 53, 65, 72, 76, 65, 72, 43, 41, 2e, 63, 72, 74, 30, c, 6, 3, 55, 1d, 13, 1, 1, ff, 4, 2, 30, 0, 30, 82, 1, 3, 6, a, 2b, 6, 1, 4, 1, d6, 79, 2, 4, 2, 4, 81, f4, 4, 81, f1, 0, ef, 0, 75, 0, a4, b9, 9, 90, b4, 18, 58, 14, 87, bb, 13, a2, cc, 67, 70, a, 3c, 35, 98, 4, f9, 1b, df, b8, e3, 77, cd, e, c8, d, dc, 10, 0, 0, 1, 64, 19, 2c, ae, f2, 0, 0, 4, 3, 0, 46, 30, 44, 2, 20, 2b, a0, 98, 66, d8, 15, 6d, a, ef, 8b, 5c, ca, 80, 0, f8, 19, 66, 13, e, a4, 17, cf, 8a, 6b, 81, 8e, ce, 76, 8b, 15, 8e, 53, 2, 20, 8, 41, f1, ee, c6, 20, d2, 6, 63, 7, 5, af, 3b, 4f, d2, da, ea, 76, 8d, 8, cc, 5c, 43, a8, ac, c6, f1, b6, 5e, c8, b7, 58, 0, 76, 0, 87, 75, bf, e7, 59, 7c, f8, 8c, 43, 99, 5f, bd, f3, 6e, ff, 56, 8d, 47, 56, 36, ff, 4a, b5, 60, c1, b4, ea, ff, 5e, a0, 83, f, 0, 0, 1, 64, 19, 2c, af, cf, 0, 0, 4, 3, 0, 47, 30, 45, 2, 20, 32, 95, 91, fb, 81, 22, 88, f3, b4, 1d, 97, d1, 67, 8a, 77, f5, 33, 6a, e8, b5, 1c, 90, c, 9f, 13, e, 79, bf, 9f, f3, be, 6d, 2, 21, 0, 81, fa, 6d, e6, 65, 5b, ee, 3f, e9, f6, b, 5d, bd, a2, fe, 32, df, c9, 46, 9, 6d, a9, e4, bc, ec, 34, f, 26, 7a, 6e, b1, 86, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, b, 5, 0, 3, 82, 1, 1, 0, e, 79, 1f, a0, 17, 7d, 33, fd, 22, e7, b1, 61, 6b, a8, cc, d3, 7, 85, 1a, a6, 67, 8d, 10, 5, 39, 6c, b3, e6, 4c, 45, 18, 3, df, 62, c5, 86, e4, a3, 5e, c0, 74, 66, 80, 3f, 43, bd, 41, 51, b6, ce, 32, 70, a7, ae, f2, 65, 48, 78, ed, 4e, 50, 54, 3c, a6, 3d, 2e, b5, ba, 55, ed, 64, b2, 6b, f7, fc, 4b, 16, 7e, c7, e0, c7, 6f, 62, fe, a3, 8b, e7, 7d, f4, b7, 60, 77, 15, fc, c5, bd, e8, 71, 90, 61, 20, 36, f5, 21, 49, 90, 80, 72, 13, 88, c3, 23, 76, 1b, bc, b2, 45, 7f, 88, d5, 84, 1e, 23, b9, e5, 36, 1f, ba, 8, c7, ef, 34, 48, 7f, a6, 58, b6, 10, 94, 21, c2, ba, 42, a4, 9, 32, aa, db, 4a, 9c, c6, 7a, 49, 71, ab, 84, 4a, 72, 7, a7, 1f, 9b, af, ab, fb, 95, a9, e8, 33, 3a, fc, 48, fe, 42, 23, 1a, 39, e8, 9f, 32, 21, a2, bf, 4f, 42, b0, f8, 6c, ba, fa, d5, e, 92, 8, 44, 4f, e8, 44, 47, 1e, 81, 2d, 91, fb, ef, 61, 82, 29, 63, ce, 8b, dc, 12, cf, 14, c3, 94, 15, ff, f1, 4b, 50, 85, 74, 8f, 41, f, 48, 6d, 81, b8, b4, 93, 63, 37, e1, 15, 6, 54, b6, c9, f9, b9, b2, a1, 2d, f9, cc, ca, 17, ea, 8d, 6, 6c, 48, f3, 0, 4, b5, 30, 82, 4, b1, 30, 82, 3, 99, a0, 3, 2, 1, 2, 2, 10, 4, e1, e7, a4, dc, 5c, f2, f3, 6d, c0, 2b, 42, b8, 5d, 15, 9f, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, b, 5, 0, 30, 6c, 31, b, 30, 9, 6, 3, 55, 4, 6, 13, 2, 55, 53, 31, 15, 30, 13, 6, 3, 55, 4, a, 13, c, 44, 69, 67, 69, 43, 65, 72, 74, 20, 49, 6e, 63, 31, 19, 30, 17, 6, 3, 55, 4, b, 13, 10, 77, 77, 77, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 31, 2b, 30, 29, 6, 3, 55, 4, 3, 13, 22, 44, 69, 67, 69, 43, 65, 72, 74, 20, 48, 69, 67, 68, 20, 41, 73, 73, 75, 72, 61, 6e, 63, 65, 20, 45, 56, 20, 52, 6f, 6f, 74, 20, 43, 41, 30, 1e, 17, d, 31, 33, 31, 30, 32, 32, 31, 32, 30, 30, 30, 30, 5a, 17, d, 32, 38, 31, 30, 32, 32, 31, 32, 30, 30, 30, 30, 5a, 30, 70, 31, b, 30, 9, 6, 3, 55, 4, 6, 13, 2, 55, 53, 31, 15, 30, 13, 6, 3, 55, 4, a, 13, c, 44, 69, 67, 69, 43, 65, 72, 74, 20, 49, 6e, 63, 31, 19, 30, 17, 6, 3, 55, 4, b, 13, 10, 77, 77, 77, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 31, 2f, 30, 2d, 6, 3, 55, 4, 3, 13, 26, 44, 69, 67, 69, 43, 65, 72, 74, 20, 53, 48, 41, 32, 20, 48, 69, 67, 68, 20, 41, 73, 73, 75, 72, 61, 6e, 63, 65, 20, 53, 65, 72, 76, 65, 72, 20, 43, 41, 30, 82, 1, 22, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, 1, 5, 0, 3, 82, 1, f, 0, 30, 82, 1, a, 2, 82, 1, 1, 0, b6, e0, 2f, c2, 24, 6, c8, 6d, 4, 5f, d7, ef, a, 64, 6, b2, 7d, 22, 26, 65, 16, ae, 42, 40, 9b, ce, dc, 9f, 9f, 76, 7, 3e, c3, 30, 55, 87, 19, b9, 4f, 94, e, 5a, 94, 1f, 55, 56, b4, c2, 2, 2a, af, d0, 98, ee, b, 40, d7, c4, d0, 3b, 72, c8, 14, 9e, ef, 90, b1, 11, a9, ae, d2, c8, b8, 43, 3a, d9, b, b, d5, d5, 95, f5, 40, af, c8, 1d, ed, 4d, 9c, 5f, 57, b7, 86, 50, 68, 99, f5, 8a, da, d2, c7, 5, 1f, a8, 97, c9, dc, a4, b1, 82, 84, 2d, c6, ad, a5, 9c, c7, 19, 82, a6, 85, f, 5e, 44, 58, 2a, 37, 8f, fd, 35, f1, b, 8, 27, 32, 5a, f5, bb, 8b, 9e, a4, bd, 51, d0, 27, e2, dd, 3b, 42, 33, a3, 5, 28, c4, bb, 28, cc, 9a, ac, 2b, 23, d, 78, c6, 7b, e6, 5e, 71, b7, 4a, 3e, 8, fb, 81, b7, 16, 16, a1, 9d, 23, 12, 4d, e5, d7, 92, 8, ac, 75, a4, 9c, ba, cd, 17, b2, 1e, 44, 35, 65, 7f, 53, 25, 39, d1, 1c, a, 9a, 63, 1b, 19, 92, 74, 68, a, 37, c2, c2, 52, 48, cb, 39, 5a, a2, b6, e1, 5d, c1, dd, a0, 20, b8, 21, a2, 93, 26, 6f, 14, 4a, 21, 41, c7, ed, 6d, 9b, f2, 48, 2f, f3, 3, f5, a2, 68, 92, 53, 2f, 5e, e3, 2, 3, 1, 0, 1, a3, 82, 1, 49, 30, 82, 1, 45, 30, 12, 6, 3, 55, 1d, 13, 1, 1, ff, 4, 8, 30, 6, 1, 1, ff, 2, 1, 0, 30, e, 6, 3, 55, 1d, f, 1, 1, ff, 4, 4, 3, 2, 1, 86, 30, 1d, 6, 3, 55, 1d, 25, 4, 16, 30, 14, 6, 8, 2b, 6, 1, 5, 5, 7, 3, 1, 6, 8, 2b, 6, 1, 5, 5, 7, 3, 2, 30, 34, 6, 8, 2b, 6, 1, 5, 5, 7, 1, 1, 4, 28, 30, 26, 30, 24, 6, 8, 2b, 6, 1, 5, 5, 7, 30, 1, 86, 18, 68, 74, 74, 70, 3a, 2f, 2f, 6f, 63, 73, 70, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 30, 4b, 6, 3, 55, 1d, 1f, 4, 44, 30, 42, 30, 40, a0, 3e, a0, 3c, 86, 3a, 68, 74, 74, 70, 3a, 2f, 2f, 63, 72, 6c, 34, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 44, 69, 67, 69, 43, 65, 72, 74, 48, 69, 67, 68, 41, 73, 73, 75, 72, 61, 6e, 63, 65, 45, 56, 52, 6f, 6f, 74, 43, 41, 2e, 63, 72, 6c, 30, 3d, 6, 3, 55, 1d, 20, 4, 36, 30, 34, 30, 32, 6, 4, 55, 1d, 20, 0, 30, 2a, 30, 28, 6, 8, 2b, 6, 1, 5, 5, 7, 2, 1, 16, 1c, 68, 74, 74, 70, 73, 3a, 2f, 2f, 77, 77, 77, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 43, 50, 53, 30, 1d, 6, 3, 55, 1d, e, 4, 16, 4, 14, 51, 68, ff, 90, af, 2, 7, 75, 3c, cc, d9, 65, 64, 62, a2, 12, b8, 59, 72, 3b, 30, 1f, 6, 3, 55, 1d, 23, 4, 18, 30, 16, 80, 14, b1, 3e, c3, 69, 3, f8, bf, 47, 1, d4, 98, 26, 1a, 8, 2, ef, 63, 64, 2b, c3, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, b, 5, 0, 3, 82, 1, 1, 0, 18, 8a, 95, 89, 3, e6, 6d, df, 5c, fc, 1d, 68, ea, 4a, 8f, 83, d6, 51, 2f, 8d, 6b, 44, 16, 9e, ac, 63, f5, d2, 6e, 6c, 84, 99, 8b, aa, 81, 71, 84, 5b, ed, 34, 4e, b0, b7, 79, 92, 29, cc, 2d, 80, 6a, f0, 8e, 20, e1, 79, a4, fe, 3, 47, 13, ea, f5, 86, ca, 59, 71, 7d, f4, 4, 96, 6b, d3, 59, 58, 3d, fe, d3, 31, 25, 5c, 18, 38, 84, a3, e6, 9f, 82, fd, 8c, 5b, 98, 31, 4e, cd, 78, 9e, 1a, fd, 85, cb, 49, aa, f2, 27, 8b, 99, 72, fc, 3e, aa, d5, 41, b, da, d5, 36, a1, bf, 1c, 6e, 47, 49, 7f, 5e, d9, 48, 7c, 3, d9, fd, 8b, 49, a0, 98, 26, 42, 40, eb, d6, 92, 11, a4, 64, a, 57, 54, c4, f5, 1d, d6, 2, 5e, 6b, ac, ee, c4, 80, 9a, 12, 72, fa, 56, 93, d7, ff, bf, 30, 85, 6, 30, bf, b, 7f, 4e, ff, 57, 5, 9d, 24, ed, 85, c3, 2b, fb, a6, 75, a8, ac, 2d, 16, ef, 7d, 79, 27, b2, eb, c2, 9d, b, 7, ea, aa, 85, d3, 1, a3, 20, 28, 41, 59, 43, 28, d2, 81, e3, aa, f6, ec, 7b, 3b, 77, b6, 40, 62, 80, 5, 41, 45, 1, ef, 17, 6, 3e, de, c0, 33, 9b, 67, d3, 61, 2e, 72, 87, e4, 69, fc, 12, 0, 57, 40, 1e, 70, f5, 1e, c9, b4])) }

length of the packet payload is 2850

Certificate payload is
[Certificate(b"0\x82\x06\\0\x82\x05D\xa0\x03\x02\x01\x02\x02\x10\x040\xd9y\x1f\xfc\xb5 \xac3\x9f\xa4\xa7:{v0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\00p1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1\x190\x17\x06\x03U\x04\x0b\x13\x10www.digicert.com1/0-\x06\x03U\x04\x03\x13&DigiCert SHA2 High Assurance Server CA0\x1e\x17\r180619000000Z\x17\r190710120000Z0h1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x130\x11\x06\x03U\x04\x08\x13\nCalifornia1\x160\x14\x06\x03U\x04\x07\x13\rSan Francisco1\x150\x13\x06\x03U\x04\n\x13\x0cGitHub, Inc.1\x150\x13\x06\x03U\x04\x03\x0c\x0c*.github.com0\x82\x01\"0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x01\x05\0\x03\x82\x01\x0f\00\x82\x01\n\x02\x82\x01\x01\0\xcb\xed\xd4\xa7\xca\x81\x90\x89\xff\xed/@}iG9\xdf\x12uy\xa7[\x1f\x89\x08\x81\xef\x9dl\xe3\x15\xc2\xde.\xf4\x1b\xda\xb3*\xa8 \xcb\xe5p\xe5\xbeL\x82\xe5&|g\"\xc8M\xe9\x9e\x8f\x96\x89b\xe0o\xcd\xc2\x8f\xcf&tA\xf6\x19\x8a\xc9\x14\xf6|\xcb\xda\xa0P\x8f\xc6\xa5\xcc\x92\x7f\t\xcd\xf6\x01k\xaeZ\xb3\xeb\xcd\\A\x98\xe1\x16\xf6\x04B\x18P\x83\xdem3\xe7|\xba\x1a7&\x05-\xb0q~\xd1j\n\x9b\x0f\xb86~\xb1\x06\x92\x8e\x06\xeeI\x96\xf7\xa1\xfaw(v\x8f\xd4h\xbb\xc4\xf0\0\xae\x82\x9d\xb8\x97<\x03?\xe5\x0e\x9d\xc9\xf7X\x94s\x82\x80\xfe\xf9\x17\xb8at\xa0y\x82\x9ak\x9b\xd0?:t,\x99\x98\xd4?<\xb8\xbbA\n\x0b\x11<1\xf8Az\xb6ke\xda\x1d\xf3\xc6]\x0cm\xc2\xbd8&\xd3\x9d\x1bs\xe9F\x95\xbb\x13\xfa\xcd=\x96\x9d\x1d\x83\x14\x99!\xe2<\xfa\xcc\x95\xd8\xec-\xe1\x81\x7f=\xd8\xde{)\xad\xcd\x07H\xc1\x02\x03\x01\0\x01\xa3\x82\x02\xf80\x82\x02\xf40\x1f\x06\x03U\x1d#\x04\x180\x16\x80\x14Qh\xff\x90\xaf\x02\x07u<\xcc\xd9edb\xa2\x12\xb8Yr;0\x1d\x06\x03U\x1d\x0e\x04\x16\x04\x14\x9f\x16\xdf~P&ocv\xef\x96\xe1Z7\x84:\x92\xeb\xf8\x030#\x06\x03U\x1d\x11\x04\x1c0\x1a\x82\x0c*.github.com\x82\ngithub.com0\x0e\x06\x03U\x1d\x0f\x01\x01\xff\x04\x04\x03\x02\x05\xa00\x1d\x06\x03U\x1d%\x04\x160\x14\x06\x08+\x06\x01\x05\x05\x07\x03\x01\x06\x08+\x06\x01\x05\x05\x07\x03\x020u\x06\x03U\x1d\x1f\x04n0l04\xa02\xa00\x86.http://crl3.digicert.com/sha2-ha-server-g6.crl04\xa02\xa00\x86.http://crl4.digicert.com/sha2-ha-server-g6.crl0L\x06\x03U\x1d \x04E0C07\x06\t`\x86H\x01\x86\xfdl\x01\x010*0(\x06\x08+\x06\x01\x05\x05\x07\x02\x01\x16\x1chttps://www.digicert.com/CPS0\x08\x06\x06g\x81\x0c\x01\x02\x020\x81\x83\x06\x08+\x06\x01\x05\x05\x07\x01\x01\x04w0u0$\x06\x08+\x06\x01\x05\x05\x070\x01\x86\x18http://ocsp.digicert.com0M\x06\x08+\x06\x01\x05\x05\x070\x02\x86Ahttp://cacerts.digicert.com/DigiCertSHA2HighAssuranceServerCA.crt0\x0c\x06\x03U\x1d\x13\x01\x01\xff\x04\x020\00\x82\x01\x03\x06\n+\x06\x01\x04\x01\xd6y\x02\x04\x02\x04\x81\xf4\x04\x81\xf1\0\xef\0u\0\xa4\xb9\t\x90\xb4\x18X\x14\x87\xbb\x13\xa2\xccgp\n<5\x98\x04\xf9\x1b\xdf\xb8\xe3w\xcd\x0e\xc8\r\xdc\x10\0\0\x01d\x19,\xae\xf2\0\0\x04\x03\0F0D\x02 +\xa0\x98f\xd8\x15m\n\xef\x8b\\\xca\x80\0\xf8\x19f\x13\x0e\xa4\x17\xcf\x8ak\x81\x8e\xcev\x8b\x15\x8eS\x02 \x08A\xf1\xee\xc6 \xd2\x06c\x07\x05\xaf;O\xd2\xda\xeav\x8d\x08\xcc\\C\xa8\xac\xc6\xf1\xb6^\xc8\xb7X\0v\0\x87u\xbf\xe7Y|\xf8\x8cC\x99_\xbd\xf3n\xffV\x8dGV6\xffJ\xb5`\xc1\xb4\xea\xff^\xa0\x83\x0f\0\0\x01d\x19,\xaf\xcf\0\0\x04\x03\0G0E\x02 2\x95\x91\xfb\x81\"\x88\xf3\xb4\x1d\x97\xd1g\x8aw\xf53j\xe8\xb5\x1c\x90\x0c\x9f\x13\x0ey\xbf\x9f\xf3\xbem\x02!\0\x81\xfam\xe6e[\xee?\xe9\xf6\x0b]\xbd\xa2\xfe2\xdf\xc9F\tm\xa9\xe4\xbc\xec4\x0f&zn\xb1\x860\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\0\x03\x82\x01\x01\0\x0ey\x1f\xa0\x17}3\xfd\"\xe7\xb1ak\xa8\xcc\xd3\x07\x85\x1a\xa6g\x8d\x10\x059l\xb3\xe6LE\x18\x03\xdfb\xc5\x86\xe4\xa3^\xc0tf\x80?C\xbdAQ\xb6\xce2p\xa7\xae\xf2eHx\xedNPT<\xa6=.\xb5\xbaU\xedd\xb2k\xf7\xfcK\x16~\xc7\xe0\xc7ob\xfe\xa3\x8b\xe7}\xf4\xb7`w\x15\xfc\xc5\xbd\xe8q\x90a 6\xf5!I\x90\x80r\x13\x88\xc3#v\x1b\xbc\xb2E\x7f\x88\xd5\x84\x1e#\xb9\xe56\x1f\xba\x08\xc7\xef4H\x7f\xa6X\xb6\x10\x94!\xc2\xbaB\xa4\t2\xaa\xdbJ\x9c\xc6zIq\xab\x84Jr\x07\xa7\x1f\x9b\xaf\xab\xfb\x95\xa9\xe83:\xfcH\xfeB#\x1a9\xe8\x9f2!\xa2\xbfOB\xb0\xf8l\xba\xfa\xd5\x0e\x92\x08DO\xe8DG\x1e\x81-\x91\xfb\xefa\x82)c\xce\x8b\xdc\x12\xcf\x14\xc3\x94\x15\xff\xf1KP\x85t\x8fA\x0fHm\x81\xb8\xb4\x93c7\xe1\x15\x06T\xb6\xc9\xf9\xb9\xb2\xa1-\xf9\xcc\xca\x17\xea\x8d\x06lH\xf3"), Certificate(b"0\x82\x04\xb10\x82\x03\x99\xa0\x03\x02\x01\x02\x02\x10\x04\xe1\xe7\xa4\xdc\\\xf2\xf3m\xc0+B\xb8]\x15\x9f0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\00l1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1\x190\x17\x06\x03U\x04\x0b\x13\x10www.digicert.com1+0)\x06\x03U\x04\x03\x13\"DigiCert High Assurance EV Root CA0\x1e\x17\r131022120000Z\x17\r281022120000Z0p1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1\x190\x17\x06\x03U\x04\x0b\x13\x10www.digicert.com1/0-\x06\x03U\x04\x03\x13&DigiCert SHA2 High Assurance Server CA0\x82\x01\"0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x01\x05\0\x03\x82\x01\x0f\00\x82\x01\n\x02\x82\x01\x01\0\xb6\xe0/\xc2$\x06\xc8m\x04_\xd7\xef\nd\x06\xb2}\"&e\x16\xaeB@\x9b\xce\xdc\x9f\x9fv\x07>\xc30U\x87\x19\xb9O\x94\x0eZ\x94\x1fUV\xb4\xc2\x02*\xaf\xd0\x98\xee\x0b@\xd7\xc4\xd0;r\xc8\x14\x9e\xef\x90\xb1\x11\xa9\xae\xd2\xc8\xb8C:\xd9\x0b\x0b\xd5\xd5\x95\xf5@\xaf\xc8\x1d\xedM\x9c_W\xb7\x86Ph\x99\xf5\x8a\xda\xd2\xc7\x05\x1f\xa8\x97\xc9\xdc\xa4\xb1\x82\x84-\xc6\xad\xa5\x9c\xc7\x19\x82\xa6\x85\x0f^DX*7\x8f\xfd5\xf1\x0b\x08'2Z\xf5\xbb\x8b\x9e\xa4\xbdQ\xd0'\xe2\xdd;B3\xa3\x05(\xc4\xbb(\xcc\x9a\xac+#\rx\xc6{\xe6^q\xb7J>\x08\xfb\x81\xb7\x16\x16\xa1\x9d#\x12M\xe5\xd7\x92\x08\xacu\xa4\x9c\xba\xcd\x17\xb2\x1eD5e\x7fS%9\xd1\x1c\n\x9ac\x1b\x19\x92th\n7\xc2\xc2RH\xcb9Z\xa2\xb6\xe1]\xc1\xdd\xa0 \xb8!\xa2\x93&o\x14J!A\xc7\xedm\x9b\xf2H/\xf3\x03\xf5\xa2h\x92S/^\xe3\x02\x03\x01\0\x01\xa3\x82\x01I0\x82\x01E0\x12\x06\x03U\x1d\x13\x01\x01\xff\x04\x080\x06\x01\x01\xff\x02\x01\00\x0e\x06\x03U\x1d\x0f\x01\x01\xff\x04\x04\x03\x02\x01\x860\x1d\x06\x03U\x1d%\x04\x160\x14\x06\x08+\x06\x01\x05\x05\x07\x03\x01\x06\x08+\x06\x01\x05\x05\x07\x03\x0204\x06\x08+\x06\x01\x05\x05\x07\x01\x01\x04(0&0$\x06\x08+\x06\x01\x05\x05\x070\x01\x86\x18http://ocsp.digicert.com0K\x06\x03U\x1d\x1f\x04D0B0@\xa0>\xa0<\x86:http://crl4.digicert.com/DigiCertHighAssuranceEVRootCA.crl0=\x06\x03U\x1d \x0460402\x06\x04U\x1d \00*0(\x06\x08+\x06\x01\x05\x05\x07\x02\x01\x16\x1chttps://www.digicert.com/CPS0\x1d\x06\x03U\x1d\x0e\x04\x16\x04\x14Qh\xff\x90\xaf\x02\x07u<\xcc\xd9edb\xa2\x12\xb8Yr;0\x1f\x06\x03U\x1d#\x04\x180\x16\x80\x14\xb1>\xc3i\x03\xf8\xbfG\x01\xd4\x98&\x1a\x08\x02\xefcd+\xc30\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\0\x03\x82\x01\x01\0\x18\x8a\x95\x89\x03\xe6m\xdf\\\xfc\x1dh\xeaJ\x8f\x83\xd6Q/\x8dkD\x16\x9e\xacc\xf5\xd2nl\x84\x99\x8b\xaa\x81q\x84[\xed4N\xb0\xb7y\x92)\xcc-\x80j\xf0\x8e \xe1y\xa4\xfe\x03G\x13\xea\xf5\x86\xcaYq}\xf4\x04\x96k\xd3YX=\xfe\xd31%\\\x188\x84\xa3\xe6\x9f\x82\xfd\x8c[\x981N\xcdx\x9e\x1a\xfd\x85\xcbI\xaa\xf2'\x8b\x99r\xfc>\xaa\xd5A\x0b\xda\xd56\xa1\xbf\x1cnGI\x7f^\xd9H|\x03\xd9\xfd\x8bI\xa0\x98&B@\xeb\xd6\x92\x11\xa4d\nWT\xc4\xf5\x1d\xd6\x02^k\xac\xee\xc4\x80\x9a\x12r\xfaV\x93\xd7\xff\xbf0\x85\x060\xbf\x0b\x7fN\xffW\x05\x9d$\xed\x85\xc3+\xfb\xa6u\xa8\xac-\x16\xef}y'\xb2\xeb\xc2\x9d\x0b\x07\xea\xaa\x85\xd3\x01\xa3 (AYC(\xd2\x81\xe3\xaa\xf6\xec{;w\xb6@b\x80\x05AE\x01\xef\x17\x06>\xde\xc03\x9bg\xd3a.r\x87\xe4i\xfc\x12\0W@\x1ep\xf5\x1e\xc9\xb4")]

And the magic number is 2855


Bytes in tls frame one is 
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([c, 0, 1, 28, 3, 0, 1d, 20, 68, f5, f3, 31, f6, 9c, 13, 98, f1, e6, b, 7b, 86, c2, e5, 60, ad, 2a, 78, 1, bc, 2d, cc, b3, 14, 4, a9, b4, 71, 92, b9, 20, 8, 4, 1, 0, b2, 83, 8e, e8, 4, da, ef, d7, df, 20, b5, 3f, d1, 7, fd, 9f, 0, 53, af, fa, 8f, 5d, f2, f4, b9, 2d, cf, 3d, 88, d9, 92, c4, 15, 15, 40, 7, 54, 79, b5, a9, a7, a2, a0, 93, 82, 6e, d1, 6d, 9e, c5, e, b0, b, f3, 27, 83, 21, 32, 8b, 5f, 49, da, 9f, 86, a8, 5d, b3, b1, ad, ac, d4, 3c, 40, 26, ca, cc, 64, a8, 9c, eb, 12, f1, 58, 6e, 77, 7, 53, df, fd, 52, 2, aa, ba, 15, 76, de, 15, 9, 36, 5e, 35, 78, 5e, e5, c3, 34, 21, 72, 9c, 3, e2, b9, 53, a2, f7, f0, 6f, f1, 68, 22, 9d, 15, 6c, c0, 42, b4, de, 4, 96, 0, f6, ff, dc, 4e, cb, a3, 91, 48, d3, 95, b6, 4d, 90, 8a, fb, c1, d5, 22, 41, c2, 6f, 7, bd, 7d, f3, 86, 7, d1, 93, 79, c8, b4, ef, 8b, 4a, 55, 9f, 85, c, 5d, 63, 9f, ca, 0, 84, 1a, b9, b0, fc, 87, b5, 59, eb, 44, 59, 12, 1f, eb, e6, b5, 44, dc, 5c, 70, 84, 24, cf, d1, d2, f1, c0, 86, 7d, f6, ff, fe, 23, 71, 7e, c1, 24, b9, f1, 33, c, 7c, 41, 62, 66, 38, c, 11, a2, ee, 14, 3b, 5a, fe, 89, 6d, 95, f1, 18, 68, b9, 5c, c0, a0, c5, e7, 4b, 30, c5, 52, 1e, b8, ab, 46, 83, fb, ee, 84, 85, 2e, 7b, be])) }

length of the packet payload is 300


Server Key Exchange 
Unknown(Payload([3, 0, 29, 32, 104, 245, 243, 49, 246, 156, 19, 152, 241, 230, 11, 123, 134, 194, 229, 96, 173, 42, 120, 1, 188, 45, 204, 179, 20, 4, 169, 180, 113, 146, 185, 32, 8, 4, 1, 0, 178, 131, 142, 232, 4, 218, 239, 215, 223, 32, 181, 63, 209, 7, 253, 159, 0, 83, 175, 250, 143, 93, 242, 244, 185, 45, 207, 61, 136, 217, 146, 196, 21, 21, 64, 7, 84, 121, 181, 169, 167, 162, 160, 147, 130, 110, 209, 109, 158, 197, 14, 176, 11, 243, 39, 131, 33, 50, 139, 95, 73, 218, 159, 134, 168, 93, 179, 177, 173, 172, 212, 60, 64, 38, 202, 204, 100, 168, 156, 235, 18, 241, 88, 110, 119, 7, 83, 223, 253, 82, 2, 170, 186, 21, 118, 222, 21, 9, 54, 94, 53, 120, 94, 229, 195, 52, 33, 114, 156, 3, 226, 185, 83, 162, 247, 240, 111, 241, 104, 34, 157, 21, 108, 192, 66, 180, 222, 4, 150, 0, 246, 255, 220, 78, 203, 163, 145, 72, 211, 149, 182, 77, 144, 138, 251, 193, 213, 34, 65, 194, 111, 7, 189, 125, 243, 134, 7, 209, 147, 121, 200, 180, 239, 139, 74, 85, 159, 133, 12, 93, 99, 159, 202, 0, 132, 26, 185, 176, 252, 135, 181, 89, 235, 68, 89, 18, 31, 235, 230, 181, 68, 220, 92, 112, 132, 36, 207, 209, 210, 241, 192, 134, 125, 246, 255, 254, 35, 113, 126, 193, 36, 185, 241, 51, 12, 124, 65, 98, 102, 56, 12, 17, 162, 238, 20, 59, 90, 254, 137, 109, 149, 241, 24, 104, 185, 92, 192, 160, 197, 231, 75, 48, 197, 82, 30, 184, 171, 70, 131, 251, 238, 132, 133, 46, 123, 190]))

And the magic number is 305


Bytes in tls frame one is 
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([e, 0, 0, 0])) }

length of the packet payload is 4

Hooray! Server Hello Done!!!

And the magic number is 9

We now retrieve the certs from the tcp payload
Ok([Certificate(b"0\x82\x06\\0\x82\x05D\xa0\x03\x02\x01\x02\x02\x10\x040\xd9y\x1f\xfc\xb5 \xac3\x9f\xa4\xa7:{v0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\00p1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1\x190\x17\x06\x03U\x04\x0b\x13\x10www.digicert.com1/0-\x06\x03U\x04\x03\x13&DigiCert SHA2 High Assurance Server CA0\x1e\x17\r180619000000Z\x17\r190710120000Z0h1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x130\x11\x06\x03U\x04\x08\x13\nCalifornia1\x160\x14\x06\x03U\x04\x07\x13\rSan Francisco1\x150\x13\x06\x03U\x04\n\x13\x0cGitHub, Inc.1\x150\x13\x06\x03U\x04\x03\x0c\x0c*.github.com0\x82\x01\"0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x01\x05\0\x03\x82\x01\x0f\00\x82\x01\n\x02\x82\x01\x01\0\xcb\xed\xd4\xa7\xca\x81\x90\x89\xff\xed/@}iG9\xdf\x12uy\xa7[\x1f\x89\x08\x81\xef\x9dl\xe3\x15\xc2\xde.\xf4\x1b\xda\xb3*\xa8 \xcb\xe5p\xe5\xbeL\x82\xe5&|g\"\xc8M\xe9\x9e\x8f\x96\x89b\xe0o\xcd\xc2\x8f\xcf&tA\xf6\x19\x8a\xc9\x14\xf6|\xcb\xda\xa0P\x8f\xc6\xa5\xcc\x92\x7f\t\xcd\xf6\x01k\xaeZ\xb3\xeb\xcd\\A\x98\xe1\x16\xf6\x04B\x18P\x83\xdem3\xe7|\xba\x1a7&\x05-\xb0q~\xd1j\n\x9b\x0f\xb86~\xb1\x06\x92\x8e\x06\xeeI\x96\xf7\xa1\xfaw(v\x8f\xd4h\xbb\xc4\xf0\0\xae\x82\x9d\xb8\x97<\x03?\xe5\x0e\x9d\xc9\xf7X\x94s\x82\x80\xfe\xf9\x17\xb8at\xa0y\x82\x9ak\x9b\xd0?:t,\x99\x98\xd4?<\xb8\xbbA\n\x0b\x11<1\xf8Az\xb6ke\xda\x1d\xf3\xc6]\x0cm\xc2\xbd8&\xd3\x9d\x1bs\xe9F\x95\xbb\x13\xfa\xcd=\x96\x9d\x1d\x83\x14\x99!\xe2<\xfa\xcc\x95\xd8\xec-\xe1\x81\x7f=\xd8\xde{)\xad\xcd\x07H\xc1\x02\x03\x01\0\x01\xa3\x82\x02\xf80\x82\x02\xf40\x1f\x06\x03U\x1d#\x04\x180\x16\x80\x14Qh\xff\x90\xaf\x02\x07u<\xcc\xd9edb\xa2\x12\xb8Yr;0\x1d\x06\x03U\x1d\x0e\x04\x16\x04\x14\x9f\x16\xdf~P&ocv\xef\x96\xe1Z7\x84:\x92\xeb\xf8\x030#\x06\x03U\x1d\x11\x04\x1c0\x1a\x82\x0c*.github.com\x82\ngithub.com0\x0e\x06\x03U\x1d\x0f\x01\x01\xff\x04\x04\x03\x02\x05\xa00\x1d\x06\x03U\x1d%\x04\x160\x14\x06\x08+\x06\x01\x05\x05\x07\x03\x01\x06\x08+\x06\x01\x05\x05\x07\x03\x020u\x06\x03U\x1d\x1f\x04n0l04\xa02\xa00\x86.http://crl3.digicert.com/sha2-ha-server-g6.crl04\xa02\xa00\x86.http://crl4.digicert.com/sha2-ha-server-g6.crl0L\x06\x03U\x1d \x04E0C07\x06\t`\x86H\x01\x86\xfdl\x01\x010*0(\x06\x08+\x06\x01\x05\x05\x07\x02\x01\x16\x1chttps://www.digicert.com/CPS0\x08\x06\x06g\x81\x0c\x01\x02\x020\x81\x83\x06\x08+\x06\x01\x05\x05\x07\x01\x01\x04w0u0$\x06\x08+\x06\x01\x05\x05\x070\x01\x86\x18http://ocsp.digicert.com0M\x06\x08+\x06\x01\x05\x05\x070\x02\x86Ahttp://cacerts.digicert.com/DigiCertSHA2HighAssuranceServerCA.crt0\x0c\x06\x03U\x1d\x13\x01\x01\xff\x04\x020\00\x82\x01\x03\x06\n+\x06\x01\x04\x01\xd6y\x02\x04\x02\x04\x81\xf4\x04\x81\xf1\0\xef\0u\0\xa4\xb9\t\x90\xb4\x18X\x14\x87\xbb\x13\xa2\xccgp\n<5\x98\x04\xf9\x1b\xdf\xb8\xe3w\xcd\x0e\xc8\r\xdc\x10\0\0\x01d\x19,\xae\xf2\0\0\x04\x03\0F0D\x02 +\xa0\x98f\xd8\x15m\n\xef\x8b\\\xca\x80\0\xf8\x19f\x13\x0e\xa4\x17\xcf\x8ak\x81\x8e\xcev\x8b\x15\x8eS\x02 \x08A\xf1\xee\xc6 \xd2\x06c\x07\x05\xaf;O\xd2\xda\xeav\x8d\x08\xcc\\C\xa8\xac\xc6\xf1\xb6^\xc8\xb7X\0v\0\x87u\xbf\xe7Y|\xf8\x8cC\x99_\xbd\xf3n\xffV\x8dGV6\xffJ\xb5`\xc1\xb4\xea\xff^\xa0\x83\x0f\0\0\x01d\x19,\xaf\xcf\0\0\x04\x03\0G0E\x02 2\x95\x91\xfb\x81\"\x88\xf3\xb4\x1d\x97\xd1g\x8aw\xf53j\xe8\xb5\x1c\x90\x0c\x9f\x13\x0ey\xbf\x9f\xf3\xbem\x02!\0\x81\xfam\xe6e[\xee?\xe9\xf6\x0b]\xbd\xa2\xfe2\xdf\xc9F\tm\xa9\xe4\xbc\xec4\x0f&zn\xb1\x860\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\0\x03\x82\x01\x01\0\x0ey\x1f\xa0\x17}3\xfd\"\xe7\xb1ak\xa8\xcc\xd3\x07\x85\x1a\xa6g\x8d\x10\x059l\xb3\xe6LE\x18\x03\xdfb\xc5\x86\xe4\xa3^\xc0tf\x80?C\xbdAQ\xb6\xce2p\xa7\xae\xf2eHx\xedNPT<\xa6=.\xb5\xbaU\xedd\xb2k\xf7\xfcK\x16~\xc7\xe0\xc7ob\xfe\xa3\x8b\xe7}\xf4\xb7`w\x15\xfc\xc5\xbd\xe8q\x90a 6\xf5!I\x90\x80r\x13\x88\xc3#v\x1b\xbc\xb2E\x7f\x88\xd5\x84\x1e#\xb9\xe56\x1f\xba\x08\xc7\xef4H\x7f\xa6X\xb6\x10\x94!\xc2\xbaB\xa4\t2\xaa\xdbJ\x9c\xc6zIq\xab\x84Jr\x07\xa7\x1f\x9b\xaf\xab\xfb\x95\xa9\xe83:\xfcH\xfeB#\x1a9\xe8\x9f2!\xa2\xbfOB\xb0\xf8l\xba\xfa\xd5\x0e\x92\x08DO\xe8DG\x1e\x81-\x91\xfb\xefa\x82)c\xce\x8b\xdc\x12\xcf\x14\xc3\x94\x15\xff\xf1KP\x85t\x8fA\x0fHm\x81\xb8\xb4\x93c7\xe1\x15\x06T\xb6\xc9\xf9\xb9\xb2\xa1-\xf9\xcc\xca\x17\xea\x8d\x06lH\xf3"), Certificate(b"0\x82\x04\xb10\x82\x03\x99\xa0\x03\x02\x01\x02\x02\x10\x04\xe1\xe7\xa4\xdc\\\xf2\xf3m\xc0+B\xb8]\x15\x9f0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\00l1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1\x190\x17\x06\x03U\x04\x0b\x13\x10www.digicert.com1+0)\x06\x03U\x04\x03\x13\"DigiCert High Assurance EV Root CA0\x1e\x17\r131022120000Z\x17\r281022120000Z0p1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1\x190\x17\x06\x03U\x04\x0b\x13\x10www.digicert.com1/0-\x06\x03U\x04\x03\x13&DigiCert SHA2 High Assurance Server CA0\x82\x01\"0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x01\x05\0\x03\x82\x01\x0f\00\x82\x01\n\x02\x82\x01\x01\0\xb6\xe0/\xc2$\x06\xc8m\x04_\xd7\xef\nd\x06\xb2}\"&e\x16\xaeB@\x9b\xce\xdc\x9f\x9fv\x07>\xc30U\x87\x19\xb9O\x94\x0eZ\x94\x1fUV\xb4\xc2\x02*\xaf\xd0\x98\xee\x0b@\xd7\xc4\xd0;r\xc8\x14\x9e\xef\x90\xb1\x11\xa9\xae\xd2\xc8\xb8C:\xd9\x0b\x0b\xd5\xd5\x95\xf5@\xaf\xc8\x1d\xedM\x9c_W\xb7\x86Ph\x99\xf5\x8a\xda\xd2\xc7\x05\x1f\xa8\x97\xc9\xdc\xa4\xb1\x82\x84-\xc6\xad\xa5\x9c\xc7\x19\x82\xa6\x85\x0f^DX*7\x8f\xfd5\xf1\x0b\x08'2Z\xf5\xbb\x8b\x9e\xa4\xbdQ\xd0'\xe2\xdd;B3\xa3\x05(\xc4\xbb(\xcc\x9a\xac+#\rx\xc6{\xe6^q\xb7J>\x08\xfb\x81\xb7\x16\x16\xa1\x9d#\x12M\xe5\xd7\x92\x08\xacu\xa4\x9c\xba\xcd\x17\xb2\x1eD5e\x7fS%9\xd1\x1c\n\x9ac\x1b\x19\x92th\n7\xc2\xc2RH\xcb9Z\xa2\xb6\xe1]\xc1\xdd\xa0 \xb8!\xa2\x93&o\x14J!A\xc7\xedm\x9b\xf2H/\xf3\x03\xf5\xa2h\x92S/^\xe3\x02\x03\x01\0\x01\xa3\x82\x01I0\x82\x01E0\x12\x06\x03U\x1d\x13\x01\x01\xff\x04\x080\x06\x01\x01\xff\x02\x01\00\x0e\x06\x03U\x1d\x0f\x01\x01\xff\x04\x04\x03\x02\x01\x860\x1d\x06\x03U\x1d%\x04\x160\x14\x06\x08+\x06\x01\x05\x05\x07\x03\x01\x06\x08+\x06\x01\x05\x05\x07\x03\x0204\x06\x08+\x06\x01\x05\x05\x07\x01\x01\x04(0&0$\x06\x08+\x06\x01\x05\x05\x070\x01\x86\x18http://ocsp.digicert.com0K\x06\x03U\x1d\x1f\x04D0B0@\xa0>\xa0<\x86:http://crl4.digicert.com/DigiCertHighAssuranceEVRootCA.crl0=\x06\x03U\x1d \x0460402\x06\x04U\x1d \00*0(\x06\x08+\x06\x01\x05\x05\x07\x02\x01\x16\x1chttps://www.digicert.com/CPS0\x1d\x06\x03U\x1d\x0e\x04\x16\x04\x14Qh\xff\x90\xaf\x02\x07u<\xcc\xd9edb\xa2\x12\xb8Yr;0\x1f\x06\x03U\x1d#\x04\x180\x16\x80\x14\xb1>\xc3i\x03\xf8\xbfG\x01\xd4\x98&\x1a\x08\x02\xefcd+\xc30\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\0\x03\x82\x01\x01\0\x18\x8a\x95\x89\x03\xe6m\xdf\\\xfc\x1dh\xeaJ\x8f\x83\xd6Q/\x8dkD\x16\x9e\xacc\xf5\xd2nl\x84\x99\x8b\xaa\x81q\x84[\xed4N\xb0\xb7y\x92)\xcc-\x80j\xf0\x8e \xe1y\xa4\xfe\x03G\x13\xea\xf5\x86\xcaYq}\xf4\x04\x96k\xd3YX=\xfe\xd31%\\\x188\x84\xa3\xe6\x9f\x82\xfd\x8c[\x981N\xcdx\x9e\x1a\xfd\x85\xcbI\xaa\xf2'\x8b\x99r\xfc>\xaa\xd5A\x0b\xda\xd56\xa1\xbf\x1cnGI\x7f^\xd9H|\x03\xd9\xfd\x8bI\xa0\x98&B@\xeb\xd6\x92\x11\xa4d\nWT\xc4\xf5\x1d\xd6\x02^k\xac\xee\xc4\x80\x9a\x12r\xfaV\x93\xd7\xff\xbf0\x85\x060\xbf\x0b\x7fN\xffW\x05\x9d$\xed\x85\xc3+\xfb\xa6u\xa8\xac-\x16\xef}y'\xb2\xeb\xc2\x9d\x0b\x07\xea\xaa\x85\xd3\x01\xa3 (AYC(\xd2\x81\xe3\xaa\xf6\xec{;w\xb6@b\x80\x05AE\x01\xef\x17\x06>\xde\xc03\x9bg\xd3a.r\x87\xe4i\xfc\x12\0W@\x1ep\xf5\x1e\xc9\xb4")])


TCP Headers: tcp src_port 443 dst_port 59295 seq 2582313541 ack 1251343737 data_offset 8 flags | ACK PSH |cwnd 29 csum 33946 urgent 0

Pkt #2582313541 is Occupied!

And the flow is: Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59295, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 3223256437, src_port: 443, dst_port: 59295, proto: 6 }
Packet type is not matched!
Quack: occupied

Displaying the payload in raw bytes 


The size of the value is 93

************************************************************


Trying to display the payload via rustls...


************************************************************


Bytes in tls frame one is 
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([10, 0, 0, 21, 20, b2, 27, 4a, f4, 39, f7, b1, 8, a2, 57, c1, a9, aa, 1a, 6f, da, b6, 5f, 1, e2, f3, 9a, 92, e7, a0, 6e, 3b, 87, 20, 1b, f, 36])) }

length of the packet payload is 37


Bytes in tls frame one is 
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([10, 0, 0, 21, 20, b2, 27, 4a, f4, 39, f7, b1, 8, a2, 57, c1, a9, aa, 1a, 6f, da, b6, 5f, 1, e2, f3, 9a, 92, e7, a0, 6e, 3b, 87, 20, 1b, f, 36])) }

length of the packet payload is 37

not server hello
We are not getting anything


TCP Headers: tcp src_port 59295 dst_port 443 seq 1251343737 ack 2582313592 data_offset 8 flags | ACK PSH |cwnd 4096 csum 8323 urgent 0


Pkt #1251343737 is Vacant

And the flow is: Flow { src_ip: 180932078, dst_ip: 3223256437, src_port: 443, dst_port: 59295, proto: 6 }
Previous one is: Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59295, dst_port: 443, proto: 6 }
current flow is a new flow, we should invoke the reassemble function for the previous flow

dumped an empty payload for Flow=Flow { src_ip: 180932078, dst_ip: 3223256437, src_port: 443, dst_port: 59295, proto: 6 }
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped
      3: Packet is not a TLS handshake so not displaying


TCP Headers: tcp src_port 443 dst_port 59295 seq 2582313592 ack 1251344173 data_offset 8 flags | ACK PSH |cwnd 30 csum 16916 urgent 0


Pkt #2582313592 is Vacant

And the flow is: Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59295, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 3223256437, src_port: 443, dst_port: 59295, proto: 6 }
current flow is a new flow, we should invoke the reassemble function for the previous flow

dumped an empty payload for Flow=Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59295, dst_port: 443, proto: 6 }
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped
      3: Packet is not a TLS handshake so not displaying


TCP Headers: tcp src_port 59295 dst_port 443 seq 1251344173 ack 2582314636 data_offset 8 flags | ACK PSH |cwnd 4096 csum 60557 urgent 0

Pkt #1251344173 is Occupied!

And the flow is: Flow { src_ip: 180932078, dst_ip: 3223256437, src_port: 443, dst_port: 59295, proto: 6 }
Previous one is: Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59295, dst_port: 443, proto: 6 }
Packet type is not matched!
dumped an empty payload for Flow=Flow { src_ip: 180932078, dst_ip: 3223256437, src_port: 443, dst_port: 59295, proto: 6 }


TCP Headers: tcp src_port 59296 dst_port 443 seq 3700925885 ack 125373809 data_offset 8 flags | ACK PSH |cwnd 4138 csum 58598 urgent 0


Pkt #3700925885 is Vacant

And the flow is: Flow { src_ip: 180932078, dst_ip: 3223256437, src_port: 443, dst_port: 59296, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 3223256437, src_port: 443, dst_port: 59295, proto: 6 }
current flow is a new flow, we should invoke the reassemble function for the previous flow

dumped an empty payload for Flow=Flow { src_ip: 180932078, dst_ip: 3223256437, src_port: 443, dst_port: 59296, proto: 6 }
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped

 ************************************************ 
      3: Packet match handshake!
      
Message { typ: Handshake, version: TLSv1_0, payload: Opaque(Payload([1, 0, 0, 202, 3, 3, 137, 121, 211, 78, 191, 40, 212, 249, 235, 106, 111, 59, 127, 106, 161, 39, 242, 119, 195, 211, 22, 228, 130, 122, 14, 173, 179, 226, 210, 124, 167, 34, 32, 50, 168, 137, 170, 87, 124, 140, 75, 191, 53, 219, 243, 215, 215, 101, 223, 51, 18, 187, 252, 208, 174, 131, 148, 109, 92, 73, 153, 151, 139, 216, 218, 0, 40, 192, 44, 192, 43, 192, 36, 192, 35, 192, 10, 192, 9, 204, 169, 192, 48, 192, 47, 192, 40, 192, 39, 192, 20, 192, 19, 204, 168, 0, 157, 0, 156, 0, 61, 0, 60, 0, 53, 0, 47, 1, 0, 0, 89, 255, 1, 0, 1, 0, 0, 0, 0, 19, 0, 17, 0, 0, 14, 97, 112, 105, 46, 103, 105, 116, 104, 117, 98, 46, 99, 111, 109, 0, 23, 0, 0, 0, 13, 0, 20, 0, 18, 4, 3, 8, 4, 4, 1, 5, 3, 8, 5, 5, 1, 8, 6, 6, 1, 2, 1, 0, 5, 0, 5, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 11, 0, 2, 1, 0, 0, 10, 0, 10, 0, 8, 0, 29, 0, 23, 0, 24, 0, 25])) }

reading size of 211 payload into the flow entry 
Flow { src_ip: 180932078, dst_ip: 3223256437, src_port: 443, dst_port: 59296, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 211
      4: This packet is inserted, quack


TCP Headers: tcp src_port 443 dst_port 59296 seq 125373809 ack 3700926096 data_offset 8 flags | ACK |cwnd 29 csum 36302 urgent 0


Pkt #125373809 is Vacant

And the flow is: Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59296, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 3223256437, src_port: 443, dst_port: 59296, proto: 6 }
current flow is a new flow, we should invoke the reassemble function for the previous flow

Occupied, start parsing

TLS packet match handshake!

Message { typ: Handshake, version: TLSv1_0, payload: Opaque(Payload([1, 0, 0, 202, 3, 3, 137, 121, 211, 78, 191, 40, 212, 249, 235, 106, 111, 59, 127, 106, 161, 39, 242, 119, 195, 211, 22, 228, 130, 122, 14, 173, 179, 226, 210, 124, 167, 34, 32, 50, 168, 137, 170, 87, 124, 140, 75, 191, 53, 219, 243, 215, 215, 101, 223, 51, 18, 187, 252, 208, 174, 131, 148, 109, 92, 73, 153, 151, 139, 216, 218, 0, 40, 192, 44, 192, 43, 192, 36, 192, 35, 192, 10, 192, 9, 204, 169, 192, 48, 192, 47, 192, 40, 192, 39, 192, 20, 192, 19, 204, 168, 0, 157, 0, 156, 0, 61, 0, 60, 0, 53, 0, 47, 1, 0, 0, 89, 255, 1, 0, 1, 0, 0, 0, 0, 19, 0, 17, 0, 0, 14, 97, 112, 105, 46, 103, 105, 116, 104, 117, 98, 46, 99, 111, 109, 0, 23, 0, 0, 0, 13, 0, 20, 0, 18, 4, 3, 8, 4, 4, 1, 5, 3, 8, 5, 5, 1, 8, 6, 6, 1, 2, 1, 0, 5, 0, 5, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 11, 0, 2, 1, 0, 0, 10, 0, 10, 0, 8, 0, 29, 0, 23, 0, 24, 0, 25])) }

  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped

 ************************************************ 
      3: Packet match handshake!
      
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([2, 0, 0, 93, 3, 3, 113, 34, 68, 54, 191, 205, 174, 124, 182, 75, 162, 249, 132, 239, 28, 220, 85, 249, 74, 54, 76, 221, 252, 174, 68, 79, 87, 78, 71, 82, 68, 1, 32, 131, 237, 42, 79, 103, 187, 92, 19, 53, 238, 182, 60, 107, 61, 209, 11, 149, 19, 143, 226, 175, 194, 242, 199, 175, 217, 52, 240, 0, 223, 240, 228, 192, 47, 0, 0, 21, 255, 1, 0, 1, 0, 0, 0, 0, 0, 0, 11, 0, 4, 3, 0, 1, 2, 0, 23, 0, 0])) }

reading size of 1424 payload into the flow entry 
Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59296, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1424
      4: This packet is inserted, quack


TCP Headers: tcp src_port 443 dst_port 59296 seq 125375233 ack 3700926096 data_offset 8 flags | ACK |cwnd 29 csum 9524 urgent 0

Pkt #125375233 is Occupied!

And the flow is: Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59296, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59296, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1424 payload into the flow entry 
Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59296, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1424
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59296 seq 125376657 ack 3700926096 data_offset 8 flags | ACK PSH |cwnd 29 csum 7675 urgent 0

Pkt #125376657 is Occupied!

And the flow is: Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59296, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59296, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 423 payload into the flow entry 
Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59296, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 423
flow and prev flow are the same



TCP Headers: tcp src_port 59296 dst_port 443 seq 3700926096 ack 125377080 data_offset 8 flags | ACK PSH |cwnd 4096 csum 31098 urgent 0

Pkt #3700926096 is Occupied!

And the flow is: Flow { src_ip: 180932078, dst_ip: 3223256437, src_port: 443, dst_port: 59296, proto: 6 }
Previous one is: Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59296, dst_port: 443, proto: 6 }
Packet match handshake!
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([16, 0, 0, 33, 32, 71, 245, 63, 102, 30, 246, 47, 62, 240, 203, 77, 117, 203, 219, 113, 131, 96, 145, 28, 252, 10, 133, 146, 45, 226, 234, 78, 237, 55, 200, 111, 26])) }
Inserted
reading size of 93 payload into the flow entry 
Flow { src_ip: 180932078, dst_ip: 3223256437, src_port: 443, dst_port: 59296, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 93
Quack: occupied

Displaying the payload in raw bytes 


The size of the value is 3271

************************************************************


Trying to display the payload via rustls...


************************************************************


Bytes in tls frame one is 
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([2, 0, 0, 5d, 3, 3, 71, 22, 44, 36, bf, cd, ae, 7c, b6, 4b, a2, f9, 84, ef, 1c, dc, 55, f9, 4a, 36, 4c, dd, fc, ae, 44, 4f, 57, 4e, 47, 52, 44, 1, 20, 83, ed, 2a, 4f, 67, bb, 5c, 13, 35, ee, b6, 3c, 6b, 3d, d1, b, 95, 13, 8f, e2, af, c2, f2, c7, af, d9, 34, f0, 0, df, f0, e4, c0, 2f, 0, 0, 15, ff, 1, 0, 1, 0, 0, 0, 0, 0, 0, b, 0, 4, 3, 0, 1, 2, 0, 17, 0, 0])) }

length of the packet payload is 97


Bytes in tls frame one is 
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([2, 0, 0, 5d, 3, 3, 71, 22, 44, 36, bf, cd, ae, 7c, b6, 4b, a2, f9, 84, ef, 1c, dc, 55, f9, 4a, 36, 4c, dd, fc, ae, 44, 4f, 57, 4e, 47, 52, 44, 1, 20, 83, ed, 2a, 4f, 67, bb, 5c, 13, 35, ee, b6, 3c, 6b, 3d, d1, b, 95, 13, 8f, e2, af, c2, f2, c7, af, d9, 34, f0, 0, df, f0, e4, c0, 2f, 0, 0, 15, ff, 1, 0, 1, 0, 0, 0, 0, 0, 0, b, 0, 4, 3, 0, 1, 2, 0, 17, 0, 0])) }

length of the packet payload is 97

is server hello
DEBUG: entering

Bytes in tls frame one is 
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([2, 0, 0, 5d, 3, 3, 71, 22, 44, 36, bf, cd, ae, 7c, b6, 4b, a2, f9, 84, ef, 1c, dc, 55, f9, 4a, 36, 4c, dd, fc, ae, 44, 4f, 57, 4e, 47, 52, 44, 1, 20, 83, ed, 2a, 4f, 67, bb, 5c, 13, 35, ee, b6, 3c, 6b, 3d, d1, b, 95, 13, 8f, e2, af, c2, f2, c7, af, d9, 34, f0, 0, df, f0, e4, c0, 2f, 0, 0, 15, ff, 1, 0, 1, 0, 0, 0, 0, 0, 0, b, 0, 4, 3, 0, 1, 2, 0, 17, 0, 0])) }

length of the packet payload is 97

ServerHelloPayload { legacy_version: TLSv1_2, random: Random([113, 34, 68, 54, 191, 205, 174, 124, 182, 75, 162, 249, 132, 239, 28, 220, 85, 249, 74, 54, 76, 221, 252, 174, 68, 79, 87, 78, 71, 82, 68, 1]), session_id: SessionID(131, 237, 42, 79, 103, 187, 92, 19, 53, 238, 182, 60, 107, 61, 209, 11, 149, 19, 143, 226, 175, 194, 242, 199, 175, 217, 52, 240, 0, 223, 240, 228), cipher_suite: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, compression_method: Null, extensions: [RenegotiationInfo(PayloadU8([])), ServerNameAck, ECPointFormats([Uncompressed, ANSIX962CompressedPrime, ANSIX962CompressedChar2]), ExtendedMasterSecretAck] }

And the magic number is 102


Bytes in tls frame one is 
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([b, 0, b, 1e, 0, b, 1b, 0, 6, 60, 30, 82, 6, 5c, 30, 82, 5, 44, a0, 3, 2, 1, 2, 2, 10, 4, 30, d9, 79, 1f, fc, b5, 20, ac, 33, 9f, a4, a7, 3a, 7b, 76, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, b, 5, 0, 30, 70, 31, b, 30, 9, 6, 3, 55, 4, 6, 13, 2, 55, 53, 31, 15, 30, 13, 6, 3, 55, 4, a, 13, c, 44, 69, 67, 69, 43, 65, 72, 74, 20, 49, 6e, 63, 31, 19, 30, 17, 6, 3, 55, 4, b, 13, 10, 77, 77, 77, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 31, 2f, 30, 2d, 6, 3, 55, 4, 3, 13, 26, 44, 69, 67, 69, 43, 65, 72, 74, 20, 53, 48, 41, 32, 20, 48, 69, 67, 68, 20, 41, 73, 73, 75, 72, 61, 6e, 63, 65, 20, 53, 65, 72, 76, 65, 72, 20, 43, 41, 30, 1e, 17, d, 31, 38, 30, 36, 31, 39, 30, 30, 30, 30, 30, 30, 5a, 17, d, 31, 39, 30, 37, 31, 30, 31, 32, 30, 30, 30, 30, 5a, 30, 68, 31, b, 30, 9, 6, 3, 55, 4, 6, 13, 2, 55, 53, 31, 13, 30, 11, 6, 3, 55, 4, 8, 13, a, 43, 61, 6c, 69, 66, 6f, 72, 6e, 69, 61, 31, 16, 30, 14, 6, 3, 55, 4, 7, 13, d, 53, 61, 6e, 20, 46, 72, 61, 6e, 63, 69, 73, 63, 6f, 31, 15, 30, 13, 6, 3, 55, 4, a, 13, c, 47, 69, 74, 48, 75, 62, 2c, 20, 49, 6e, 63, 2e, 31, 15, 30, 13, 6, 3, 55, 4, 3, c, c, 2a, 2e, 67, 69, 74, 68, 75, 62, 2e, 63, 6f, 6d, 30, 82, 1, 22, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, 1, 5, 0, 3, 82, 1, f, 0, 30, 82, 1, a, 2, 82, 1, 1, 0, cb, ed, d4, a7, ca, 81, 90, 89, ff, ed, 2f, 40, 7d, 69, 47, 39, df, 12, 75, 79, a7, 5b, 1f, 89, 8, 81, ef, 9d, 6c, e3, 15, c2, de, 2e, f4, 1b, da, b3, 2a, a8, 20, cb, e5, 70, e5, be, 4c, 82, e5, 26, 7c, 67, 22, c8, 4d, e9, 9e, 8f, 96, 89, 62, e0, 6f, cd, c2, 8f, cf, 26, 74, 41, f6, 19, 8a, c9, 14, f6, 7c, cb, da, a0, 50, 8f, c6, a5, cc, 92, 7f, 9, cd, f6, 1, 6b, ae, 5a, b3, eb, cd, 5c, 41, 98, e1, 16, f6, 4, 42, 18, 50, 83, de, 6d, 33, e7, 7c, ba, 1a, 37, 26, 5, 2d, b0, 71, 7e, d1, 6a, a, 9b, f, b8, 36, 7e, b1, 6, 92, 8e, 6, ee, 49, 96, f7, a1, fa, 77, 28, 76, 8f, d4, 68, bb, c4, f0, 0, ae, 82, 9d, b8, 97, 3c, 3, 3f, e5, e, 9d, c9, f7, 58, 94, 73, 82, 80, fe, f9, 17, b8, 61, 74, a0, 79, 82, 9a, 6b, 9b, d0, 3f, 3a, 74, 2c, 99, 98, d4, 3f, 3c, b8, bb, 41, a, b, 11, 3c, 31, f8, 41, 7a, b6, 6b, 65, da, 1d, f3, c6, 5d, c, 6d, c2, bd, 38, 26, d3, 9d, 1b, 73, e9, 46, 95, bb, 13, fa, cd, 3d, 96, 9d, 1d, 83, 14, 99, 21, e2, 3c, fa, cc, 95, d8, ec, 2d, e1, 81, 7f, 3d, d8, de, 7b, 29, ad, cd, 7, 48, c1, 2, 3, 1, 0, 1, a3, 82, 2, f8, 30, 82, 2, f4, 30, 1f, 6, 3, 55, 1d, 23, 4, 18, 30, 16, 80, 14, 51, 68, ff, 90, af, 2, 7, 75, 3c, cc, d9, 65, 64, 62, a2, 12, b8, 59, 72, 3b, 30, 1d, 6, 3, 55, 1d, e, 4, 16, 4, 14, 9f, 16, df, 7e, 50, 26, 6f, 63, 76, ef, 96, e1, 5a, 37, 84, 3a, 92, eb, f8, 3, 30, 23, 6, 3, 55, 1d, 11, 4, 1c, 30, 1a, 82, c, 2a, 2e, 67, 69, 74, 68, 75, 62, 2e, 63, 6f, 6d, 82, a, 67, 69, 74, 68, 75, 62, 2e, 63, 6f, 6d, 30, e, 6, 3, 55, 1d, f, 1, 1, ff, 4, 4, 3, 2, 5, a0, 30, 1d, 6, 3, 55, 1d, 25, 4, 16, 30, 14, 6, 8, 2b, 6, 1, 5, 5, 7, 3, 1, 6, 8, 2b, 6, 1, 5, 5, 7, 3, 2, 30, 75, 6, 3, 55, 1d, 1f, 4, 6e, 30, 6c, 30, 34, a0, 32, a0, 30, 86, 2e, 68, 74, 74, 70, 3a, 2f, 2f, 63, 72, 6c, 33, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 73, 68, 61, 32, 2d, 68, 61, 2d, 73, 65, 72, 76, 65, 72, 2d, 67, 36, 2e, 63, 72, 6c, 30, 34, a0, 32, a0, 30, 86, 2e, 68, 74, 74, 70, 3a, 2f, 2f, 63, 72, 6c, 34, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 73, 68, 61, 32, 2d, 68, 61, 2d, 73, 65, 72, 76, 65, 72, 2d, 67, 36, 2e, 63, 72, 6c, 30, 4c, 6, 3, 55, 1d, 20, 4, 45, 30, 43, 30, 37, 6, 9, 60, 86, 48, 1, 86, fd, 6c, 1, 1, 30, 2a, 30, 28, 6, 8, 2b, 6, 1, 5, 5, 7, 2, 1, 16, 1c, 68, 74, 74, 70, 73, 3a, 2f, 2f, 77, 77, 77, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 43, 50, 53, 30, 8, 6, 6, 67, 81, c, 1, 2, 2, 30, 81, 83, 6, 8, 2b, 6, 1, 5, 5, 7, 1, 1, 4, 77, 30, 75, 30, 24, 6, 8, 2b, 6, 1, 5, 5, 7, 30, 1, 86, 18, 68, 74, 74, 70, 3a, 2f, 2f, 6f, 63, 73, 70, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 30, 4d, 6, 8, 2b, 6, 1, 5, 5, 7, 30, 2, 86, 41, 68, 74, 74, 70, 3a, 2f, 2f, 63, 61, 63, 65, 72, 74, 73, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 44, 69, 67, 69, 43, 65, 72, 74, 53, 48, 41, 32, 48, 69, 67, 68, 41, 73, 73, 75, 72, 61, 6e, 63, 65, 53, 65, 72, 76, 65, 72, 43, 41, 2e, 63, 72, 74, 30, c, 6, 3, 55, 1d, 13, 1, 1, ff, 4, 2, 30, 0, 30, 82, 1, 3, 6, a, 2b, 6, 1, 4, 1, d6, 79, 2, 4, 2, 4, 81, f4, 4, 81, f1, 0, ef, 0, 75, 0, a4, b9, 9, 90, b4, 18, 58, 14, 87, bb, 13, a2, cc, 67, 70, a, 3c, 35, 98, 4, f9, 1b, df, b8, e3, 77, cd, e, c8, d, dc, 10, 0, 0, 1, 64, 19, 2c, ae, f2, 0, 0, 4, 3, 0, 46, 30, 44, 2, 20, 2b, a0, 98, 66, d8, 15, 6d, a, ef, 8b, 5c, ca, 80, 0, f8, 19, 66, 13, e, a4, 17, cf, 8a, 6b, 81, 8e, ce, 76, 8b, 15, 8e, 53, 2, 20, 8, 41, f1, ee, c6, 20, d2, 6, 63, 7, 5, af, 3b, 4f, d2, da, ea, 76, 8d, 8, cc, 5c, 43, a8, ac, c6, f1, b6, 5e, c8, b7, 58, 0, 76, 0, 87, 75, bf, e7, 59, 7c, f8, 8c, 43, 99, 5f, bd, f3, 6e, ff, 56, 8d, 47, 56, 36, ff, 4a, b5, 60, c1, b4, ea, ff, 5e, a0, 83, f, 0, 0, 1, 64, 19, 2c, af, cf, 0, 0, 4, 3, 0, 47, 30, 45, 2, 20, 32, 95, 91, fb, 81, 22, 88, f3, b4, 1d, 97, d1, 67, 8a, 77, f5, 33, 6a, e8, b5, 1c, 90, c, 9f, 13, e, 79, bf, 9f, f3, be, 6d, 2, 21, 0, 81, fa, 6d, e6, 65, 5b, ee, 3f, e9, f6, b, 5d, bd, a2, fe, 32, df, c9, 46, 9, 6d, a9, e4, bc, ec, 34, f, 26, 7a, 6e, b1, 86, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, b, 5, 0, 3, 82, 1, 1, 0, e, 79, 1f, a0, 17, 7d, 33, fd, 22, e7, b1, 61, 6b, a8, cc, d3, 7, 85, 1a, a6, 67, 8d, 10, 5, 39, 6c, b3, e6, 4c, 45, 18, 3, df, 62, c5, 86, e4, a3, 5e, c0, 74, 66, 80, 3f, 43, bd, 41, 51, b6, ce, 32, 70, a7, ae, f2, 65, 48, 78, ed, 4e, 50, 54, 3c, a6, 3d, 2e, b5, ba, 55, ed, 64, b2, 6b, f7, fc, 4b, 16, 7e, c7, e0, c7, 6f, 62, fe, a3, 8b, e7, 7d, f4, b7, 60, 77, 15, fc, c5, bd, e8, 71, 90, 61, 20, 36, f5, 21, 49, 90, 80, 72, 13, 88, c3, 23, 76, 1b, bc, b2, 45, 7f, 88, d5, 84, 1e, 23, b9, e5, 36, 1f, ba, 8, c7, ef, 34, 48, 7f, a6, 58, b6, 10, 94, 21, c2, ba, 42, a4, 9, 32, aa, db, 4a, 9c, c6, 7a, 49, 71, ab, 84, 4a, 72, 7, a7, 1f, 9b, af, ab, fb, 95, a9, e8, 33, 3a, fc, 48, fe, 42, 23, 1a, 39, e8, 9f, 32, 21, a2, bf, 4f, 42, b0, f8, 6c, ba, fa, d5, e, 92, 8, 44, 4f, e8, 44, 47, 1e, 81, 2d, 91, fb, ef, 61, 82, 29, 63, ce, 8b, dc, 12, cf, 14, c3, 94, 15, ff, f1, 4b, 50, 85, 74, 8f, 41, f, 48, 6d, 81, b8, b4, 93, 63, 37, e1, 15, 6, 54, b6, c9, f9, b9, b2, a1, 2d, f9, cc, ca, 17, ea, 8d, 6, 6c, 48, f3, 0, 4, b5, 30, 82, 4, b1, 30, 82, 3, 99, a0, 3, 2, 1, 2, 2, 10, 4, e1, e7, a4, dc, 5c, f2, f3, 6d, c0, 2b, 42, b8, 5d, 15, 9f, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, b, 5, 0, 30, 6c, 31, b, 30, 9, 6, 3, 55, 4, 6, 13, 2, 55, 53, 31, 15, 30, 13, 6, 3, 55, 4, a, 13, c, 44, 69, 67, 69, 43, 65, 72, 74, 20, 49, 6e, 63, 31, 19, 30, 17, 6, 3, 55, 4, b, 13, 10, 77, 77, 77, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 31, 2b, 30, 29, 6, 3, 55, 4, 3, 13, 22, 44, 69, 67, 69, 43, 65, 72, 74, 20, 48, 69, 67, 68, 20, 41, 73, 73, 75, 72, 61, 6e, 63, 65, 20, 45, 56, 20, 52, 6f, 6f, 74, 20, 43, 41, 30, 1e, 17, d, 31, 33, 31, 30, 32, 32, 31, 32, 30, 30, 30, 30, 5a, 17, d, 32, 38, 31, 30, 32, 32, 31, 32, 30, 30, 30, 30, 5a, 30, 70, 31, b, 30, 9, 6, 3, 55, 4, 6, 13, 2, 55, 53, 31, 15, 30, 13, 6, 3, 55, 4, a, 13, c, 44, 69, 67, 69, 43, 65, 72, 74, 20, 49, 6e, 63, 31, 19, 30, 17, 6, 3, 55, 4, b, 13, 10, 77, 77, 77, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 31, 2f, 30, 2d, 6, 3, 55, 4, 3, 13, 26, 44, 69, 67, 69, 43, 65, 72, 74, 20, 53, 48, 41, 32, 20, 48, 69, 67, 68, 20, 41, 73, 73, 75, 72, 61, 6e, 63, 65, 20, 53, 65, 72, 76, 65, 72, 20, 43, 41, 30, 82, 1, 22, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, 1, 5, 0, 3, 82, 1, f, 0, 30, 82, 1, a, 2, 82, 1, 1, 0, b6, e0, 2f, c2, 24, 6, c8, 6d, 4, 5f, d7, ef, a, 64, 6, b2, 7d, 22, 26, 65, 16, ae, 42, 40, 9b, ce, dc, 9f, 9f, 76, 7, 3e, c3, 30, 55, 87, 19, b9, 4f, 94, e, 5a, 94, 1f, 55, 56, b4, c2, 2, 2a, af, d0, 98, ee, b, 40, d7, c4, d0, 3b, 72, c8, 14, 9e, ef, 90, b1, 11, a9, ae, d2, c8, b8, 43, 3a, d9, b, b, d5, d5, 95, f5, 40, af, c8, 1d, ed, 4d, 9c, 5f, 57, b7, 86, 50, 68, 99, f5, 8a, da, d2, c7, 5, 1f, a8, 97, c9, dc, a4, b1, 82, 84, 2d, c6, ad, a5, 9c, c7, 19, 82, a6, 85, f, 5e, 44, 58, 2a, 37, 8f, fd, 35, f1, b, 8, 27, 32, 5a, f5, bb, 8b, 9e, a4, bd, 51, d0, 27, e2, dd, 3b, 42, 33, a3, 5, 28, c4, bb, 28, cc, 9a, ac, 2b, 23, d, 78, c6, 7b, e6, 5e, 71, b7, 4a, 3e, 8, fb, 81, b7, 16, 16, a1, 9d, 23, 12, 4d, e5, d7, 92, 8, ac, 75, a4, 9c, ba, cd, 17, b2, 1e, 44, 35, 65, 7f, 53, 25, 39, d1, 1c, a, 9a, 63, 1b, 19, 92, 74, 68, a, 37, c2, c2, 52, 48, cb, 39, 5a, a2, b6, e1, 5d, c1, dd, a0, 20, b8, 21, a2, 93, 26, 6f, 14, 4a, 21, 41, c7, ed, 6d, 9b, f2, 48, 2f, f3, 3, f5, a2, 68, 92, 53, 2f, 5e, e3, 2, 3, 1, 0, 1, a3, 82, 1, 49, 30, 82, 1, 45, 30, 12, 6, 3, 55, 1d, 13, 1, 1, ff, 4, 8, 30, 6, 1, 1, ff, 2, 1, 0, 30, e, 6, 3, 55, 1d, f, 1, 1, ff, 4, 4, 3, 2, 1, 86, 30, 1d, 6, 3, 55, 1d, 25, 4, 16, 30, 14, 6, 8, 2b, 6, 1, 5, 5, 7, 3, 1, 6, 8, 2b, 6, 1, 5, 5, 7, 3, 2, 30, 34, 6, 8, 2b, 6, 1, 5, 5, 7, 1, 1, 4, 28, 30, 26, 30, 24, 6, 8, 2b, 6, 1, 5, 5, 7, 30, 1, 86, 18, 68, 74, 74, 70, 3a, 2f, 2f, 6f, 63, 73, 70, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 30, 4b, 6, 3, 55, 1d, 1f, 4, 44, 30, 42, 30, 40, a0, 3e, a0, 3c, 86, 3a, 68, 74, 74, 70, 3a, 2f, 2f, 63, 72, 6c, 34, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 44, 69, 67, 69, 43, 65, 72, 74, 48, 69, 67, 68, 41, 73, 73, 75, 72, 61, 6e, 63, 65, 45, 56, 52, 6f, 6f, 74, 43, 41, 2e, 63, 72, 6c, 30, 3d, 6, 3, 55, 1d, 20, 4, 36, 30, 34, 30, 32, 6, 4, 55, 1d, 20, 0, 30, 2a, 30, 28, 6, 8, 2b, 6, 1, 5, 5, 7, 2, 1, 16, 1c, 68, 74, 74, 70, 73, 3a, 2f, 2f, 77, 77, 77, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 43, 50, 53, 30, 1d, 6, 3, 55, 1d, e, 4, 16, 4, 14, 51, 68, ff, 90, af, 2, 7, 75, 3c, cc, d9, 65, 64, 62, a2, 12, b8, 59, 72, 3b, 30, 1f, 6, 3, 55, 1d, 23, 4, 18, 30, 16, 80, 14, b1, 3e, c3, 69, 3, f8, bf, 47, 1, d4, 98, 26, 1a, 8, 2, ef, 63, 64, 2b, c3, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, b, 5, 0, 3, 82, 1, 1, 0, 18, 8a, 95, 89, 3, e6, 6d, df, 5c, fc, 1d, 68, ea, 4a, 8f, 83, d6, 51, 2f, 8d, 6b, 44, 16, 9e, ac, 63, f5, d2, 6e, 6c, 84, 99, 8b, aa, 81, 71, 84, 5b, ed, 34, 4e, b0, b7, 79, 92, 29, cc, 2d, 80, 6a, f0, 8e, 20, e1, 79, a4, fe, 3, 47, 13, ea, f5, 86, ca, 59, 71, 7d, f4, 4, 96, 6b, d3, 59, 58, 3d, fe, d3, 31, 25, 5c, 18, 38, 84, a3, e6, 9f, 82, fd, 8c, 5b, 98, 31, 4e, cd, 78, 9e, 1a, fd, 85, cb, 49, aa, f2, 27, 8b, 99, 72, fc, 3e, aa, d5, 41, b, da, d5, 36, a1, bf, 1c, 6e, 47, 49, 7f, 5e, d9, 48, 7c, 3, d9, fd, 8b, 49, a0, 98, 26, 42, 40, eb, d6, 92, 11, a4, 64, a, 57, 54, c4, f5, 1d, d6, 2, 5e, 6b, ac, ee, c4, 80, 9a, 12, 72, fa, 56, 93, d7, ff, bf, 30, 85, 6, 30, bf, b, 7f, 4e, ff, 57, 5, 9d, 24, ed, 85, c3, 2b, fb, a6, 75, a8, ac, 2d, 16, ef, 7d, 79, 27, b2, eb, c2, 9d, b, 7, ea, aa, 85, d3, 1, a3, 20, 28, 41, 59, 43, 28, d2, 81, e3, aa, f6, ec, 7b, 3b, 77, b6, 40, 62, 80, 5, 41, 45, 1, ef, 17, 6, 3e, de, c0, 33, 9b, 67, d3, 61, 2e, 72, 87, e4, 69, fc, 12, 0, 57, 40, 1e, 70, f5, 1e, c9, b4])) }

length of the packet payload is 2850


Bytes in tls frame one is 
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([b, 0, b, 1e, 0, b, 1b, 0, 6, 60, 30, 82, 6, 5c, 30, 82, 5, 44, a0, 3, 2, 1, 2, 2, 10, 4, 30, d9, 79, 1f, fc, b5, 20, ac, 33, 9f, a4, a7, 3a, 7b, 76, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, b, 5, 0, 30, 70, 31, b, 30, 9, 6, 3, 55, 4, 6, 13, 2, 55, 53, 31, 15, 30, 13, 6, 3, 55, 4, a, 13, c, 44, 69, 67, 69, 43, 65, 72, 74, 20, 49, 6e, 63, 31, 19, 30, 17, 6, 3, 55, 4, b, 13, 10, 77, 77, 77, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 31, 2f, 30, 2d, 6, 3, 55, 4, 3, 13, 26, 44, 69, 67, 69, 43, 65, 72, 74, 20, 53, 48, 41, 32, 20, 48, 69, 67, 68, 20, 41, 73, 73, 75, 72, 61, 6e, 63, 65, 20, 53, 65, 72, 76, 65, 72, 20, 43, 41, 30, 1e, 17, d, 31, 38, 30, 36, 31, 39, 30, 30, 30, 30, 30, 30, 5a, 17, d, 31, 39, 30, 37, 31, 30, 31, 32, 30, 30, 30, 30, 5a, 30, 68, 31, b, 30, 9, 6, 3, 55, 4, 6, 13, 2, 55, 53, 31, 13, 30, 11, 6, 3, 55, 4, 8, 13, a, 43, 61, 6c, 69, 66, 6f, 72, 6e, 69, 61, 31, 16, 30, 14, 6, 3, 55, 4, 7, 13, d, 53, 61, 6e, 20, 46, 72, 61, 6e, 63, 69, 73, 63, 6f, 31, 15, 30, 13, 6, 3, 55, 4, a, 13, c, 47, 69, 74, 48, 75, 62, 2c, 20, 49, 6e, 63, 2e, 31, 15, 30, 13, 6, 3, 55, 4, 3, c, c, 2a, 2e, 67, 69, 74, 68, 75, 62, 2e, 63, 6f, 6d, 30, 82, 1, 22, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, 1, 5, 0, 3, 82, 1, f, 0, 30, 82, 1, a, 2, 82, 1, 1, 0, cb, ed, d4, a7, ca, 81, 90, 89, ff, ed, 2f, 40, 7d, 69, 47, 39, df, 12, 75, 79, a7, 5b, 1f, 89, 8, 81, ef, 9d, 6c, e3, 15, c2, de, 2e, f4, 1b, da, b3, 2a, a8, 20, cb, e5, 70, e5, be, 4c, 82, e5, 26, 7c, 67, 22, c8, 4d, e9, 9e, 8f, 96, 89, 62, e0, 6f, cd, c2, 8f, cf, 26, 74, 41, f6, 19, 8a, c9, 14, f6, 7c, cb, da, a0, 50, 8f, c6, a5, cc, 92, 7f, 9, cd, f6, 1, 6b, ae, 5a, b3, eb, cd, 5c, 41, 98, e1, 16, f6, 4, 42, 18, 50, 83, de, 6d, 33, e7, 7c, ba, 1a, 37, 26, 5, 2d, b0, 71, 7e, d1, 6a, a, 9b, f, b8, 36, 7e, b1, 6, 92, 8e, 6, ee, 49, 96, f7, a1, fa, 77, 28, 76, 8f, d4, 68, bb, c4, f0, 0, ae, 82, 9d, b8, 97, 3c, 3, 3f, e5, e, 9d, c9, f7, 58, 94, 73, 82, 80, fe, f9, 17, b8, 61, 74, a0, 79, 82, 9a, 6b, 9b, d0, 3f, 3a, 74, 2c, 99, 98, d4, 3f, 3c, b8, bb, 41, a, b, 11, 3c, 31, f8, 41, 7a, b6, 6b, 65, da, 1d, f3, c6, 5d, c, 6d, c2, bd, 38, 26, d3, 9d, 1b, 73, e9, 46, 95, bb, 13, fa, cd, 3d, 96, 9d, 1d, 83, 14, 99, 21, e2, 3c, fa, cc, 95, d8, ec, 2d, e1, 81, 7f, 3d, d8, de, 7b, 29, ad, cd, 7, 48, c1, 2, 3, 1, 0, 1, a3, 82, 2, f8, 30, 82, 2, f4, 30, 1f, 6, 3, 55, 1d, 23, 4, 18, 30, 16, 80, 14, 51, 68, ff, 90, af, 2, 7, 75, 3c, cc, d9, 65, 64, 62, a2, 12, b8, 59, 72, 3b, 30, 1d, 6, 3, 55, 1d, e, 4, 16, 4, 14, 9f, 16, df, 7e, 50, 26, 6f, 63, 76, ef, 96, e1, 5a, 37, 84, 3a, 92, eb, f8, 3, 30, 23, 6, 3, 55, 1d, 11, 4, 1c, 30, 1a, 82, c, 2a, 2e, 67, 69, 74, 68, 75, 62, 2e, 63, 6f, 6d, 82, a, 67, 69, 74, 68, 75, 62, 2e, 63, 6f, 6d, 30, e, 6, 3, 55, 1d, f, 1, 1, ff, 4, 4, 3, 2, 5, a0, 30, 1d, 6, 3, 55, 1d, 25, 4, 16, 30, 14, 6, 8, 2b, 6, 1, 5, 5, 7, 3, 1, 6, 8, 2b, 6, 1, 5, 5, 7, 3, 2, 30, 75, 6, 3, 55, 1d, 1f, 4, 6e, 30, 6c, 30, 34, a0, 32, a0, 30, 86, 2e, 68, 74, 74, 70, 3a, 2f, 2f, 63, 72, 6c, 33, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 73, 68, 61, 32, 2d, 68, 61, 2d, 73, 65, 72, 76, 65, 72, 2d, 67, 36, 2e, 63, 72, 6c, 30, 34, a0, 32, a0, 30, 86, 2e, 68, 74, 74, 70, 3a, 2f, 2f, 63, 72, 6c, 34, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 73, 68, 61, 32, 2d, 68, 61, 2d, 73, 65, 72, 76, 65, 72, 2d, 67, 36, 2e, 63, 72, 6c, 30, 4c, 6, 3, 55, 1d, 20, 4, 45, 30, 43, 30, 37, 6, 9, 60, 86, 48, 1, 86, fd, 6c, 1, 1, 30, 2a, 30, 28, 6, 8, 2b, 6, 1, 5, 5, 7, 2, 1, 16, 1c, 68, 74, 74, 70, 73, 3a, 2f, 2f, 77, 77, 77, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 43, 50, 53, 30, 8, 6, 6, 67, 81, c, 1, 2, 2, 30, 81, 83, 6, 8, 2b, 6, 1, 5, 5, 7, 1, 1, 4, 77, 30, 75, 30, 24, 6, 8, 2b, 6, 1, 5, 5, 7, 30, 1, 86, 18, 68, 74, 74, 70, 3a, 2f, 2f, 6f, 63, 73, 70, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 30, 4d, 6, 8, 2b, 6, 1, 5, 5, 7, 30, 2, 86, 41, 68, 74, 74, 70, 3a, 2f, 2f, 63, 61, 63, 65, 72, 74, 73, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 44, 69, 67, 69, 43, 65, 72, 74, 53, 48, 41, 32, 48, 69, 67, 68, 41, 73, 73, 75, 72, 61, 6e, 63, 65, 53, 65, 72, 76, 65, 72, 43, 41, 2e, 63, 72, 74, 30, c, 6, 3, 55, 1d, 13, 1, 1, ff, 4, 2, 30, 0, 30, 82, 1, 3, 6, a, 2b, 6, 1, 4, 1, d6, 79, 2, 4, 2, 4, 81, f4, 4, 81, f1, 0, ef, 0, 75, 0, a4, b9, 9, 90, b4, 18, 58, 14, 87, bb, 13, a2, cc, 67, 70, a, 3c, 35, 98, 4, f9, 1b, df, b8, e3, 77, cd, e, c8, d, dc, 10, 0, 0, 1, 64, 19, 2c, ae, f2, 0, 0, 4, 3, 0, 46, 30, 44, 2, 20, 2b, a0, 98, 66, d8, 15, 6d, a, ef, 8b, 5c, ca, 80, 0, f8, 19, 66, 13, e, a4, 17, cf, 8a, 6b, 81, 8e, ce, 76, 8b, 15, 8e, 53, 2, 20, 8, 41, f1, ee, c6, 20, d2, 6, 63, 7, 5, af, 3b, 4f, d2, da, ea, 76, 8d, 8, cc, 5c, 43, a8, ac, c6, f1, b6, 5e, c8, b7, 58, 0, 76, 0, 87, 75, bf, e7, 59, 7c, f8, 8c, 43, 99, 5f, bd, f3, 6e, ff, 56, 8d, 47, 56, 36, ff, 4a, b5, 60, c1, b4, ea, ff, 5e, a0, 83, f, 0, 0, 1, 64, 19, 2c, af, cf, 0, 0, 4, 3, 0, 47, 30, 45, 2, 20, 32, 95, 91, fb, 81, 22, 88, f3, b4, 1d, 97, d1, 67, 8a, 77, f5, 33, 6a, e8, b5, 1c, 90, c, 9f, 13, e, 79, bf, 9f, f3, be, 6d, 2, 21, 0, 81, fa, 6d, e6, 65, 5b, ee, 3f, e9, f6, b, 5d, bd, a2, fe, 32, df, c9, 46, 9, 6d, a9, e4, bc, ec, 34, f, 26, 7a, 6e, b1, 86, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, b, 5, 0, 3, 82, 1, 1, 0, e, 79, 1f, a0, 17, 7d, 33, fd, 22, e7, b1, 61, 6b, a8, cc, d3, 7, 85, 1a, a6, 67, 8d, 10, 5, 39, 6c, b3, e6, 4c, 45, 18, 3, df, 62, c5, 86, e4, a3, 5e, c0, 74, 66, 80, 3f, 43, bd, 41, 51, b6, ce, 32, 70, a7, ae, f2, 65, 48, 78, ed, 4e, 50, 54, 3c, a6, 3d, 2e, b5, ba, 55, ed, 64, b2, 6b, f7, fc, 4b, 16, 7e, c7, e0, c7, 6f, 62, fe, a3, 8b, e7, 7d, f4, b7, 60, 77, 15, fc, c5, bd, e8, 71, 90, 61, 20, 36, f5, 21, 49, 90, 80, 72, 13, 88, c3, 23, 76, 1b, bc, b2, 45, 7f, 88, d5, 84, 1e, 23, b9, e5, 36, 1f, ba, 8, c7, ef, 34, 48, 7f, a6, 58, b6, 10, 94, 21, c2, ba, 42, a4, 9, 32, aa, db, 4a, 9c, c6, 7a, 49, 71, ab, 84, 4a, 72, 7, a7, 1f, 9b, af, ab, fb, 95, a9, e8, 33, 3a, fc, 48, fe, 42, 23, 1a, 39, e8, 9f, 32, 21, a2, bf, 4f, 42, b0, f8, 6c, ba, fa, d5, e, 92, 8, 44, 4f, e8, 44, 47, 1e, 81, 2d, 91, fb, ef, 61, 82, 29, 63, ce, 8b, dc, 12, cf, 14, c3, 94, 15, ff, f1, 4b, 50, 85, 74, 8f, 41, f, 48, 6d, 81, b8, b4, 93, 63, 37, e1, 15, 6, 54, b6, c9, f9, b9, b2, a1, 2d, f9, cc, ca, 17, ea, 8d, 6, 6c, 48, f3, 0, 4, b5, 30, 82, 4, b1, 30, 82, 3, 99, a0, 3, 2, 1, 2, 2, 10, 4, e1, e7, a4, dc, 5c, f2, f3, 6d, c0, 2b, 42, b8, 5d, 15, 9f, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, b, 5, 0, 30, 6c, 31, b, 30, 9, 6, 3, 55, 4, 6, 13, 2, 55, 53, 31, 15, 30, 13, 6, 3, 55, 4, a, 13, c, 44, 69, 67, 69, 43, 65, 72, 74, 20, 49, 6e, 63, 31, 19, 30, 17, 6, 3, 55, 4, b, 13, 10, 77, 77, 77, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 31, 2b, 30, 29, 6, 3, 55, 4, 3, 13, 22, 44, 69, 67, 69, 43, 65, 72, 74, 20, 48, 69, 67, 68, 20, 41, 73, 73, 75, 72, 61, 6e, 63, 65, 20, 45, 56, 20, 52, 6f, 6f, 74, 20, 43, 41, 30, 1e, 17, d, 31, 33, 31, 30, 32, 32, 31, 32, 30, 30, 30, 30, 5a, 17, d, 32, 38, 31, 30, 32, 32, 31, 32, 30, 30, 30, 30, 5a, 30, 70, 31, b, 30, 9, 6, 3, 55, 4, 6, 13, 2, 55, 53, 31, 15, 30, 13, 6, 3, 55, 4, a, 13, c, 44, 69, 67, 69, 43, 65, 72, 74, 20, 49, 6e, 63, 31, 19, 30, 17, 6, 3, 55, 4, b, 13, 10, 77, 77, 77, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 31, 2f, 30, 2d, 6, 3, 55, 4, 3, 13, 26, 44, 69, 67, 69, 43, 65, 72, 74, 20, 53, 48, 41, 32, 20, 48, 69, 67, 68, 20, 41, 73, 73, 75, 72, 61, 6e, 63, 65, 20, 53, 65, 72, 76, 65, 72, 20, 43, 41, 30, 82, 1, 22, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, 1, 5, 0, 3, 82, 1, f, 0, 30, 82, 1, a, 2, 82, 1, 1, 0, b6, e0, 2f, c2, 24, 6, c8, 6d, 4, 5f, d7, ef, a, 64, 6, b2, 7d, 22, 26, 65, 16, ae, 42, 40, 9b, ce, dc, 9f, 9f, 76, 7, 3e, c3, 30, 55, 87, 19, b9, 4f, 94, e, 5a, 94, 1f, 55, 56, b4, c2, 2, 2a, af, d0, 98, ee, b, 40, d7, c4, d0, 3b, 72, c8, 14, 9e, ef, 90, b1, 11, a9, ae, d2, c8, b8, 43, 3a, d9, b, b, d5, d5, 95, f5, 40, af, c8, 1d, ed, 4d, 9c, 5f, 57, b7, 86, 50, 68, 99, f5, 8a, da, d2, c7, 5, 1f, a8, 97, c9, dc, a4, b1, 82, 84, 2d, c6, ad, a5, 9c, c7, 19, 82, a6, 85, f, 5e, 44, 58, 2a, 37, 8f, fd, 35, f1, b, 8, 27, 32, 5a, f5, bb, 8b, 9e, a4, bd, 51, d0, 27, e2, dd, 3b, 42, 33, a3, 5, 28, c4, bb, 28, cc, 9a, ac, 2b, 23, d, 78, c6, 7b, e6, 5e, 71, b7, 4a, 3e, 8, fb, 81, b7, 16, 16, a1, 9d, 23, 12, 4d, e5, d7, 92, 8, ac, 75, a4, 9c, ba, cd, 17, b2, 1e, 44, 35, 65, 7f, 53, 25, 39, d1, 1c, a, 9a, 63, 1b, 19, 92, 74, 68, a, 37, c2, c2, 52, 48, cb, 39, 5a, a2, b6, e1, 5d, c1, dd, a0, 20, b8, 21, a2, 93, 26, 6f, 14, 4a, 21, 41, c7, ed, 6d, 9b, f2, 48, 2f, f3, 3, f5, a2, 68, 92, 53, 2f, 5e, e3, 2, 3, 1, 0, 1, a3, 82, 1, 49, 30, 82, 1, 45, 30, 12, 6, 3, 55, 1d, 13, 1, 1, ff, 4, 8, 30, 6, 1, 1, ff, 2, 1, 0, 30, e, 6, 3, 55, 1d, f, 1, 1, ff, 4, 4, 3, 2, 1, 86, 30, 1d, 6, 3, 55, 1d, 25, 4, 16, 30, 14, 6, 8, 2b, 6, 1, 5, 5, 7, 3, 1, 6, 8, 2b, 6, 1, 5, 5, 7, 3, 2, 30, 34, 6, 8, 2b, 6, 1, 5, 5, 7, 1, 1, 4, 28, 30, 26, 30, 24, 6, 8, 2b, 6, 1, 5, 5, 7, 30, 1, 86, 18, 68, 74, 74, 70, 3a, 2f, 2f, 6f, 63, 73, 70, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 30, 4b, 6, 3, 55, 1d, 1f, 4, 44, 30, 42, 30, 40, a0, 3e, a0, 3c, 86, 3a, 68, 74, 74, 70, 3a, 2f, 2f, 63, 72, 6c, 34, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 44, 69, 67, 69, 43, 65, 72, 74, 48, 69, 67, 68, 41, 73, 73, 75, 72, 61, 6e, 63, 65, 45, 56, 52, 6f, 6f, 74, 43, 41, 2e, 63, 72, 6c, 30, 3d, 6, 3, 55, 1d, 20, 4, 36, 30, 34, 30, 32, 6, 4, 55, 1d, 20, 0, 30, 2a, 30, 28, 6, 8, 2b, 6, 1, 5, 5, 7, 2, 1, 16, 1c, 68, 74, 74, 70, 73, 3a, 2f, 2f, 77, 77, 77, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 43, 50, 53, 30, 1d, 6, 3, 55, 1d, e, 4, 16, 4, 14, 51, 68, ff, 90, af, 2, 7, 75, 3c, cc, d9, 65, 64, 62, a2, 12, b8, 59, 72, 3b, 30, 1f, 6, 3, 55, 1d, 23, 4, 18, 30, 16, 80, 14, b1, 3e, c3, 69, 3, f8, bf, 47, 1, d4, 98, 26, 1a, 8, 2, ef, 63, 64, 2b, c3, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, b, 5, 0, 3, 82, 1, 1, 0, 18, 8a, 95, 89, 3, e6, 6d, df, 5c, fc, 1d, 68, ea, 4a, 8f, 83, d6, 51, 2f, 8d, 6b, 44, 16, 9e, ac, 63, f5, d2, 6e, 6c, 84, 99, 8b, aa, 81, 71, 84, 5b, ed, 34, 4e, b0, b7, 79, 92, 29, cc, 2d, 80, 6a, f0, 8e, 20, e1, 79, a4, fe, 3, 47, 13, ea, f5, 86, ca, 59, 71, 7d, f4, 4, 96, 6b, d3, 59, 58, 3d, fe, d3, 31, 25, 5c, 18, 38, 84, a3, e6, 9f, 82, fd, 8c, 5b, 98, 31, 4e, cd, 78, 9e, 1a, fd, 85, cb, 49, aa, f2, 27, 8b, 99, 72, fc, 3e, aa, d5, 41, b, da, d5, 36, a1, bf, 1c, 6e, 47, 49, 7f, 5e, d9, 48, 7c, 3, d9, fd, 8b, 49, a0, 98, 26, 42, 40, eb, d6, 92, 11, a4, 64, a, 57, 54, c4, f5, 1d, d6, 2, 5e, 6b, ac, ee, c4, 80, 9a, 12, 72, fa, 56, 93, d7, ff, bf, 30, 85, 6, 30, bf, b, 7f, 4e, ff, 57, 5, 9d, 24, ed, 85, c3, 2b, fb, a6, 75, a8, ac, 2d, 16, ef, 7d, 79, 27, b2, eb, c2, 9d, b, 7, ea, aa, 85, d3, 1, a3, 20, 28, 41, 59, 43, 28, d2, 81, e3, aa, f6, ec, 7b, 3b, 77, b6, 40, 62, 80, 5, 41, 45, 1, ef, 17, 6, 3e, de, c0, 33, 9b, 67, d3, 61, 2e, 72, 87, e4, 69, fc, 12, 0, 57, 40, 1e, 70, f5, 1e, c9, b4])) }

length of the packet payload is 2850

Certificate payload is
[Certificate(b"0\x82\x06\\0\x82\x05D\xa0\x03\x02\x01\x02\x02\x10\x040\xd9y\x1f\xfc\xb5 \xac3\x9f\xa4\xa7:{v0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\00p1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1\x190\x17\x06\x03U\x04\x0b\x13\x10www.digicert.com1/0-\x06\x03U\x04\x03\x13&DigiCert SHA2 High Assurance Server CA0\x1e\x17\r180619000000Z\x17\r190710120000Z0h1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x130\x11\x06\x03U\x04\x08\x13\nCalifornia1\x160\x14\x06\x03U\x04\x07\x13\rSan Francisco1\x150\x13\x06\x03U\x04\n\x13\x0cGitHub, Inc.1\x150\x13\x06\x03U\x04\x03\x0c\x0c*.github.com0\x82\x01\"0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x01\x05\0\x03\x82\x01\x0f\00\x82\x01\n\x02\x82\x01\x01\0\xcb\xed\xd4\xa7\xca\x81\x90\x89\xff\xed/@}iG9\xdf\x12uy\xa7[\x1f\x89\x08\x81\xef\x9dl\xe3\x15\xc2\xde.\xf4\x1b\xda\xb3*\xa8 \xcb\xe5p\xe5\xbeL\x82\xe5&|g\"\xc8M\xe9\x9e\x8f\x96\x89b\xe0o\xcd\xc2\x8f\xcf&tA\xf6\x19\x8a\xc9\x14\xf6|\xcb\xda\xa0P\x8f\xc6\xa5\xcc\x92\x7f\t\xcd\xf6\x01k\xaeZ\xb3\xeb\xcd\\A\x98\xe1\x16\xf6\x04B\x18P\x83\xdem3\xe7|\xba\x1a7&\x05-\xb0q~\xd1j\n\x9b\x0f\xb86~\xb1\x06\x92\x8e\x06\xeeI\x96\xf7\xa1\xfaw(v\x8f\xd4h\xbb\xc4\xf0\0\xae\x82\x9d\xb8\x97<\x03?\xe5\x0e\x9d\xc9\xf7X\x94s\x82\x80\xfe\xf9\x17\xb8at\xa0y\x82\x9ak\x9b\xd0?:t,\x99\x98\xd4?<\xb8\xbbA\n\x0b\x11<1\xf8Az\xb6ke\xda\x1d\xf3\xc6]\x0cm\xc2\xbd8&\xd3\x9d\x1bs\xe9F\x95\xbb\x13\xfa\xcd=\x96\x9d\x1d\x83\x14\x99!\xe2<\xfa\xcc\x95\xd8\xec-\xe1\x81\x7f=\xd8\xde{)\xad\xcd\x07H\xc1\x02\x03\x01\0\x01\xa3\x82\x02\xf80\x82\x02\xf40\x1f\x06\x03U\x1d#\x04\x180\x16\x80\x14Qh\xff\x90\xaf\x02\x07u<\xcc\xd9edb\xa2\x12\xb8Yr;0\x1d\x06\x03U\x1d\x0e\x04\x16\x04\x14\x9f\x16\xdf~P&ocv\xef\x96\xe1Z7\x84:\x92\xeb\xf8\x030#\x06\x03U\x1d\x11\x04\x1c0\x1a\x82\x0c*.github.com\x82\ngithub.com0\x0e\x06\x03U\x1d\x0f\x01\x01\xff\x04\x04\x03\x02\x05\xa00\x1d\x06\x03U\x1d%\x04\x160\x14\x06\x08+\x06\x01\x05\x05\x07\x03\x01\x06\x08+\x06\x01\x05\x05\x07\x03\x020u\x06\x03U\x1d\x1f\x04n0l04\xa02\xa00\x86.http://crl3.digicert.com/sha2-ha-server-g6.crl04\xa02\xa00\x86.http://crl4.digicert.com/sha2-ha-server-g6.crl0L\x06\x03U\x1d \x04E0C07\x06\t`\x86H\x01\x86\xfdl\x01\x010*0(\x06\x08+\x06\x01\x05\x05\x07\x02\x01\x16\x1chttps://www.digicert.com/CPS0\x08\x06\x06g\x81\x0c\x01\x02\x020\x81\x83\x06\x08+\x06\x01\x05\x05\x07\x01\x01\x04w0u0$\x06\x08+\x06\x01\x05\x05\x070\x01\x86\x18http://ocsp.digicert.com0M\x06\x08+\x06\x01\x05\x05\x070\x02\x86Ahttp://cacerts.digicert.com/DigiCertSHA2HighAssuranceServerCA.crt0\x0c\x06\x03U\x1d\x13\x01\x01\xff\x04\x020\00\x82\x01\x03\x06\n+\x06\x01\x04\x01\xd6y\x02\x04\x02\x04\x81\xf4\x04\x81\xf1\0\xef\0u\0\xa4\xb9\t\x90\xb4\x18X\x14\x87\xbb\x13\xa2\xccgp\n<5\x98\x04\xf9\x1b\xdf\xb8\xe3w\xcd\x0e\xc8\r\xdc\x10\0\0\x01d\x19,\xae\xf2\0\0\x04\x03\0F0D\x02 +\xa0\x98f\xd8\x15m\n\xef\x8b\\\xca\x80\0\xf8\x19f\x13\x0e\xa4\x17\xcf\x8ak\x81\x8e\xcev\x8b\x15\x8eS\x02 \x08A\xf1\xee\xc6 \xd2\x06c\x07\x05\xaf;O\xd2\xda\xeav\x8d\x08\xcc\\C\xa8\xac\xc6\xf1\xb6^\xc8\xb7X\0v\0\x87u\xbf\xe7Y|\xf8\x8cC\x99_\xbd\xf3n\xffV\x8dGV6\xffJ\xb5`\xc1\xb4\xea\xff^\xa0\x83\x0f\0\0\x01d\x19,\xaf\xcf\0\0\x04\x03\0G0E\x02 2\x95\x91\xfb\x81\"\x88\xf3\xb4\x1d\x97\xd1g\x8aw\xf53j\xe8\xb5\x1c\x90\x0c\x9f\x13\x0ey\xbf\x9f\xf3\xbem\x02!\0\x81\xfam\xe6e[\xee?\xe9\xf6\x0b]\xbd\xa2\xfe2\xdf\xc9F\tm\xa9\xe4\xbc\xec4\x0f&zn\xb1\x860\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\0\x03\x82\x01\x01\0\x0ey\x1f\xa0\x17}3\xfd\"\xe7\xb1ak\xa8\xcc\xd3\x07\x85\x1a\xa6g\x8d\x10\x059l\xb3\xe6LE\x18\x03\xdfb\xc5\x86\xe4\xa3^\xc0tf\x80?C\xbdAQ\xb6\xce2p\xa7\xae\xf2eHx\xedNPT<\xa6=.\xb5\xbaU\xedd\xb2k\xf7\xfcK\x16~\xc7\xe0\xc7ob\xfe\xa3\x8b\xe7}\xf4\xb7`w\x15\xfc\xc5\xbd\xe8q\x90a 6\xf5!I\x90\x80r\x13\x88\xc3#v\x1b\xbc\xb2E\x7f\x88\xd5\x84\x1e#\xb9\xe56\x1f\xba\x08\xc7\xef4H\x7f\xa6X\xb6\x10\x94!\xc2\xbaB\xa4\t2\xaa\xdbJ\x9c\xc6zIq\xab\x84Jr\x07\xa7\x1f\x9b\xaf\xab\xfb\x95\xa9\xe83:\xfcH\xfeB#\x1a9\xe8\x9f2!\xa2\xbfOB\xb0\xf8l\xba\xfa\xd5\x0e\x92\x08DO\xe8DG\x1e\x81-\x91\xfb\xefa\x82)c\xce\x8b\xdc\x12\xcf\x14\xc3\x94\x15\xff\xf1KP\x85t\x8fA\x0fHm\x81\xb8\xb4\x93c7\xe1\x15\x06T\xb6\xc9\xf9\xb9\xb2\xa1-\xf9\xcc\xca\x17\xea\x8d\x06lH\xf3"), Certificate(b"0\x82\x04\xb10\x82\x03\x99\xa0\x03\x02\x01\x02\x02\x10\x04\xe1\xe7\xa4\xdc\\\xf2\xf3m\xc0+B\xb8]\x15\x9f0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\00l1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1\x190\x17\x06\x03U\x04\x0b\x13\x10www.digicert.com1+0)\x06\x03U\x04\x03\x13\"DigiCert High Assurance EV Root CA0\x1e\x17\r131022120000Z\x17\r281022120000Z0p1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1\x190\x17\x06\x03U\x04\x0b\x13\x10www.digicert.com1/0-\x06\x03U\x04\x03\x13&DigiCert SHA2 High Assurance Server CA0\x82\x01\"0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x01\x05\0\x03\x82\x01\x0f\00\x82\x01\n\x02\x82\x01\x01\0\xb6\xe0/\xc2$\x06\xc8m\x04_\xd7\xef\nd\x06\xb2}\"&e\x16\xaeB@\x9b\xce\xdc\x9f\x9fv\x07>\xc30U\x87\x19\xb9O\x94\x0eZ\x94\x1fUV\xb4\xc2\x02*\xaf\xd0\x98\xee\x0b@\xd7\xc4\xd0;r\xc8\x14\x9e\xef\x90\xb1\x11\xa9\xae\xd2\xc8\xb8C:\xd9\x0b\x0b\xd5\xd5\x95\xf5@\xaf\xc8\x1d\xedM\x9c_W\xb7\x86Ph\x99\xf5\x8a\xda\xd2\xc7\x05\x1f\xa8\x97\xc9\xdc\xa4\xb1\x82\x84-\xc6\xad\xa5\x9c\xc7\x19\x82\xa6\x85\x0f^DX*7\x8f\xfd5\xf1\x0b\x08'2Z\xf5\xbb\x8b\x9e\xa4\xbdQ\xd0'\xe2\xdd;B3\xa3\x05(\xc4\xbb(\xcc\x9a\xac+#\rx\xc6{\xe6^q\xb7J>\x08\xfb\x81\xb7\x16\x16\xa1\x9d#\x12M\xe5\xd7\x92\x08\xacu\xa4\x9c\xba\xcd\x17\xb2\x1eD5e\x7fS%9\xd1\x1c\n\x9ac\x1b\x19\x92th\n7\xc2\xc2RH\xcb9Z\xa2\xb6\xe1]\xc1\xdd\xa0 \xb8!\xa2\x93&o\x14J!A\xc7\xedm\x9b\xf2H/\xf3\x03\xf5\xa2h\x92S/^\xe3\x02\x03\x01\0\x01\xa3\x82\x01I0\x82\x01E0\x12\x06\x03U\x1d\x13\x01\x01\xff\x04\x080\x06\x01\x01\xff\x02\x01\00\x0e\x06\x03U\x1d\x0f\x01\x01\xff\x04\x04\x03\x02\x01\x860\x1d\x06\x03U\x1d%\x04\x160\x14\x06\x08+\x06\x01\x05\x05\x07\x03\x01\x06\x08+\x06\x01\x05\x05\x07\x03\x0204\x06\x08+\x06\x01\x05\x05\x07\x01\x01\x04(0&0$\x06\x08+\x06\x01\x05\x05\x070\x01\x86\x18http://ocsp.digicert.com0K\x06\x03U\x1d\x1f\x04D0B0@\xa0>\xa0<\x86:http://crl4.digicert.com/DigiCertHighAssuranceEVRootCA.crl0=\x06\x03U\x1d \x0460402\x06\x04U\x1d \00*0(\x06\x08+\x06\x01\x05\x05\x07\x02\x01\x16\x1chttps://www.digicert.com/CPS0\x1d\x06\x03U\x1d\x0e\x04\x16\x04\x14Qh\xff\x90\xaf\x02\x07u<\xcc\xd9edb\xa2\x12\xb8Yr;0\x1f\x06\x03U\x1d#\x04\x180\x16\x80\x14\xb1>\xc3i\x03\xf8\xbfG\x01\xd4\x98&\x1a\x08\x02\xefcd+\xc30\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\0\x03\x82\x01\x01\0\x18\x8a\x95\x89\x03\xe6m\xdf\\\xfc\x1dh\xeaJ\x8f\x83\xd6Q/\x8dkD\x16\x9e\xacc\xf5\xd2nl\x84\x99\x8b\xaa\x81q\x84[\xed4N\xb0\xb7y\x92)\xcc-\x80j\xf0\x8e \xe1y\xa4\xfe\x03G\x13\xea\xf5\x86\xcaYq}\xf4\x04\x96k\xd3YX=\xfe\xd31%\\\x188\x84\xa3\xe6\x9f\x82\xfd\x8c[\x981N\xcdx\x9e\x1a\xfd\x85\xcbI\xaa\xf2'\x8b\x99r\xfc>\xaa\xd5A\x0b\xda\xd56\xa1\xbf\x1cnGI\x7f^\xd9H|\x03\xd9\xfd\x8bI\xa0\x98&B@\xeb\xd6\x92\x11\xa4d\nWT\xc4\xf5\x1d\xd6\x02^k\xac\xee\xc4\x80\x9a\x12r\xfaV\x93\xd7\xff\xbf0\x85\x060\xbf\x0b\x7fN\xffW\x05\x9d$\xed\x85\xc3+\xfb\xa6u\xa8\xac-\x16\xef}y'\xb2\xeb\xc2\x9d\x0b\x07\xea\xaa\x85\xd3\x01\xa3 (AYC(\xd2\x81\xe3\xaa\xf6\xec{;w\xb6@b\x80\x05AE\x01\xef\x17\x06>\xde\xc03\x9bg\xd3a.r\x87\xe4i\xfc\x12\0W@\x1ep\xf5\x1e\xc9\xb4")]

And the magic number is 2855


Bytes in tls frame one is 
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([c, 0, 1, 28, 3, 0, 1d, 20, c1, 5e, ed, 96, e7, 38, 2a, 7, 58, 85, 4d, 90, b, 6f, ea, 6d, b6, 43, 5b, 68, 44, 98, 3c, ff, a5, 3, 52, 34, 10, 59, e3, 4c, 8, 4, 1, 0, 4a, d1, f5, dd, 60, 9f, 84, d4, 9f, a9, 22, 93, b1, 9e, 8d, 92, c, 65, 93, c3, 1c, a2, 69, 6d, 2f, 93, 15, de, 15, 16, c9, a9, 38, 3, 64, f8, 32, 93, f3, 93, ec, bc, cd, a8, 76, 14, 73, 42, 2d, 8c, f4, 2c, d2, f3, 15, 6d, d6, 3d, 31, b1, bf, d1, 20, 63, d0, 49, b3, 9f, ae, fa, ee, 33, d1, 4a, b3, 79, c9, f0, e3, 48, bc, 2d, 24, 26, 2a, c4, b9, 8b, 9a, b5, 79, 4c, 8f, d6, db, eb, 3c, bf, 78, 5e, 63, b, e, cc, b, 7e, 40, 3a, 5c, ec, 0, 2d, f6, 1c, d8, e3, a5, eb, de, b8, 77, b, 74, ec, d7, cb, dd, 24, f6, d8, 9, a7, 36, 5, a0, 86, d3, 9a, fe, 9d, d5, d9, b2, 83, f8, da, e3, cc, 19, 70, ed, 7f, a7, 8d, 88, 6d, 96, 74, ac, c2, 1b, 31, c, 13, 3f, de, dd, 79, 3e, c8, 51, 40, b1, 52, b6, b6, 34, 5f, 2a, c2, b7, b7, 8c, 79, 3b, 7e, e7, 3b, 42, 6, 11, 90, 2d, 3, 49, db, 60, f5, 2c, 25, a3, 5c, ad, 70, 37, 2f, d7, a8, 3c, a8, 18, 1d, 8e, f3, 83, a8, c8, 6b, ca, 54, a3, fc, 4f, bb, 13, 52, b1, 9e, 60, e2, eb, d, 2c, 99, 4c, ac, 67, 5d, 19, 2d, 19, 98, 6c, b8, 9, 2a, 99, cd, 49, 2e, d1, ad, 86, bc, 6c, fd])) }

length of the packet payload is 300


Server Key Exchange 
Unknown(Payload([3, 0, 29, 32, 193, 94, 237, 150, 231, 56, 42, 7, 88, 133, 77, 144, 11, 111, 234, 109, 182, 67, 91, 104, 68, 152, 60, 255, 165, 3, 82, 52, 16, 89, 227, 76, 8, 4, 1, 0, 74, 209, 245, 221, 96, 159, 132, 212, 159, 169, 34, 147, 177, 158, 141, 146, 12, 101, 147, 195, 28, 162, 105, 109, 47, 147, 21, 222, 21, 22, 201, 169, 56, 3, 100, 248, 50, 147, 243, 147, 236, 188, 205, 168, 118, 20, 115, 66, 45, 140, 244, 44, 210, 243, 21, 109, 214, 61, 49, 177, 191, 209, 32, 99, 208, 73, 179, 159, 174, 250, 238, 51, 209, 74, 179, 121, 201, 240, 227, 72, 188, 45, 36, 38, 42, 196, 185, 139, 154, 181, 121, 76, 143, 214, 219, 235, 60, 191, 120, 94, 99, 11, 14, 204, 11, 126, 64, 58, 92, 236, 0, 45, 246, 28, 216, 227, 165, 235, 222, 184, 119, 11, 116, 236, 215, 203, 221, 36, 246, 216, 9, 167, 54, 5, 160, 134, 211, 154, 254, 157, 213, 217, 178, 131, 248, 218, 227, 204, 25, 112, 237, 127, 167, 141, 136, 109, 150, 116, 172, 194, 27, 49, 12, 19, 63, 222, 221, 121, 62, 200, 81, 64, 177, 82, 182, 182, 52, 95, 42, 194, 183, 183, 140, 121, 59, 126, 231, 59, 66, 6, 17, 144, 45, 3, 73, 219, 96, 245, 44, 37, 163, 92, 173, 112, 55, 47, 215, 168, 60, 168, 24, 29, 142, 243, 131, 168, 200, 107, 202, 84, 163, 252, 79, 187, 19, 82, 177, 158, 96, 226, 235, 13, 44, 153, 76, 172, 103, 93, 25, 45, 25, 152, 108, 184, 9, 42, 153, 205, 73, 46, 209, 173, 134, 188, 108, 253]))

And the magic number is 305


Bytes in tls frame one is 
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([e, 0, 0, 0])) }

length of the packet payload is 4

Hooray! Server Hello Done!!!

And the magic number is 9

We now retrieve the certs from the tcp payload
Ok([Certificate(b"0\x82\x06\\0\x82\x05D\xa0\x03\x02\x01\x02\x02\x10\x040\xd9y\x1f\xfc\xb5 \xac3\x9f\xa4\xa7:{v0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\00p1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1\x190\x17\x06\x03U\x04\x0b\x13\x10www.digicert.com1/0-\x06\x03U\x04\x03\x13&DigiCert SHA2 High Assurance Server CA0\x1e\x17\r180619000000Z\x17\r190710120000Z0h1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x130\x11\x06\x03U\x04\x08\x13\nCalifornia1\x160\x14\x06\x03U\x04\x07\x13\rSan Francisco1\x150\x13\x06\x03U\x04\n\x13\x0cGitHub, Inc.1\x150\x13\x06\x03U\x04\x03\x0c\x0c*.github.com0\x82\x01\"0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x01\x05\0\x03\x82\x01\x0f\00\x82\x01\n\x02\x82\x01\x01\0\xcb\xed\xd4\xa7\xca\x81\x90\x89\xff\xed/@}iG9\xdf\x12uy\xa7[\x1f\x89\x08\x81\xef\x9dl\xe3\x15\xc2\xde.\xf4\x1b\xda\xb3*\xa8 \xcb\xe5p\xe5\xbeL\x82\xe5&|g\"\xc8M\xe9\x9e\x8f\x96\x89b\xe0o\xcd\xc2\x8f\xcf&tA\xf6\x19\x8a\xc9\x14\xf6|\xcb\xda\xa0P\x8f\xc6\xa5\xcc\x92\x7f\t\xcd\xf6\x01k\xaeZ\xb3\xeb\xcd\\A\x98\xe1\x16\xf6\x04B\x18P\x83\xdem3\xe7|\xba\x1a7&\x05-\xb0q~\xd1j\n\x9b\x0f\xb86~\xb1\x06\x92\x8e\x06\xeeI\x96\xf7\xa1\xfaw(v\x8f\xd4h\xbb\xc4\xf0\0\xae\x82\x9d\xb8\x97<\x03?\xe5\x0e\x9d\xc9\xf7X\x94s\x82\x80\xfe\xf9\x17\xb8at\xa0y\x82\x9ak\x9b\xd0?:t,\x99\x98\xd4?<\xb8\xbbA\n\x0b\x11<1\xf8Az\xb6ke\xda\x1d\xf3\xc6]\x0cm\xc2\xbd8&\xd3\x9d\x1bs\xe9F\x95\xbb\x13\xfa\xcd=\x96\x9d\x1d\x83\x14\x99!\xe2<\xfa\xcc\x95\xd8\xec-\xe1\x81\x7f=\xd8\xde{)\xad\xcd\x07H\xc1\x02\x03\x01\0\x01\xa3\x82\x02\xf80\x82\x02\xf40\x1f\x06\x03U\x1d#\x04\x180\x16\x80\x14Qh\xff\x90\xaf\x02\x07u<\xcc\xd9edb\xa2\x12\xb8Yr;0\x1d\x06\x03U\x1d\x0e\x04\x16\x04\x14\x9f\x16\xdf~P&ocv\xef\x96\xe1Z7\x84:\x92\xeb\xf8\x030#\x06\x03U\x1d\x11\x04\x1c0\x1a\x82\x0c*.github.com\x82\ngithub.com0\x0e\x06\x03U\x1d\x0f\x01\x01\xff\x04\x04\x03\x02\x05\xa00\x1d\x06\x03U\x1d%\x04\x160\x14\x06\x08+\x06\x01\x05\x05\x07\x03\x01\x06\x08+\x06\x01\x05\x05\x07\x03\x020u\x06\x03U\x1d\x1f\x04n0l04\xa02\xa00\x86.http://crl3.digicert.com/sha2-ha-server-g6.crl04\xa02\xa00\x86.http://crl4.digicert.com/sha2-ha-server-g6.crl0L\x06\x03U\x1d \x04E0C07\x06\t`\x86H\x01\x86\xfdl\x01\x010*0(\x06\x08+\x06\x01\x05\x05\x07\x02\x01\x16\x1chttps://www.digicert.com/CPS0\x08\x06\x06g\x81\x0c\x01\x02\x020\x81\x83\x06\x08+\x06\x01\x05\x05\x07\x01\x01\x04w0u0$\x06\x08+\x06\x01\x05\x05\x070\x01\x86\x18http://ocsp.digicert.com0M\x06\x08+\x06\x01\x05\x05\x070\x02\x86Ahttp://cacerts.digicert.com/DigiCertSHA2HighAssuranceServerCA.crt0\x0c\x06\x03U\x1d\x13\x01\x01\xff\x04\x020\00\x82\x01\x03\x06\n+\x06\x01\x04\x01\xd6y\x02\x04\x02\x04\x81\xf4\x04\x81\xf1\0\xef\0u\0\xa4\xb9\t\x90\xb4\x18X\x14\x87\xbb\x13\xa2\xccgp\n<5\x98\x04\xf9\x1b\xdf\xb8\xe3w\xcd\x0e\xc8\r\xdc\x10\0\0\x01d\x19,\xae\xf2\0\0\x04\x03\0F0D\x02 +\xa0\x98f\xd8\x15m\n\xef\x8b\\\xca\x80\0\xf8\x19f\x13\x0e\xa4\x17\xcf\x8ak\x81\x8e\xcev\x8b\x15\x8eS\x02 \x08A\xf1\xee\xc6 \xd2\x06c\x07\x05\xaf;O\xd2\xda\xeav\x8d\x08\xcc\\C\xa8\xac\xc6\xf1\xb6^\xc8\xb7X\0v\0\x87u\xbf\xe7Y|\xf8\x8cC\x99_\xbd\xf3n\xffV\x8dGV6\xffJ\xb5`\xc1\xb4\xea\xff^\xa0\x83\x0f\0\0\x01d\x19,\xaf\xcf\0\0\x04\x03\0G0E\x02 2\x95\x91\xfb\x81\"\x88\xf3\xb4\x1d\x97\xd1g\x8aw\xf53j\xe8\xb5\x1c\x90\x0c\x9f\x13\x0ey\xbf\x9f\xf3\xbem\x02!\0\x81\xfam\xe6e[\xee?\xe9\xf6\x0b]\xbd\xa2\xfe2\xdf\xc9F\tm\xa9\xe4\xbc\xec4\x0f&zn\xb1\x860\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\0\x03\x82\x01\x01\0\x0ey\x1f\xa0\x17}3\xfd\"\xe7\xb1ak\xa8\xcc\xd3\x07\x85\x1a\xa6g\x8d\x10\x059l\xb3\xe6LE\x18\x03\xdfb\xc5\x86\xe4\xa3^\xc0tf\x80?C\xbdAQ\xb6\xce2p\xa7\xae\xf2eHx\xedNPT<\xa6=.\xb5\xbaU\xedd\xb2k\xf7\xfcK\x16~\xc7\xe0\xc7ob\xfe\xa3\x8b\xe7}\xf4\xb7`w\x15\xfc\xc5\xbd\xe8q\x90a 6\xf5!I\x90\x80r\x13\x88\xc3#v\x1b\xbc\xb2E\x7f\x88\xd5\x84\x1e#\xb9\xe56\x1f\xba\x08\xc7\xef4H\x7f\xa6X\xb6\x10\x94!\xc2\xbaB\xa4\t2\xaa\xdbJ\x9c\xc6zIq\xab\x84Jr\x07\xa7\x1f\x9b\xaf\xab\xfb\x95\xa9\xe83:\xfcH\xfeB#\x1a9\xe8\x9f2!\xa2\xbfOB\xb0\xf8l\xba\xfa\xd5\x0e\x92\x08DO\xe8DG\x1e\x81-\x91\xfb\xefa\x82)c\xce\x8b\xdc\x12\xcf\x14\xc3\x94\x15\xff\xf1KP\x85t\x8fA\x0fHm\x81\xb8\xb4\x93c7\xe1\x15\x06T\xb6\xc9\xf9\xb9\xb2\xa1-\xf9\xcc\xca\x17\xea\x8d\x06lH\xf3"), Certificate(b"0\x82\x04\xb10\x82\x03\x99\xa0\x03\x02\x01\x02\x02\x10\x04\xe1\xe7\xa4\xdc\\\xf2\xf3m\xc0+B\xb8]\x15\x9f0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\00l1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1\x190\x17\x06\x03U\x04\x0b\x13\x10www.digicert.com1+0)\x06\x03U\x04\x03\x13\"DigiCert High Assurance EV Root CA0\x1e\x17\r131022120000Z\x17\r281022120000Z0p1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1\x190\x17\x06\x03U\x04\x0b\x13\x10www.digicert.com1/0-\x06\x03U\x04\x03\x13&DigiCert SHA2 High Assurance Server CA0\x82\x01\"0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x01\x05\0\x03\x82\x01\x0f\00\x82\x01\n\x02\x82\x01\x01\0\xb6\xe0/\xc2$\x06\xc8m\x04_\xd7\xef\nd\x06\xb2}\"&e\x16\xaeB@\x9b\xce\xdc\x9f\x9fv\x07>\xc30U\x87\x19\xb9O\x94\x0eZ\x94\x1fUV\xb4\xc2\x02*\xaf\xd0\x98\xee\x0b@\xd7\xc4\xd0;r\xc8\x14\x9e\xef\x90\xb1\x11\xa9\xae\xd2\xc8\xb8C:\xd9\x0b\x0b\xd5\xd5\x95\xf5@\xaf\xc8\x1d\xedM\x9c_W\xb7\x86Ph\x99\xf5\x8a\xda\xd2\xc7\x05\x1f\xa8\x97\xc9\xdc\xa4\xb1\x82\x84-\xc6\xad\xa5\x9c\xc7\x19\x82\xa6\x85\x0f^DX*7\x8f\xfd5\xf1\x0b\x08'2Z\xf5\xbb\x8b\x9e\xa4\xbdQ\xd0'\xe2\xdd;B3\xa3\x05(\xc4\xbb(\xcc\x9a\xac+#\rx\xc6{\xe6^q\xb7J>\x08\xfb\x81\xb7\x16\x16\xa1\x9d#\x12M\xe5\xd7\x92\x08\xacu\xa4\x9c\xba\xcd\x17\xb2\x1eD5e\x7fS%9\xd1\x1c\n\x9ac\x1b\x19\x92th\n7\xc2\xc2RH\xcb9Z\xa2\xb6\xe1]\xc1\xdd\xa0 \xb8!\xa2\x93&o\x14J!A\xc7\xedm\x9b\xf2H/\xf3\x03\xf5\xa2h\x92S/^\xe3\x02\x03\x01\0\x01\xa3\x82\x01I0\x82\x01E0\x12\x06\x03U\x1d\x13\x01\x01\xff\x04\x080\x06\x01\x01\xff\x02\x01\00\x0e\x06\x03U\x1d\x0f\x01\x01\xff\x04\x04\x03\x02\x01\x860\x1d\x06\x03U\x1d%\x04\x160\x14\x06\x08+\x06\x01\x05\x05\x07\x03\x01\x06\x08+\x06\x01\x05\x05\x07\x03\x0204\x06\x08+\x06\x01\x05\x05\x07\x01\x01\x04(0&0$\x06\x08+\x06\x01\x05\x05\x070\x01\x86\x18http://ocsp.digicert.com0K\x06\x03U\x1d\x1f\x04D0B0@\xa0>\xa0<\x86:http://crl4.digicert.com/DigiCertHighAssuranceEVRootCA.crl0=\x06\x03U\x1d \x0460402\x06\x04U\x1d \00*0(\x06\x08+\x06\x01\x05\x05\x07\x02\x01\x16\x1chttps://www.digicert.com/CPS0\x1d\x06\x03U\x1d\x0e\x04\x16\x04\x14Qh\xff\x90\xaf\x02\x07u<\xcc\xd9edb\xa2\x12\xb8Yr;0\x1f\x06\x03U\x1d#\x04\x180\x16\x80\x14\xb1>\xc3i\x03\xf8\xbfG\x01\xd4\x98&\x1a\x08\x02\xefcd+\xc30\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\0\x03\x82\x01\x01\0\x18\x8a\x95\x89\x03\xe6m\xdf\\\xfc\x1dh\xeaJ\x8f\x83\xd6Q/\x8dkD\x16\x9e\xacc\xf5\xd2nl\x84\x99\x8b\xaa\x81q\x84[\xed4N\xb0\xb7y\x92)\xcc-\x80j\xf0\x8e \xe1y\xa4\xfe\x03G\x13\xea\xf5\x86\xcaYq}\xf4\x04\x96k\xd3YX=\xfe\xd31%\\\x188\x84\xa3\xe6\x9f\x82\xfd\x8c[\x981N\xcdx\x9e\x1a\xfd\x85\xcbI\xaa\xf2'\x8b\x99r\xfc>\xaa\xd5A\x0b\xda\xd56\xa1\xbf\x1cnGI\x7f^\xd9H|\x03\xd9\xfd\x8bI\xa0\x98&B@\xeb\xd6\x92\x11\xa4d\nWT\xc4\xf5\x1d\xd6\x02^k\xac\xee\xc4\x80\x9a\x12r\xfaV\x93\xd7\xff\xbf0\x85\x060\xbf\x0b\x7fN\xffW\x05\x9d$\xed\x85\xc3+\xfb\xa6u\xa8\xac-\x16\xef}y'\xb2\xeb\xc2\x9d\x0b\x07\xea\xaa\x85\xd3\x01\xa3 (AYC(\xd2\x81\xe3\xaa\xf6\xec{;w\xb6@b\x80\x05AE\x01\xef\x17\x06>\xde\xc03\x9bg\xd3a.r\x87\xe4i\xfc\x12\0W@\x1ep\xf5\x1e\xc9\xb4")])


TCP Headers: tcp src_port 443 dst_port 59296 seq 125377080 ack 3700926189 data_offset 8 flags | ACK PSH |cwnd 29 csum 5938 urgent 0

Pkt #125377080 is Occupied!

And the flow is: Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59296, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 3223256437, src_port: 443, dst_port: 59296, proto: 6 }
Packet type is not matched!
Quack: occupied

Displaying the payload in raw bytes 


The size of the value is 93

************************************************************


Trying to display the payload via rustls...


************************************************************


Bytes in tls frame one is 
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([10, 0, 0, 21, 20, 47, f5, 3f, 66, 1e, f6, 2f, 3e, f0, cb, 4d, 75, cb, db, 71, 83, 60, 91, 1c, fc, a, 85, 92, 2d, e2, ea, 4e, ed, 37, c8, 6f, 1a])) }

length of the packet payload is 37


Bytes in tls frame one is 
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([10, 0, 0, 21, 20, 47, f5, 3f, 66, 1e, f6, 2f, 3e, f0, cb, 4d, 75, cb, db, 71, 83, 60, 91, 1c, fc, a, 85, 92, 2d, e2, ea, 4e, ed, 37, c8, 6f, 1a])) }

length of the packet payload is 37

not server hello
We are not getting anything


TCP Headers: tcp src_port 59296 dst_port 443 seq 3700926189 ack 125377131 data_offset 8 flags | ACK PSH |cwnd 4096 csum 39085 urgent 0


Pkt #3700926189 is Vacant

And the flow is: Flow { src_ip: 180932078, dst_ip: 3223256437, src_port: 443, dst_port: 59296, proto: 6 }
Previous one is: Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59296, dst_port: 443, proto: 6 }
current flow is a new flow, we should invoke the reassemble function for the previous flow

dumped an empty payload for Flow=Flow { src_ip: 180932078, dst_ip: 3223256437, src_port: 443, dst_port: 59296, proto: 6 }
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped
      3: Packet is not a TLS handshake so not displaying


TCP Headers: tcp src_port 443 dst_port 59295 seq 2582314636 ack 1251344599 data_offset 8 flags | ACK PSH |cwnd 31 csum 30976 urgent 0

Pkt #2582314636 is Occupied!

And the flow is: Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59295, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 3223256437, src_port: 443, dst_port: 59296, proto: 6 }
Packet type is not matched!
dumped an empty payload for Flow=Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59295, dst_port: 443, proto: 6 }


TCP Headers: tcp src_port 59278 dst_port 443 seq 138534218 ack 109519589 data_offset 8 flags | ACK PSH |cwnd 4096 csum 51945 urgent 0


Pkt #138534218 is Vacant

And the flow is: Flow { src_ip: 180932078, dst_ip: 387301801, src_port: 443, dst_port: 59278, proto: 6 }
Previous one is: Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59295, dst_port: 443, proto: 6 }
current flow is a new flow, we should invoke the reassemble function for the previous flow

dumped an empty payload for Flow=Flow { src_ip: 180932078, dst_ip: 387301801, src_port: 443, dst_port: 59278, proto: 6 }
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped
      3: Packet is not a TLS handshake so not displaying


TCP Headers: tcp src_port 59278 dst_port 443 seq 138534288 ack 109519589 data_offset 8 flags | ACK PSH |cwnd 4096 csum 29017 urgent 0

Pkt #138534288 is Occupied!

And the flow is: Flow { src_ip: 180932078, dst_ip: 387301801, src_port: 443, dst_port: 59278, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 387301801, src_port: 443, dst_port: 59278, proto: 6 }
Packet type is not matched!
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59278 seq 109519589 ack 138534334 data_offset 8 flags | ACK PSH |cwnd 227 csum 46929 urgent 0


Pkt #109519589 is Vacant

And the flow is: Flow { src_ip: 387301801, dst_ip: 180932078, src_port: 59278, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 387301801, src_port: 443, dst_port: 59278, proto: 6 }
current flow is a new flow, we should invoke the reassemble function for the previous flow

dumped an empty payload for Flow=Flow { src_ip: 387301801, dst_ip: 180932078, src_port: 59278, dst_port: 443, proto: 6 }
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped
      3: Packet is not a TLS handshake so not displaying


TCP Headers: tcp src_port 443 dst_port 59278 seq 109520196 ack 138534334 data_offset 8 flags | ACK PSH |cwnd 227 csum 78 urgent 0

Pkt #109520196 is Occupied!

And the flow is: Flow { src_ip: 387301801, dst_ip: 180932078, src_port: 59278, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 387301801, dst_ip: 180932078, src_port: 59278, dst_port: 443, proto: 6 }
Packet type is not matched!
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59296 seq 125377131 ack 3700926614 data_offset 8 flags | ACK PSH |cwnd 30 csum 10517 urgent 0


Pkt #125377131 is Vacant

And the flow is: Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59296, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 387301801, dst_ip: 180932078, src_port: 59278, dst_port: 443, proto: 6 }
current flow is a new flow, we should invoke the reassemble function for the previous flow

dumped an empty payload for Flow=Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59296, dst_port: 443, proto: 6 }
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped
      3: Packet is not a TLS handshake so not displaying


TCP Headers: tcp src_port 58871 dst_port 443 seq 438467374 ack 2961756620 data_offset 8 flags | ACK PSH |cwnd 4096 csum 29248 urgent 0


Pkt #438467374 is Vacant

And the flow is: Flow { src_ip: 180932078, dst_ip: 886015115, src_port: 443, dst_port: 58871, proto: 6 }
Previous one is: Flow { src_ip: 3223256437, dst_ip: 180932078, src_port: 59296, dst_port: 443, proto: 6 }
current flow is a new flow, we should invoke the reassemble function for the previous flow

dumped an empty payload for Flow=Flow { src_ip: 180932078, dst_ip: 886015115, src_port: 443, dst_port: 58871, proto: 6 }
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped
      3: Packet is not a TLS handshake so not displaying


TCP Headers: tcp src_port 443 dst_port 58871 seq 2961756620 ack 438467433 data_offset 8 flags | ACK PSH |cwnd 114 csum 7730 urgent 0


Pkt #2961756620 is Vacant

And the flow is: Flow { src_ip: 886015115, dst_ip: 180932078, src_port: 58871, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 886015115, src_port: 443, dst_port: 58871, proto: 6 }
current flow is a new flow, we should invoke the reassemble function for the previous flow

dumped an empty payload for Flow=Flow { src_ip: 886015115, dst_ip: 180932078, src_port: 58871, dst_port: 443, proto: 6 }
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped
      3: Packet is not a TLS handshake so not displaying


TCP Headers: tcp src_port 59282 dst_port 443 seq 2947335944 ack 2840429495 data_offset 8 flags | ACK PSH |cwnd 7387 csum 25069 urgent 0


Pkt #2947335944 is Vacant

And the flow is: Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }
Previous one is: Flow { src_ip: 886015115, dst_ip: 180932078, src_port: 58871, dst_port: 443, proto: 6 }
current flow is a new flow, we should invoke the reassemble function for the previous flow

dumped an empty payload for Flow=Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped
      3: Packet is not a TLS handshake so not displaying


TCP Headers: tcp src_port 59282 dst_port 443 seq 2947336146 ack 2840429495 data_offset 8 flags | ACK PSH |cwnd 7387 csum 47972 urgent 0

Pkt #2947336146 is Occupied!

And the flow is: Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }
Packet type is not matched!
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840429495 ack 2947336185 data_offset 8 flags | ACK PSH |cwnd 316 csum 42844 urgent 0


Pkt #2840429495 is Vacant

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }
current flow is a new flow, we should invoke the reassemble function for the previous flow

dumped an empty payload for Flow=Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped
      3: Packet is not a TLS handshake so not displaying


TCP Headers: tcp src_port 59282 dst_port 443 seq 2947336185 ack 2840429534 data_offset 8 flags | ACK PSH |cwnd 7387 csum 45059 urgent 0

Pkt #2947336185 is Occupied!

And the flow is: Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Packet type is not matched!
dumped an empty payload for Flow=Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }


TCP Headers: tcp src_port 59297 dst_port 443 seq 3374521529 ack 3433449578 data_offset 8 flags | ACK PSH |cwnd 4104 csum 29768 urgent 0


Pkt #3374521529 is Vacant

And the flow is: Flow { src_ip: 180932078, dst_ip: 2899905699, src_port: 443, dst_port: 59297, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }
current flow is a new flow, we should invoke the reassemble function for the previous flow

dumped an empty payload for Flow=Flow { src_ip: 180932078, dst_ip: 2899905699, src_port: 443, dst_port: 59297, proto: 6 }
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped

 ************************************************ 
      3: Packet match handshake!
      
Message { typ: Handshake, version: TLSv1_0, payload: Opaque(Payload([1, 0, 1, 252, 3, 3, 126, 212, 172, 106, 182, 70, 190, 128, 187, 104, 215, 194, 139, 48, 147, 186, 22, 58, 195, 249, 154, 140, 104, 15, 87, 27, 46, 99, 102, 132, 83, 209, 32, 186, 229, 46, 216, 245, 6, 45, 50, 121, 62, 197, 122, 43, 1, 83, 150, 9, 170, 254, 204, 25, 150, 220, 19, 80, 205, 28, 153, 254, 152, 2, 239, 0, 34, 90, 90, 19, 1, 19, 2, 19, 3, 192, 43, 192, 47, 192, 44, 192, 48, 204, 169, 204, 168, 192, 19, 192, 20, 0, 156, 0, 157, 0, 47, 0, 53, 0, 10, 1, 0, 1, 145, 234, 234, 0, 0, 0, 0, 0, 22, 0, 20, 0, 0, 17, 102, 111, 110, 116, 115, 46, 103, 115, 116, 97, 116, 105, 99, 46, 99, 111, 109, 0, 23, 0, 0, 255, 1, 0, 1, 0, 0, 10, 0, 10, 0, 8, 202, 202, 0, 29, 0, 23, 0, 24, 0, 11, 0, 2, 1, 0, 0, 35, 0, 0, 0, 16, 0, 14, 0, 12, 2, 104, 50, 8, 104, 116, 116, 112, 47, 49, 46, 49, 0, 5, 0, 5, 1, 0, 0, 0, 0, 0, 13, 0, 20, 0, 18, 4, 3, 8, 4, 4, 1, 5, 3, 8, 5, 5, 1, 8, 6, 6, 1, 2, 1, 0, 18, 0, 0, 0, 51, 0, 43, 0, 41, 202, 202, 0, 1, 0, 0, 29, 0, 32, 180, 238, 38, 213, 78, 219, 95, 14, 119, 195, 134, 57, 172, 44, 172, 187, 80, 28, 29, 197, 53, 218, 152, 103, 160, 147, 195, 98, 253, 15, 232, 18, 0, 45, 0, 2, 1, 1, 0, 43, 0, 11, 10, 154, 154, 3, 4, 3, 3, 3, 2, 3, 1, 0, 27, 0, 3, 2, 0, 2, 154, 154, 0, 1, 0, 0, 21, 0, 199, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])) }

reading size of 517 payload into the flow entry 
Flow { src_ip: 180932078, dst_ip: 2899905699, src_port: 443, dst_port: 59297, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 517
      4: This packet is inserted, quack


TCP Headers: tcp src_port 443 dst_port 59282 seq 2840429534 ack 2947336249 data_offset 8 flags | ACK PSH |cwnd 316 csum 50537 urgent 0

Pkt #2840429534 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 2899905699, src_port: 443, dst_port: 59297, proto: 6 }
Packet type is not matched!
Quack: occupied

Displaying the payload in raw bytes 


The size of the value is 517

************************************************************


Trying to display the payload via rustls...


************************************************************


Bytes in tls frame one is 
Message { typ: Handshake, version: TLSv1_0, payload: Opaque(Payload([1, 0, 1, fc, 3, 3, 7e, d4, ac, 6a, b6, 46, be, 80, bb, 68, d7, c2, 8b, 30, 93, ba, 16, 3a, c3, f9, 9a, 8c, 68, f, 57, 1b, 2e, 63, 66, 84, 53, d1, 20, ba, e5, 2e, d8, f5, 6, 2d, 32, 79, 3e, c5, 7a, 2b, 1, 53, 96, 9, aa, fe, cc, 19, 96, dc, 13, 50, cd, 1c, 99, fe, 98, 2, ef, 0, 22, 5a, 5a, 13, 1, 13, 2, 13, 3, c0, 2b, c0, 2f, c0, 2c, c0, 30, cc, a9, cc, a8, c0, 13, c0, 14, 0, 9c, 0, 9d, 0, 2f, 0, 35, 0, a, 1, 0, 1, 91, ea, ea, 0, 0, 0, 0, 0, 16, 0, 14, 0, 0, 11, 66, 6f, 6e, 74, 73, 2e, 67, 73, 74, 61, 74, 69, 63, 2e, 63, 6f, 6d, 0, 17, 0, 0, ff, 1, 0, 1, 0, 0, a, 0, a, 0, 8, ca, ca, 0, 1d, 0, 17, 0, 18, 0, b, 0, 2, 1, 0, 0, 23, 0, 0, 0, 10, 0, e, 0, c, 2, 68, 32, 8, 68, 74, 74, 70, 2f, 31, 2e, 31, 0, 5, 0, 5, 1, 0, 0, 0, 0, 0, d, 0, 14, 0, 12, 4, 3, 8, 4, 4, 1, 5, 3, 8, 5, 5, 1, 8, 6, 6, 1, 2, 1, 0, 12, 0, 0, 0, 33, 0, 2b, 0, 29, ca, ca, 0, 1, 0, 0, 1d, 0, 20, b4, ee, 26, d5, 4e, db, 5f, e, 77, c3, 86, 39, ac, 2c, ac, bb, 50, 1c, 1d, c5, 35, da, 98, 67, a0, 93, c3, 62, fd, f, e8, 12, 0, 2d, 0, 2, 1, 1, 0, 2b, 0, b, a, 9a, 9a, 3, 4, 3, 3, 3, 2, 3, 1, 0, 1b, 0, 3, 2, 0, 2, 9a, 9a, 0, 1, 0, 0, 15, 0, c7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])) }

length of the packet payload is 512


Bytes in tls frame one is 
Message { typ: Handshake, version: TLSv1_0, payload: Opaque(Payload([1, 0, 1, fc, 3, 3, 7e, d4, ac, 6a, b6, 46, be, 80, bb, 68, d7, c2, 8b, 30, 93, ba, 16, 3a, c3, f9, 9a, 8c, 68, f, 57, 1b, 2e, 63, 66, 84, 53, d1, 20, ba, e5, 2e, d8, f5, 6, 2d, 32, 79, 3e, c5, 7a, 2b, 1, 53, 96, 9, aa, fe, cc, 19, 96, dc, 13, 50, cd, 1c, 99, fe, 98, 2, ef, 0, 22, 5a, 5a, 13, 1, 13, 2, 13, 3, c0, 2b, c0, 2f, c0, 2c, c0, 30, cc, a9, cc, a8, c0, 13, c0, 14, 0, 9c, 0, 9d, 0, 2f, 0, 35, 0, a, 1, 0, 1, 91, ea, ea, 0, 0, 0, 0, 0, 16, 0, 14, 0, 0, 11, 66, 6f, 6e, 74, 73, 2e, 67, 73, 74, 61, 74, 69, 63, 2e, 63, 6f, 6d, 0, 17, 0, 0, ff, 1, 0, 1, 0, 0, a, 0, a, 0, 8, ca, ca, 0, 1d, 0, 17, 0, 18, 0, b, 0, 2, 1, 0, 0, 23, 0, 0, 0, 10, 0, e, 0, c, 2, 68, 32, 8, 68, 74, 74, 70, 2f, 31, 2e, 31, 0, 5, 0, 5, 1, 0, 0, 0, 0, 0, d, 0, 14, 0, 12, 4, 3, 8, 4, 4, 1, 5, 3, 8, 5, 5, 1, 8, 6, 6, 1, 2, 1, 0, 12, 0, 0, 0, 33, 0, 2b, 0, 29, ca, ca, 0, 1, 0, 0, 1d, 0, 20, b4, ee, 26, d5, 4e, db, 5f, e, 77, c3, 86, 39, ac, 2c, ac, bb, 50, 1c, 1d, c5, 35, da, 98, 67, a0, 93, c3, 62, fd, f, e8, 12, 0, 2d, 0, 2, 1, 1, 0, 2b, 0, b, a, 9a, 9a, 3, 4, 3, 3, 3, 2, 3, 1, 0, 1b, 0, 3, 2, 0, 2, 9a, 9a, 0, 1, 0, 0, 15, 0, c7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])) }

length of the packet payload is 512

not server hello
We are not getting anything


TCP Headers: tcp src_port 443 dst_port 59282 seq 2840429601 ack 2947336249 data_offset 8 flags | ACK PSH |cwnd 316 csum 7489 urgent 0


Pkt #2840429601 is Vacant

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
flow and prev flow are the same

  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped
      3: Packet is not a TLS handshake so not displaying


TCP Headers: tcp src_port 443 dst_port 59282 seq 2840429632 ack 2947336249 data_offset 8 flags | ACK PSH |cwnd 316 csum 33538 urgent 0

Pkt #2840429632 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Packet type is not matched!
flow and prev flow are the same



TCP Headers: tcp src_port 59282 dst_port 443 seq 2947336249 ack 2840429671 data_offset 8 flags | ACK PSH |cwnd 7387 csum 52610 urgent 0


Pkt #2947336249 is Vacant

And the flow is: Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
current flow is a new flow, we should invoke the reassemble function for the previous flow

dumped an empty payload for Flow=Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped
      3: Packet is not a TLS handshake so not displaying


TCP Headers: tcp src_port 443 dst_port 59297 seq 3433449578 ack 3374522046 data_offset 8 flags | ACK |cwnd 240 csum 59517 urgent 0


Pkt #3433449578 is Vacant

And the flow is: Flow { src_ip: 2899905699, dst_ip: 180932078, src_port: 59297, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }
current flow is a new flow, we should invoke the reassemble function for the previous flow

dumped an empty payload for Flow=Flow { src_ip: 2899905699, dst_ip: 180932078, src_port: 59297, dst_port: 443, proto: 6 }
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped

 ************************************************ 
      3: Packet match handshake!
      
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([2, 0, 0, 118, 3, 3, 248, 97, 131, 169, 91, 181, 46, 137, 24, 77, 216, 8, 172, 81, 252, 11, 20, 63, 10, 116, 216, 104, 2, 47, 32, 55, 180, 134, 213, 96, 215, 162, 32, 186, 229, 46, 216, 245, 6, 45, 50, 121, 62, 197, 122, 43, 1, 83, 150, 9, 170, 254, 204, 25, 150, 220, 19, 80, 205, 28, 153, 254, 152, 2, 239, 19, 1, 0, 0, 46, 0, 51, 0, 36, 0, 29, 0, 32, 30, 38, 116, 30, 251, 108, 177, 99, 237, 237, 111, 221, 169, 32, 105, 46, 72, 35, 236, 30, 189, 100, 234, 162, 10, 138, 0, 176, 85, 55, 75, 94, 0, 43, 0, 2, 3, 4])) }

reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905699, dst_ip: 180932078, src_port: 59297, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
      4: This packet is inserted, quack


TCP Headers: tcp src_port 443 dst_port 59297 seq 3433450996 ack 3374522046 data_offset 8 flags | ACK PSH |cwnd 240 csum 16906 urgent 0

Pkt #3433450996 is Occupied!

And the flow is: Flow { src_ip: 2899905699, dst_ip: 180932078, src_port: 59297, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905699, dst_ip: 180932078, src_port: 59297, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1057 payload into the flow entry 
Flow { src_ip: 2899905699, dst_ip: 180932078, src_port: 59297, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1057
flow and prev flow are the same



TCP Headers: tcp src_port 59297 dst_port 443 seq 3374522046 ack 3433452053 data_offset 8 flags | ACK PSH |cwnd 4096 csum 1160 urgent 0

Pkt #3374522046 is Occupied!

And the flow is: Flow { src_ip: 180932078, dst_ip: 2899905699, src_port: 443, dst_port: 59297, proto: 6 }
Previous one is: Flow { src_ip: 2899905699, dst_ip: 180932078, src_port: 59297, dst_port: 443, proto: 6 }
Packet type is not matched!
Quack: occupied

Displaying the payload in raw bytes 


The size of the value is 2475

************************************************************


Trying to display the payload via rustls...


************************************************************


Bytes in tls frame one is 
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([2, 0, 0, 76, 3, 3, f8, 61, 83, a9, 5b, b5, 2e, 89, 18, 4d, d8, 8, ac, 51, fc, b, 14, 3f, a, 74, d8, 68, 2, 2f, 20, 37, b4, 86, d5, 60, d7, a2, 20, ba, e5, 2e, d8, f5, 6, 2d, 32, 79, 3e, c5, 7a, 2b, 1, 53, 96, 9, aa, fe, cc, 19, 96, dc, 13, 50, cd, 1c, 99, fe, 98, 2, ef, 13, 1, 0, 0, 2e, 0, 33, 0, 24, 0, 1d, 0, 20, 1e, 26, 74, 1e, fb, 6c, b1, 63, ed, ed, 6f, dd, a9, 20, 69, 2e, 48, 23, ec, 1e, bd, 64, ea, a2, a, 8a, 0, b0, 55, 37, 4b, 5e, 0, 2b, 0, 2, 3, 4])) }

length of the packet payload is 122


Bytes in tls frame one is 
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([2, 0, 0, 76, 3, 3, f8, 61, 83, a9, 5b, b5, 2e, 89, 18, 4d, d8, 8, ac, 51, fc, b, 14, 3f, a, 74, d8, 68, 2, 2f, 20, 37, b4, 86, d5, 60, d7, a2, 20, ba, e5, 2e, d8, f5, 6, 2d, 32, 79, 3e, c5, 7a, 2b, 1, 53, 96, 9, aa, fe, cc, 19, 96, dc, 13, 50, cd, 1c, 99, fe, 98, 2, ef, 13, 1, 0, 0, 2e, 0, 33, 0, 24, 0, 1d, 0, 20, 1e, 26, 74, 1e, fb, 6c, b1, 63, ed, ed, 6f, dd, a9, 20, 69, 2e, 48, 23, ec, 1e, bd, 64, ea, a2, a, 8a, 0, b0, 55, 37, 4b, 5e, 0, 2b, 0, 2, 3, 4])) }

length of the packet payload is 122

is server hello
DEBUG: entering

Bytes in tls frame one is 
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([2, 0, 0, 76, 3, 3, f8, 61, 83, a9, 5b, b5, 2e, 89, 18, 4d, d8, 8, ac, 51, fc, b, 14, 3f, a, 74, d8, 68, 2, 2f, 20, 37, b4, 86, d5, 60, d7, a2, 20, ba, e5, 2e, d8, f5, 6, 2d, 32, 79, 3e, c5, 7a, 2b, 1, 53, 96, 9, aa, fe, cc, 19, 96, dc, 13, 50, cd, 1c, 99, fe, 98, 2, ef, 13, 1, 0, 0, 2e, 0, 33, 0, 24, 0, 1d, 0, 20, 1e, 26, 74, 1e, fb, 6c, b1, 63, ed, ed, 6f, dd, a9, 20, 69, 2e, 48, 23, ec, 1e, bd, 64, ea, a2, a, 8a, 0, b0, 55, 37, 4b, 5e, 0, 2b, 0, 2, 3, 4])) }

length of the packet payload is 122

ServerHelloPayload { legacy_version: TLSv1_2, random: Random([248, 97, 131, 169, 91, 181, 46, 137, 24, 77, 216, 8, 172, 81, 252, 11, 20, 63, 10, 116, 216, 104, 2, 47, 32, 55, 180, 134, 213, 96, 215, 162]), session_id: SessionID(186, 229, 46, 216, 245, 6, 45, 50, 121, 62, 197, 122, 43, 1, 83, 150, 9, 170, 254, 204, 25, 150, 220, 19, 80, 205, 28, 153, 254, 152, 2, 239), cipher_suite: TLS13_AES_128_GCM_SHA256, compression_method: Null, extensions: [KeyShare(KeyShareEntry { group: X25519, payload: PayloadU16([30, 38, 116, 30, 251, 108, 177, 99, 237, 237, 111, 221, 169, 32, 105, 46, 72, 35, 236, 30, 189, 100, 234, 162, 10, 138, 0, 176, 85, 55, 75, 94]) }), SupportedVersions(TLSv1_3)] }

And the magic number is 127


Bytes in tls frame one is 
Message { typ: ChangeCipherSpec, version: TLSv1_2, payload: Opaque(Payload([1])) }

length of the packet payload is 1

Get None, abort
We now retrieve the certs from the tcp payload
Err(CertificateNotExtractedError)


TCP Headers: tcp src_port 443 dst_port 59297 seq 3433452053 ack 3374522110 data_offset 8 flags | ACK PSH |cwnd 240 csum 8700 urgent 0

Pkt #3433452053 is Occupied!

And the flow is: Flow { src_ip: 2899905699, dst_ip: 180932078, src_port: 59297, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 2899905699, src_port: 443, dst_port: 59297, proto: 6 }
Packet type is not matched!
dumped an empty payload for Flow=Flow { src_ip: 2899905699, dst_ip: 180932078, src_port: 59297, dst_port: 443, proto: 6 }


TCP Headers: tcp src_port 443 dst_port 59297 seq 3433452555 ack 3374522110 data_offset 8 flags | ACK PSH |cwnd 240 csum 63232 urgent 0


Pkt #3433452555 is Vacant

And the flow is: Flow { src_ip: 2899905699, dst_ip: 180932078, src_port: 59297, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905699, dst_ip: 180932078, src_port: 59297, dst_port: 443, proto: 6 }
flow and prev flow are the same

  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped
      3: Packet is not a TLS handshake so not displaying


TCP Headers: tcp src_port 443 dst_port 59282 seq 2840429671 ack 2947336288 data_offset 8 flags | ACK PSH |cwnd 316 csum 59924 urgent 0

Pkt #2840429671 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905699, dst_ip: 180932078, src_port: 59297, dst_port: 443, proto: 6 }
Packet type is not matched!
dumped an empty payload for Flow=Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }


TCP Headers: tcp src_port 443 dst_port 59282 seq 2840429956 ack 2947336288 data_offset 8 flags | ACK PSH |cwnd 316 csum 59113 urgent 0


Pkt #2840429956 is Vacant

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
flow and prev flow are the same

  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped
      3: Packet is not a TLS handshake so not displaying


TCP Headers: tcp src_port 443 dst_port 59282 seq 2840431374 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 15650 urgent 0

Pkt #2840431374 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Packet type is not matched!
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840432792 ack 2947336288 data_offset 8 flags | ACK PSH |cwnd 316 csum 29918 urgent 0

Pkt #2840432792 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Packet type is not matched!
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840434210 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 54320 urgent 0

Pkt #2840434210 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Packet type is not matched!
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840435628 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 10635 urgent 0

Pkt #2840435628 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Packet type is not matched!
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840437046 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 56947 urgent 0

Pkt #2840437046 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 8508 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 8508
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840438464 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 11593 urgent 0

Pkt #2840438464 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840439882 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 12235 urgent 0

Pkt #2840439882 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840441300 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 51491 urgent 0

Pkt #2840441300 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840442718 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 62206 urgent 0

Pkt #2840442718 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840444136 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 13860 urgent 0

Pkt #2840444136 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840445554 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 36970 urgent 0

Pkt #2840445554 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840446972 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 15160 urgent 0

Pkt #2840446972 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840448390 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 62977 urgent 0

Pkt #2840448390 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840449808 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 49709 urgent 0

Pkt #2840449808 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840451226 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 1903 urgent 0

Pkt #2840451226 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840452644 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 47039 urgent 0

Pkt #2840452644 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840454062 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 45612 urgent 0

Pkt #2840454062 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840455480 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 52655 urgent 0

Pkt #2840455480 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840456898 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 25335 urgent 0

Pkt #2840456898 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840458316 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 5621 urgent 0

Pkt #2840458316 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840459734 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 55567 urgent 0

Pkt #2840459734 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840461152 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 335 urgent 0

Pkt #2840461152 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840462570 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 8672 urgent 0

Pkt #2840462570 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840463988 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 38511 urgent 0

Pkt #2840463988 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840465406 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 59057 urgent 0

Pkt #2840465406 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840466824 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 16375 urgent 0

Pkt #2840466824 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840468242 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 49194 urgent 0

Pkt #2840468242 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840469660 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 47794 urgent 0

Pkt #2840469660 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840471078 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 29720 urgent 0

Pkt #2840471078 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840472496 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 27596 urgent 0

Pkt #2840472496 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840473914 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 52809 urgent 0

Pkt #2840473914 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840475332 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 31248 urgent 0

Pkt #2840475332 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840476750 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 22185 urgent 0

Pkt #2840476750 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840478168 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 58840 urgent 0

Pkt #2840478168 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840479586 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 18199 urgent 0

Pkt #2840479586 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840481004 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 56353 urgent 0

Pkt #2840481004 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Packet type is not matched!
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840482422 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 39319 urgent 0

Pkt #2840482422 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 2836 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 2836
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840483840 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 30931 urgent 0

Pkt #2840483840 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840485258 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 55557 urgent 0

Pkt #2840485258 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840486676 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 56292 urgent 0

Pkt #2840486676 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840488094 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 28730 urgent 0

Pkt #2840488094 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840489512 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 50909 urgent 0

Pkt #2840489512 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840490930 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 31613 urgent 0

Pkt #2840490930 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840492348 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 11968 urgent 0

Pkt #2840492348 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840493766 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 40783 urgent 0

Pkt #2840493766 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840495184 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 63017 urgent 0

Pkt #2840495184 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840496602 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 50029 urgent 0

Pkt #2840496602 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840498020 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 38769 urgent 0

Pkt #2840498020 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840499438 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 37329 urgent 0

Pkt #2840499438 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840500856 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 16467 urgent 0

Pkt #2840500856 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840502274 ack 2947336288 data_offset 8 flags | ACK |cwnd 316 csum 21929 urgent 0

Pkt #2840502274 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1418 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1418
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840503692 ack 2947336288 data_offset 8 flags | ACK PSH |cwnd 316 csum 46778 urgent 0

Pkt #2840503692 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }

There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 328 payload into the flow entry 
Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 328
flow and prev flow are the same



TCP Headers: tcp src_port 59282 dst_port 443 seq 2947336288 ack 2840504020 data_offset 8 flags | ACK PSH |cwnd 7387 csum 34051 urgent 0

Pkt #2947336288 is Occupied!

And the flow is: Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Packet type is not matched!
Quack: occupied

Displaying the payload in raw bytes 


The size of the value is 74064

************************************************************


Trying to display the payload via rustls...


************************************************************


Bytes in tls frame one is 
Message { typ: ApplicationData, version: TLSv1_2, payload: Opaque(Payload([1, e6, 3a, 9a, e7, 58, 1a, 4e, 77, e0, 9c, f1, c6, a4, 18, bf, 1e, 73, 36, 35, 15, b2, b1, 4, 39, 5b, 67, 59, a9, b7, 57, 4a, 9c, d5, 4f, f8, ba, f4, df, aa, 56, 4e, d, d0, f0, fe, 7f, 8c, 90, fd, 7c, 69, 53, f4, 59, cb, 59, c3, 97, fb, 2d, 97, 6c, f3, 1b, 37, ee, 5d, 92, 16, 2a, fd, c0, 4a, 5c, a3, bc, 99, bf, ff, b7, 1d, e7, 8f, ff, 38, f, a0, fb, 6e, 85, 7, e4, 43, 6a, 80, 37, c9, 79, 79, b2, 97, 90, b8, 89, aa, b7, 3a, d7, 52, ca, ef, 63, 67, 2d, dd, d4, a8, d4, 7e, b9, 79, 8, 9a, fd, 4a, 27, 39, b3, 40, bd, ad, a3, 66, 99, 57, 24, f1, f3, d7, 9c, 23, 9b, 2d, e0, ae, 2f, d2, 72, a7, 6e, 54, 8b, fe, 6c, f4, dd, b7, f5, 18, e6, cc, 7a, 22, 46, da, 7b, 49, 25, e8, c7, d3, f4, 49, 17, 59, fd, f8, 2b, e0, c2, 34, bb, 37, 4d, c5, 7b, 5a, ab, cd, 3b, 3, 2a, 54, b4, 73, 18, ef, 43, c7, f2, 5e, fc, 78, 16, 71, 44, 8c, 4f, e9, 65, 21, 72, 9f, d9, d0, 66, 68, 4c, 4e, 6f, 97, be, 7e, 9b, d8, ee, af, d1, 26, d3, fe, 26, 3, dc, d7, 34, 57, eb, 67, e5, 8b, 94, 3d, d9, 6e, 79, a1, a5, f1, 8f, af, 6c, d3, 29, 5c, 7a, a2, 28, ce, fe, da, 0, 0, cf, 6d, a1, db, 83, b3, 13, 73, c, df, cd, 3d, 46, 3c, 58, ea, 53, e7, 1f, 64, b8, 7f, 65, 35, b6, 82, d3, a2, d2, 60, a0, df, 8f, b1, e4, 59, 22, de, b8, 21, ef, 6, 38, b7, 9, ea, df, 69, 5e, 93, 28, 4e, 3f, 9f, ac, b8, de, 5, cc, db, eb, fe, 18, 72, c4, 62, 42, 71, 68, 10, 38, 18, 2e, ca, c2, 44, a3, f, ca, 3f, 62, 64, 85, c0, e3, 9c, b5, 2f, d4, 6d, 64, 30, e6, fb, ec, 83, 3a, d3, 27, af, ae, 60, 4d, f6, c, 8c, b8, 24, 9f, 27, c4, 45, d5, bf, dd, c1, b3, fa, 1f, 27, 9d, 8f, 53, 2d, 64, 44, 12, 13, 5e, 81, ba, 85, cd, 3d, 79, 82, 6a, 2a, 4b, 49, a4, 31, 80, 16, b3, 40, 15, c2, e1, c, 74, 61, a6, 12, c1, 96, 21, 67, 51, 3b, f7, 23, ee, 76, c8, 6, 64, 5e, 91, 61, a2, 16, 84, 70, 2c, 1c, 3, 80, d2, 74, 51, 75, 7c, bb, 42, f1, a4, 38, d7, 78, 47, 4b, 7e, 49, dd, 1d, 7d, d0, 6a, ce, a4, bd, 1a, bb, 71, c7, e4, 11, af, 45, dd, 54, ad, d2, 5b, 1e, 1c, b, 1f, c1, b1, 37, d0, d5, 2c, 89, 9c, 10, 66, 3a, 61, 47, 8e, ed, df, 58, bf, 12, 98, 79, 10, 9f, 95, 6c, 34, 57, da, e1, 20, 33, 8f, 1b, 9b, d, ff, 0, 1f, 39, 90, 1c, 7c, cc, 33, 77, d5, 2a, f1, 55, 46, 7d, b8, 70, 6e, 45, 42, b3, 10, 4a, cf, ea, 65, e2, 37, 31, 48, dc, 7b, 18, c3, fa, e3, 6, 1f, 6d, c5, ff, be, 7b, fe, ff, 3c, c4, 89, 82, ef, af, 55, 50, 23, d, 90, 83, 85, fe, 33, 3b, da, bf, f1, 5f, a2, ed, fc, a3, 99, e6, f3, 57, da, ba, ed, 15, b2, 6d, 3b, 37, c3, cb, 7f, 1a, f7, 95, 2b, c8, c3, 41, ba, 70, 2, f7, 3d, 96, 43, 60, 35, b0, 97, eb, 77, be, 4e, 6d, ed, 24, d7, 50, d5, 18, aa, f1, 85, e1, 99, 64, 72, 32, 4b, 7d, 4a, c6, e3, 9d, 79, dd, 87, 8, 44, 5e, 91, ad, 5f, 80, 39, a0, b, d3, c6, c0, f8, 58, 4f, ed, 4d, 3e, d1, 87, 82, 4e, ee, 1b, 35, 21, 7c, b9, cc, 4b, 60, 67, 99, 7a, 11, f0, 69, aa, 3d, f7, 63, dd, 1c, d1, d, 2d, 1a, cb, 53, 55, d7, 7b, 40, 93, 44, 16, 64, 3c, c1, b9, a, 6b, 32, 19, e0, ae, f5, b9, a2, de, 1e, 68, 81, 9a, 4c, fa, 9f, a7, 6f, e, 18, 91, b7, c8, 3, 8c, 31, 9, 82, f, 7d, 43, bb, 4, 44, d9, 7f, 77, 2f, d4, b1, b0, f9, 79, 4f, af, 1b, ee, 81, f8, e8, a8, 5a, 80, 4f, dc, 7e, 12, 32, a3, 27, 18, 6d, 32, b2, 7c, e9, a0, b2, 24, f5, 71, 5e, 6a, bd, 5d, ba, b2, 30, 19, 8d, 73, 99, d5, 87, 59, f7, 4, 9d, bc, 18, 38, 3a, 19, 58, 26, 5d, 48, 40, 28, 31, 4f, f4, 84, 0, 76, 2d, f3, 97, a8, 78, 7a, a1, 47, fb, db, 98, 30, 3f, 5e, b1, 25, 65, 3, 53, 23, 79, 7f, a2, 65, b3, c3, 73, 86, 82, 24, 84, 97, 62, 10, b7, f, 81, 60, ca, 3e, d7, 12, 70, 86, f4, 6e, d6, e0, ed, 35, c8, bb, 4, 6e, 27, ce, 17, 7f, aa, ed, b0, 7c, bc, e5, a7, 51, 59, c5, 92, 7d, 7e, 87, 73, ae, 60, b3, 45, 2c, 74, ac, 96, 5c, a7, 93, 9b, 7d, 24, 84, 51, 26, 98, 76, 21, 7, 92, ac, 6, 4a, 1a, e6, 49, be, 1c, fd, 34, 94, bc, 53, 7, 7b, ef, a3, 3f, 0, 73, 56, ec, ac, a4, 57, be, 50, ef, d3, e8, dc, 1b, fb, 94, 72, d2, b3, 1b, f1, 76, 16, 10, bc, 75, 8b, 4a, 8e, 60, c5, fc, 71, 38, 2f, 4f, 3f, 44, 9a, bd, ff, 7, 2d, 5e, 15, 47, 15, 30, c7, f, c1, 39, e, 1f, 3a, a, 4d, dc, 80, 72, b6, 73, 4b, cd, 7e, de, 32, 79, 97, a2, a7, 8b, 46, c5, 89, a, a8, 26, c, 41, fe, a7, 8c, 4b, 42, ed, 71, 79, de, 23, 78, 56, 59, 36, 30, 6b, 19, 52, 3c, fc, 6e, 7b, 94, ad, 70, f7, ae, 11, 43, 23, f6, c1, e5, b7, 29, 1f, 31, 16, 5e, 5f, ed, 4a, 38, fc, 8f, 37, 17, 80, f1, a0, de, 8a, 95, 4c, 91, e5, bc, be, 0, 17, a9, 5f, 81, 25, b6, 6b, d1, f1, 35, 87, 97, a5, 58, 7, 82, f3, 97, 1f, fb, c7, bf, 34, e7, f, e3, 8b, e9, c, 93, b0, a2, 35, 43, 7, 8f, d0, a5, 17, c4, dd, 1a, 1, 1b, 5a, 5e, 21, f4, fc, e9, b9, a9, 82, 53, f7, 52, 7b, 64, 92, 38, 32, 55, 23, b3, 9, db, b3, a2, 73, 39, d4, aa, 42, e4, e8, a1, c3, 5e, 19, 8c, 82, 84, 6e, a7, 50, 6a, b3, 41, 86, 53, 57, 96, 66, a4, 90, de, f2, db, 7b, 59, b3, fe, 78, ce, 6a, f2, 61, 41, c3, 54, 94, 6c, 1b, 78, 4a, ce, 3d, 0, bf, e, 27, aa, 95, 2f, 5a, 25, 43, f3, 58, ea, a0, a5, 16, b1, 92, 88, b1, 6e, ee, 52, 27, c7, 35, 55, dc, ab, cb, 86, 44, 78, 87, bd, 64, ba, 25, 35, 21, ee, f3, fb, 3d, b1, bc, b3, 12, 54, 22, 79, 25, 7a, 9b, 35, 27, 1f, 75, 4d, 7d, e2, 7c, 3c, 25, 15, 6b, a6, 33, 26, b8, 9a, c9, 62, b5, 25, d, b2, 14, ae, 9e, 32, 89, 73, c1, e1, a7, 24, c5, 9f, 48, 92, be, 3, 62, be, cf, e3, 67, 15, ce, f7, d0, 60, dd, b7, 35, dd, da, 95, 9d, ba, 96, ea, c2, 20, 3a, 63, 84, d6, 0, cb, a3, 65, ec, b4, 9e, b5, 69, 15, c0, ac, c5, 4c, 21, d4, fd, 8f, d9, fd, a0, e5, 4a, 85, 99, 7, 85, d7, 7b, 8, 31, 0, 82, 1, c6, e9, 1e, 97, 9e, 66, 6f, cd, 95, 35, a3, a6, 17, 36, 26, bc, 4e, f3, b3, a, 12, 97, d, ed, eb, 68, 8a, 3b, 62, 7e, 84, d0, ca, 10, aa, db, cd, b2, cd, 9, ad, b8, 51, a0, 35, 9, f5, 7, 45, 67, 47, db, 5d, 1e, 14, 6b, 99, fc, 17, 63, 84, cc, e4, 7e, 52, f2, cb, 4c, 7a, 38, fd, 1a, 3, 30, b3])) }

length of the packet payload is 1413

We are not getting anything


TCP Headers: tcp src_port 59282 dst_port 443 seq 2947336327 ack 2840504020 data_offset 8 flags | ACK PSH |cwnd 7387 csum 4663 urgent 0


Pkt #2947336327 is Vacant

And the flow is: Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }
flow and prev flow are the same

  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped
      3: Packet is not a TLS handshake so not displaying


TCP Headers: tcp src_port 59282 dst_port 443 seq 2947336523 ack 2840504020 data_offset 8 flags | ACK PSH |cwnd 7387 csum 1792 urgent 0

Pkt #2947336523 is Occupied!

And the flow is: Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }
Packet type is not matched!
flow and prev flow are the same



TCP Headers: tcp src_port 59282 dst_port 443 seq 2947336663 ack 2840504020 data_offset 8 flags | ACK PSH |cwnd 7387 csum 41072 urgent 0

Pkt #2947336663 is Occupied!

And the flow is: Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }
Packet type is not matched!
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840504020 ack 2947336834 data_offset 8 flags | ACK PSH |cwnd 337 csum 62522 urgent 0

Pkt #2840504020 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }
Packet type is not matched!
dumped an empty payload for Flow=Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }


TCP Headers: tcp src_port 443 dst_port 59282 seq 2840504087 ack 2947336834 data_offset 8 flags | ACK PSH |cwnd 337 csum 56255 urgent 0


Pkt #2840504087 is Vacant

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
flow and prev flow are the same

  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped
      3: Packet is not a TLS handshake so not displaying


TCP Headers: tcp src_port 443 dst_port 59282 seq 2840504118 ack 2947336834 data_offset 8 flags | ACK PSH |cwnd 337 csum 29834 urgent 0

Pkt #2840504118 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Packet type is not matched!
flow and prev flow are the same



TCP Headers: tcp src_port 59282 dst_port 443 seq 2947336834 ack 2840504157 data_offset 8 flags | ACK PSH |cwnd 7387 csum 28072 urgent 0

Pkt #2947336834 is Occupied!

And the flow is: Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Packet type is not matched!
dumped an empty payload for Flow=Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }


TCP Headers: tcp src_port 443 dst_port 59282 seq 2840504157 ack 2947336834 data_offset 8 flags | ACK PSH |cwnd 337 csum 33678 urgent 0

Pkt #2840504157 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }
Packet type is not matched!
dumped an empty payload for Flow=Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }


TCP Headers: tcp src_port 443 dst_port 59282 seq 2840504224 ack 2947336834 data_offset 8 flags | ACK PSH |cwnd 337 csum 50586 urgent 0


Pkt #2840504224 is Vacant

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
flow and prev flow are the same

  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped
      3: Packet is not a TLS handshake so not displaying


TCP Headers: tcp src_port 59282 dst_port 443 seq 2947336873 ack 2840504255 data_offset 8 flags | ACK PSH |cwnd 7387 csum 32753 urgent 0


Pkt #2947336873 is Vacant

And the flow is: Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
current flow is a new flow, we should invoke the reassemble function for the previous flow

dumped an empty payload for Flow=Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped
      3: Packet is not a TLS handshake so not displaying


TCP Headers: tcp src_port 59287 dst_port 443 seq 1596099361 ack 4276830613 data_offset 8 flags | ACK PSH |cwnd 4096 csum 27806 urgent 0


Pkt #1596099361 is Vacant

And the flow is: Flow { src_ip: 180932078, dst_ip: 2899905282, src_port: 443, dst_port: 59287, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }
current flow is a new flow, we should invoke the reassemble function for the previous flow

dumped an empty payload for Flow=Flow { src_ip: 180932078, dst_ip: 2899905282, src_port: 443, dst_port: 59287, proto: 6 }
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped
      3: Packet is not a TLS handshake so not displaying


TCP Headers: tcp src_port 59287 dst_port 443 seq 1596099517 ack 4276830613 data_offset 8 flags | ACK PSH |cwnd 4096 csum 2350 urgent 0

Pkt #1596099517 is Occupied!

And the flow is: Flow { src_ip: 180932078, dst_ip: 2899905282, src_port: 443, dst_port: 59287, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 2899905282, src_port: 443, dst_port: 59287, proto: 6 }
Packet type is not matched!
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840504255 ack 2947336873 data_offset 8 flags | ACK PSH |cwnd 337 csum 18222 urgent 0

Pkt #2840504255 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 2899905282, src_port: 443, dst_port: 59287, proto: 6 }
Packet type is not matched!
dumped an empty payload for Flow=Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }


TCP Headers: tcp src_port 443 dst_port 59282 seq 2840504462 ack 2947336873 data_offset 8 flags | ACK PSH |cwnd 337 csum 56221 urgent 0


Pkt #2840504462 is Vacant

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
flow and prev flow are the same

  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped
      3: Packet is not a TLS handshake so not displaying


TCP Headers: tcp src_port 443 dst_port 59282 seq 2840504958 ack 2947337203 data_offset 8 flags | ACK PSH |cwnd 344 csum 8867 urgent 0

Pkt #2840504958 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Packet type is not matched!
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840504990 ack 2947337203 data_offset 8 flags | ACK PSH |cwnd 344 csum 28850 urgent 0

Pkt #2840504990 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Packet type is not matched!
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59282 seq 2840505021 ack 2947337203 data_offset 8 flags | ACK PSH |cwnd 344 csum 13460 urgent 0

Pkt #2840505021 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Packet type is not matched!
flow and prev flow are the same



TCP Headers: tcp src_port 59282 dst_port 443 seq 2947337203 ack 2840505060 data_offset 8 flags | ACK PSH |cwnd 7387 csum 50478 urgent 0

Pkt #2947337203 is Occupied!

And the flow is: Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }
Previous one is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Packet type is not matched!
dumped an empty payload for Flow=Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }


TCP Headers: tcp src_port 443 dst_port 59287 seq 4276830613 ack 1596099556 data_offset 8 flags | ACK PSH |cwnd 253 csum 42161 urgent 0


Pkt #4276830613 is Vacant

And the flow is: Flow { src_ip: 2899905282, dst_ip: 180932078, src_port: 59287, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 2899905028, src_port: 443, dst_port: 59282, proto: 6 }
current flow is a new flow, we should invoke the reassemble function for the previous flow

dumped an empty payload for Flow=Flow { src_ip: 2899905282, dst_ip: 180932078, src_port: 59287, dst_port: 443, proto: 6 }
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped
      3: Packet is not a TLS handshake so not displaying


TCP Headers: tcp src_port 443 dst_port 59287 seq 4276830652 ack 1596099556 data_offset 8 flags | ACK PSH |cwnd 253 csum 34934 urgent 0

Pkt #4276830652 is Occupied!

And the flow is: Flow { src_ip: 2899905282, dst_ip: 180932078, src_port: 59287, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905282, dst_ip: 180932078, src_port: 59287, dst_port: 443, proto: 6 }
Packet type is not matched!
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59287 seq 4276830721 ack 1596099556 data_offset 8 flags | ACK PSH |cwnd 253 csum 15706 urgent 0

Pkt #4276830721 is Occupied!

And the flow is: Flow { src_ip: 2899905282, dst_ip: 180932078, src_port: 59287, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905282, dst_ip: 180932078, src_port: 59287, dst_port: 443, proto: 6 }
Packet type is not matched!
flow and prev flow are the same



TCP Headers: tcp src_port 443 dst_port 59287 seq 4276830752 ack 1596099556 data_offset 8 flags | ACK PSH |cwnd 253 csum 51302 urgent 0

Pkt #4276830752 is Occupied!

And the flow is: Flow { src_ip: 2899905282, dst_ip: 180932078, src_port: 59287, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2899905282, dst_ip: 180932078, src_port: 59287, dst_port: 443, proto: 6 }
Packet type is not matched!
flow and prev flow are the same



TCP Headers: tcp src_port 59287 dst_port 443 seq 1596099556 ack 4276830791 data_offset 8 flags | ACK PSH |cwnd 4096 csum 27723 urgent 0

Pkt #1596099556 is Occupied!

And the flow is: Flow { src_ip: 180932078, dst_ip: 2899905282, src_port: 443, dst_port: 59287, proto: 6 }
Previous one is: Flow { src_ip: 2899905282, dst_ip: 180932078, src_port: 59287, dst_port: 443, proto: 6 }
Packet type is not matched!
dumped an empty payload for Flow=Flow { src_ip: 180932078, dst_ip: 2899905282, src_port: 443, dst_port: 59287, proto: 6 }


TCP Headers: tcp src_port 443 dst_port 59282 seq 2840505060 ack 2947337242 data_offset 8 flags | ACK PSH |cwnd 344 csum 34178 urgent 0

Pkt #2840505060 is Occupied!

And the flow is: Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 180932078, dst_ip: 2899905282, src_port: 443, dst_port: 59287, proto: 6 }
Packet type is not matched!
dumped an empty payload for Flow=Flow { src_ip: 2899905028, dst_ip: 180932078, src_port: 59282, dst_port: 443, proto: 6 }
