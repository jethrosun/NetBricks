Going to start with configuration Configuration: name:  =========== Running TLS Validator ============   mempool size: 2047 core cache: 32 primary core: 0
 Ports:
	Port 0000:01:00.0 RXQ_Count: 1 RX_Queues: [ 2 ] TXQ_Count: 1 TX_Queues: 2 RXD: 128 TXD: 128 Loopback false
	Port 0000:01:00.1 RXQ_Count: 1 RX_Queues: [ 3 ] TXQ_Count: 1 TX_Queues: 3 RXD: 128 TXD: 128 Loopback false
Cores:
	2
	3
	4
	5

EAL: Probing VFIO support...
Running on node 0
Devname: "0000:01:00.0"
EAL: PCI device 0000:01:00.0 on NUMA socket -1
EAL:   Invalid NUMA socket, default to 0
EAL:   probe driver: 8086:1583 net_i40e
Going to try and use port 0
Devname: "0000:01:00.1"
EAL: PCI device 0000:01:00.1 on NUMA socket -1
EAL:   Invalid NUMA socket, default to 0
EAL:   probe driver: 8086:1583 net_i40e
Going to try and use port 1
Running on node 0
Running on node 0
Running on node 0
Receiving port f8:f2:1e:2e:9c:50 rxq 0 txq 0
Running on node 0
Running 0 pipelines
Receiving port f8:f2:1e:2e:9c:51 rxq 0 txq 0
Running 1 pipelines
Running 0 pipelines
Starting scheduler on 2
Starting scheduler on 4
Running 1 pipelines
Starting scheduler on 3
Starting scheduler on 5
0 OVERALL RX 0.00 TX 0.00 CYCLE_PER_DELAY 0 0 0


TCP Headers: tcp src_port 55818 dst_port 443 seq 1121057089 ack 0 data_offset 10 flags | SYN |cwnd 29200 csum 32062 urgent 0


Pkt #1121057089 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Previous one is: Flow { src_ip: 0, dst_ip: 0, src_port: 0, dst_port: 0, proto: 0 }


TCP Headers: tcp src_port 443 dst_port 55818 seq 100137584 ack 1121057090 data_offset 10 flags | ACK SYN |cwnd 28480 csum 20830 urgent 0


Pkt #100137584 is Vacant

And the flow is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }


TCP Headers: tcp src_port 55818 dst_port 443 seq 1121057090 ack 100137585 data_offset 8 flags | ACK |cwnd 229 csum 60922 urgent 0


Pkt #1121057090 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Previous one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }


TCP Headers: tcp src_port 55818 dst_port 443 seq 1121057090 ack 100137585 data_offset 8 flags | ACK PSH |cwnd 229 csum 54607 urgent 0


Pkt #1121057090 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
is client hello
Matching server name
is client hello: ClientHelloPayload { client_version: TLSv1_2, random: Random([150, 43, 134, 173, 225, 98, 54, 0, 0, 4, 238, 3, 232, 150, 167, 238, 61, 82, 212, 11, 58, 34, 1, 160, 178, 0, 9, 171, 67, 235, 194, 89]), session_id: SessionID(97, 145, 85, 7, 144, 202, 204, 23, 26, 45, 64, 101, 39, 176, 107, 42, 214, 197, 33, 142, 8, 162, 186, 18, 247, 124, 109, 183, 95, 176, 2, 45), cipher_suites: [TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_DHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256, TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384, TLS_DHE_RSA_WITH_AES_256_CBC_SHA256, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256, TLS_DHE_RSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_GCM_SHA384, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_EMPTY_RENEGOTIATION_INFO_SCSV], compression_methods: [Null], extensions: [ServerName([ServerName { typ: HostName, payload: HostName(DNSName("api.github.com")) }]), ECPointFormats([Uncompressed, ANSIX962CompressedPrime, ANSIX962CompressedChar2]), NamedGroups([X25519, secp256r1, secp521r1, secp384r1]), Unknown(UnknownExtension { typ: NextProtocolNegotiation, payload: Payload([]) }), Protocols([PayloadU8([104, 116, 116, 112, 47, 49, 46, 49])]), Unknown(UnknownExtension { typ: Unknown(22), payload: Payload([]) }), ExtendedMasterSecretRequest, SignatureAlgorithms([RSA_PKCS1_SHA512, Unknown(1538), ECDSA_NISTP521_SHA512, RSA_PKCS1_SHA384, Unknown(1282), ECDSA_NISTP384_SHA384, RSA_PKCS1_SHA256, Unknown(1026), ECDSA_NISTP256_SHA256, Unknown(769), Unknown(770), Unknown(771), RSA_PKCS1_SHA1, Unknown(514), ECDSA_SHA1_Legacy])] }
is client hello
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped

 ************************************************ 
      3: Packet match handshake!
      
Message { typ: Handshake, version: TLSv1_0, payload: Opaque(Payload([1, 0, 0, 237, 3, 3, 150, 43, 134, 173, 225, 98, 54, 0, 0, 4, 238, 3, 232, 150, 167, 238, 61, 82, 212, 11, 58, 34, 1, 160, 178, 0, 9, 171, 67, 235, 194, 89, 32, 97, 145, 85, 7, 144, 202, 204, 23, 26, 45, 64, 101, 39, 176, 107, 42, 214, 197, 33, 142, 8, 162, 186, 18, 247, 124, 109, 183, 95, 176, 2, 45, 0, 56, 192, 44, 192, 48, 0, 159, 204, 169, 204, 168, 204, 170, 192, 43, 192, 47, 0, 158, 192, 36, 192, 40, 0, 107, 192, 35, 192, 39, 0, 103, 192, 10, 192, 20, 0, 57, 192, 9, 192, 19, 0, 51, 0, 157, 0, 156, 0, 61, 0, 60, 0, 53, 0, 47, 0, 255, 1, 0, 0, 108, 0, 0, 0, 19, 0, 17, 0, 0, 14, 97, 112, 105, 46, 103, 105, 116, 104, 117, 98, 46, 99, 111, 109, 0, 11, 0, 4, 3, 0, 1, 2, 0, 10, 0, 10, 0, 8, 0, 29, 0, 23, 0, 25, 0, 24, 51, 116, 0, 0, 0, 16, 0, 11, 0, 9, 8, 104, 116, 116, 112, 47, 49, 46, 49, 0, 22, 0, 0, 0, 23, 0, 0, 0, 13, 0, 32, 0, 30, 6, 1, 6, 2, 6, 3, 5, 1, 5, 2, 5, 3, 4, 1, 4, 2, 4, 3, 3, 1, 3, 2, 3, 3, 2, 1, 2, 2, 2, 3])) }

reading size of 246 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 246
      4: This packet is inserted, quack


TCP Headers: tcp src_port 443 dst_port 55818 seq 100137585 ack 1121057336 data_offset 8 flags | ACK |cwnd 29 csum 6539 urgent 0


Pkt #100137585 is Vacant

And the flow is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
not client hello
not client hello
is server hello
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped

 ************************************************ 
      3: Packet match handshake!
      
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([2, 0, 0, 108, 3, 3, 5, 17, 153, 38, 47, 90, 148, 13, 128, 158, 238, 14, 135, 231, 221, 125, 179, 60, 235, 4, 122, 222, 128, 29, 68, 79, 87, 78, 71, 82, 68, 1, 32, 134, 39, 220, 195, 186, 104, 187, 64, 147, 5, 175, 255, 215, 58, 182, 83, 241, 117, 96, 42, 129, 157, 120, 241, 176, 5, 243, 231, 244, 9, 62, 54, 192, 47, 0, 0, 36, 255, 1, 0, 1, 0, 0, 0, 0, 0, 0, 11, 0, 4, 3, 0, 1, 2, 0, 16, 0, 11, 0, 9, 8, 104, 116, 116, 112, 47, 49, 46, 49, 0, 23, 0, 0])) }

reading size of 1348 payload into the flow entry 
Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1348
      4: This packet is inserted, quack


TCP Headers: tcp src_port 55818 dst_port 443 seq 1121057336 ack 100138933 data_offset 8 flags | ACK |cwnd 250 csum 59259 urgent 0

Pkt #1121057336 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Previous one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Reverse of the current one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 0 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 0
Passing because is not Change Client Spec


TCP Headers: tcp src_port 443 dst_port 55818 seq 100138933 ack 1121057336 data_offset 8 flags | ACK PSH |cwnd 29 csum 34164 urgent 0

Pkt #100138933 is Occupied!

And the flow is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Reverse of the current one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1448 payload into the flow entry 
Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1448
Passing because is not Change Client Spec


TCP Headers: tcp src_port 55818 dst_port 443 seq 1121057336 ack 100140871 data_offset 8 flags | ACK |cwnd 280 csum 57290 urgent 0

Pkt #1121057336 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Previous one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Reverse of the current one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 0 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 0
Passing because is not Change Client Spec


TCP Headers: tcp src_port 55818 dst_port 443 seq 1121057336 ack 100140871 data_offset 8 flags | ACK PSH |cwnd 280 csum 14999 urgent 0

Pkt #1121057336 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Reverse of the current one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }


We have hit a flow but the current packet match handshake!
Suppect to be starting a new TLS handshake, we should remove the hash value and start again
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([16, 0, 0, 33, 32, 0, 195, 47, 103, 23, 95, 102, 94, 4, 252, 155, 55, 237, 224, 141, 18, 114, 205, 27, 18, 110, 20, 56, 116, 94, 220, 57, 118, 243, 118, 0, 68])) }
Inserted
We first empty the value of  Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
reading size of 93 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 93
is Client Key Exchange

The current packet is a client key exchange, so let's evict the flow entry for Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }

Matching server name
not client hello
DEBUG: entering and then parsing the huge payload 
ServerHelloPayload { legacy_version: TLSv1_2, random: Random([5, 17, 153, 38, 47, 90, 148, 13, 128, 158, 238, 14, 135, 231, 221, 125, 179, 60, 235, 4, 122, 222, 128, 29, 68, 79, 87, 78, 71, 82, 68, 1]), session_id: SessionID(134, 39, 220, 195, 186, 104, 187, 64, 147, 5, 175, 255, 215, 58, 182, 83, 241, 117, 96, 42, 129, 157, 120, 241, 176, 5, 243, 231, 244, 9, 62, 54), cipher_suite: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, compression_method: Null, extensions: [RenegotiationInfo(PayloadU8([])), ServerNameAck, ECPointFormats([Uncompressed, ANSIX962CompressedPrime, ANSIX962CompressedChar2]), Protocols([PayloadU8([104, 116, 116, 112, 47, 49, 46, 49])]), ExtendedMasterSecretAck] }

And the magic number is 117

Get None, abort

DEBUG: We now retrieve the certs from the tcp payload
Err(CertificateNotExtractedError)

error: CertificateNotExtractedError


TCP Headers: tcp src_port 443 dst_port 55818 seq 100140871 ack 1121057429 data_offset 8 flags | ACK PSH |cwnd 29 csum 15180 urgent 0

Pkt #100140871 is Occupied!

And the flow is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Reverse of the current one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }

Packet type is not matched!
Passing because is not Change Client Spec


TCP Headers: tcp src_port 55818 dst_port 443 seq 1121057429 ack 100140922 data_offset 8 flags | ACK PSH |cwnd 280 csum 54583 urgent 0

Pkt #1121057429 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Previous one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Reverse of the current one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }

Packet type is not matched!
Passing because is not Change Client Spec


TCP Headers: tcp src_port 443 dst_port 55818 seq 100140922 ack 1121057643 data_offset 8 flags | ACK PSH |cwnd 30 csum 7231 urgent 0

Pkt #100140922 is Occupied!

And the flow is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Reverse of the current one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }

Packet type is not matched!
Passing because is not Change Client Spec


TCP Headers: tcp src_port 55818 dst_port 443 seq 1121057643 ack 100141929 data_offset 8 flags | ACK PSH |cwnd 301 csum 65316 urgent 0

Pkt #1121057643 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Previous one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Reverse of the current one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }

Packet type is not matched!
Passing because is not Change Client Spec


TCP Headers: tcp src_port 55818 dst_port 443 seq 1121057674 ack 100141929 data_offset 8 flags | ACK FIN |cwnd 301 csum 55772 urgent 0

Pkt #1121057674 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Reverse of the current one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 245 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 245
Passing because is not Change Client Spec


TCP Headers: tcp src_port 443 dst_port 55818 seq 100141929 ack 1121057674 data_offset 8 flags | ACK PSH |cwnd 30 csum 54650 urgent 0

Pkt #100141929 is Occupied!

And the flow is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Reverse of the current one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }

Packet type is not matched!
Passing because is not Change Client Spec


TCP Headers: tcp src_port 55818 dst_port 443 seq 1121057674 ack 0 data_offset 5 flags | RST |cwnd 0 csum 6147 urgent 0

Pkt #1121057674 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Previous one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Reverse of the current one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 6 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 6
Passing because is not Change Client Spec


TCP Headers: tcp src_port 443 dst_port 55818 seq 100141960 ack 1121057674 data_offset 8 flags | ACK FIN |cwnd 30 csum 56007 urgent 0

Pkt #100141960 is Occupied!

And the flow is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Reverse of the current one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 0 payload into the flow entry 
Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 0
Passing because is not Change Client Spec


TCP Headers: tcp src_port 55818 dst_port 443 seq 1121057674 ack 0 data_offset 5 flags | RST |cwnd 0 csum 6147 urgent 0

Pkt #1121057674 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Previous one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Reverse of the current one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 0 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 0
Passing because is not Change Client Spec


TCP Headers: tcp src_port 443 dst_port 55818 seq 100141961 ack 1121057675 data_offset 8 flags | ACK |cwnd 30 csum 56004 urgent 0

Pkt #100141961 is Occupied!

And the flow is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Reverse of the current one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 0 payload into the flow entry 
Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 0
Passing because is not Change Client Spec


TCP Headers: tcp src_port 55818 dst_port 443 seq 1121057675 ack 0 data_offset 5 flags | RST |cwnd 0 csum 6146 urgent 0

Pkt #1121057675 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Previous one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Reverse of the current one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1
Passing because is not Change Client Spec


TCP Headers: tcp src_port 60234 dst_port 80 seq 3858204992 ack 0 data_offset 10 flags | SYN |cwnd 29200 csum 61336 urgent 0


Pkt #3858204992 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 1749696920, src_port: 80, dst_port: 60234, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }


TCP Headers: tcp src_port 80 dst_port 60234 seq 746321822 ack 3858204993 data_offset 10 flags | ACK SYN |cwnd 28960 csum 27782 urgent 0


Pkt #746321822 is Vacant

And the flow is: Flow { src_ip: 1749696920, dst_ip: 2886997012, src_port: 60234, dst_port: 80, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 1749696920, src_port: 80, dst_port: 60234, proto: 6 }


TCP Headers: tcp src_port 60234 dst_port 80 seq 3858204993 ack 746321823 data_offset 8 flags | ACK |cwnd 229 csum 2821 urgent 0


Pkt #3858204993 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 1749696920, src_port: 80, dst_port: 60234, proto: 6 }
Previous one is: Flow { src_ip: 1749696920, dst_ip: 2886997012, src_port: 60234, dst_port: 80, proto: 6 }


TCP Headers: tcp src_port 60234 dst_port 80 seq 3858204993 ack 746321823 data_offset 8 flags | ACK PSH |cwnd 229 csum 60171 urgent 0


Pkt #3858204993 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 1749696920, src_port: 80, dst_port: 60234, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 1749696920, src_port: 80, dst_port: 60234, proto: 6 }


TCP Headers: tcp src_port 80 dst_port 60234 seq 746321823 ack 3858205289 data_offset 8 flags | ACK |cwnd 235 csum 2483 urgent 0


Pkt #746321823 is Vacant

And the flow is: Flow { src_ip: 1749696920, dst_ip: 2886997012, src_port: 60234, dst_port: 80, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 1749696920, src_port: 80, dst_port: 60234, proto: 6 }


TCP Headers: tcp src_port 80 dst_port 60234 seq 746321823 ack 3858205289 data_offset 8 flags | ACK PSH |cwnd 235 csum 63967 urgent 0


Pkt #746321823 is Vacant

And the flow is: Flow { src_ip: 1749696920, dst_ip: 2886997012, src_port: 60234, dst_port: 80, proto: 6 }
Previous one is: Flow { src_ip: 1749696920, dst_ip: 2886997012, src_port: 60234, dst_port: 80, proto: 6 }


TCP Headers: tcp src_port 60234 dst_port 80 seq 3858205289 ack 746322207 data_offset 8 flags | ACK |cwnd 237 csum 2071 urgent 0


Pkt #3858205289 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 1749696920, src_port: 80, dst_port: 60234, proto: 6 }
Previous one is: Flow { src_ip: 1749696920, dst_ip: 2886997012, src_port: 60234, dst_port: 80, proto: 6 }


TCP Headers: tcp src_port 57264 dst_port 443 seq 1019734861 ack 0 data_offset 10 flags | SYN |cwnd 29200 csum 42373 urgent 0


Pkt #1019734861 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 878292923, src_port: 443, dst_port: 57264, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 1749696920, src_port: 80, dst_port: 60234, proto: 6 }


TCP Headers: tcp src_port 36144 dst_port 443 seq 511174884 ack 0 data_offset 10 flags | SYN |cwnd 29200 csum 46039 urgent 0


Pkt #511174884 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 878292923, src_port: 443, dst_port: 57264, proto: 6 }


TCP Headers: tcp src_port 443 dst_port 57264 seq 1006881697 ack 1019734862 data_offset 10 flags | ACK SYN |cwnd 26847 csum 63591 urgent 0


Pkt #1006881697 is Vacant

And the flow is: Flow { src_ip: 878292923, dst_ip: 2886997012, src_port: 57264, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }


TCP Headers: tcp src_port 57264 dst_port 443 seq 1019734862 ack 1006881698 data_offset 8 flags | ACK |cwnd 229 csum 36424 urgent 0


Pkt #1019734862 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 878292923, src_port: 443, dst_port: 57264, proto: 6 }
Previous one is: Flow { src_ip: 878292923, dst_ip: 2886997012, src_port: 57264, dst_port: 443, proto: 6 }


TCP Headers: tcp src_port 443 dst_port 36144 seq 290467218 ack 511174885 data_offset 10 flags | ACK SYN |cwnd 28960 csum 52921 urgent 0


Pkt #290467218 is Vacant

And the flow is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 878292923, src_port: 443, dst_port: 57264, proto: 6 }


TCP Headers: tcp src_port 36144 dst_port 443 seq 511174885 ack 290467219 data_offset 8 flags | ACK |cwnd 229 csum 27966 urgent 0


Pkt #511174885 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }
Previous one is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }


TCP Headers: tcp src_port 57264 dst_port 443 seq 1019734862 ack 1006881698 data_offset 8 flags | ACK PSH |cwnd 229 csum 44963 urgent 0


Pkt #1019734862 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 878292923, src_port: 443, dst_port: 57264, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }
is client hello
Matching server name
is client hello: ClientHelloPayload { client_version: TLSv1_2, random: Random([78, 198, 115, 238, 156, 206, 218, 247, 55, 192, 167, 228, 241, 105, 46, 10, 114, 75, 104, 73, 15, 148, 167, 173, 131, 145, 89, 170, 136, 26, 144, 42]), session_id: SessionID(168, 110, 225, 207, 107, 57, 19, 10, 65, 1, 168, 140, 125, 230, 20, 30, 144, 219, 67, 140, 155, 47, 214, 131, 6, 151, 240, 154, 34, 60, 204, 246), cipher_suites: [TLS13_AES_128_GCM_SHA256, TLS13_CHACHA20_POLY1305_SHA256, TLS13_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_3DES_EDE_CBC_SHA], compression_methods: [Null], extensions: [ServerName([ServerName { typ: HostName, payload: HostName(DNSName("profile.accounts.firefox.com")) }]), ExtendedMasterSecretRequest, Unknown(UnknownExtension { typ: RenegotiationInfo, payload: Payload([0]) }), NamedGroups([X25519, secp256r1, secp384r1, secp521r1, FFDHE2048, FFDHE3072]), ECPointFormats([Uncompressed]), SessionTicketRequest, Protocols([PayloadU8([104, 50]), PayloadU8([104, 116, 116, 112, 47, 49, 46, 49])]), CertificateStatusRequest(OCSP(OCSPCertificateStatusRequest { responder_ids: [], extensions: PayloadU16([]) })), KeyShare([KeyShareEntry { group: X25519, payload: PayloadU16([57, 133, 29, 58, 197, 85, 207, 55, 198, 43, 21, 116, 43, 62, 236, 246, 183, 201, 118, 115, 100, 213, 110, 43, 29, 34, 214, 12, 60, 37, 30, 85]) }, KeyShareEntry { group: secp256r1, payload: PayloadU16([4, 151, 170, 13, 76, 126, 32, 28, 148, 240, 58, 115, 147, 48, 35, 117, 49, 170, 36, 228, 155, 73, 122, 245, 187, 83, 31, 158, 57, 192, 148, 140, 193, 169, 209, 245, 154, 85, 19, 1, 237, 66, 225, 189, 193, 1, 91, 23, 24, 193, 81, 59, 105, 226, 255, 45, 145, 197, 203, 97, 178, 151, 255, 207, 61]) }]), SupportedVersions([TLSv1_3, TLSv1_2, TLSv1_1, TLSv1_0]), SignatureAlgorithms([ECDSA_NISTP256_SHA256, ECDSA_NISTP384_SHA384, ECDSA_NISTP521_SHA512, RSA_PSS_SHA256, RSA_PSS_SHA384, RSA_PSS_SHA512, RSA_PKCS1_SHA256, RSA_PKCS1_SHA384, RSA_PKCS1_SHA512, ECDSA_SHA1_Legacy, RSA_PKCS1_SHA1]), PresharedKeyModes([PSK_DHE_KE]), Unknown(UnknownExtension { typ: Unknown(28), payload: Payload([64, 1]) }), Unknown(UnknownExtension { typ: Padding, payload: Payload([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) })] }
is client hello
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped

 ************************************************ 
      3: Packet match handshake!
      
Message { typ: Handshake, version: TLSv1_0, payload: Opaque(Payload([1, 0, 1, 252, 3, 3, 78, 198, 115, 238, 156, 206, 218, 247, 55, 192, 167, 228, 241, 105, 46, 10, 114, 75, 104, 73, 15, 148, 167, 173, 131, 145, 89, 170, 136, 26, 144, 42, 32, 168, 110, 225, 207, 107, 57, 19, 10, 65, 1, 168, 140, 125, 230, 20, 30, 144, 219, 67, 140, 155, 47, 214, 131, 6, 151, 240, 154, 34, 60, 204, 246, 0, 36, 19, 1, 19, 3, 19, 2, 192, 43, 192, 47, 204, 169, 204, 168, 192, 44, 192, 48, 192, 10, 192, 9, 192, 19, 192, 20, 0, 51, 0, 57, 0, 47, 0, 53, 0, 10, 1, 0, 1, 143, 0, 0, 0, 33, 0, 31, 0, 0, 28, 112, 114, 111, 102, 105, 108, 101, 46, 97, 99, 99, 111, 117, 110, 116, 115, 46, 102, 105, 114, 101, 102, 111, 120, 46, 99, 111, 109, 0, 23, 0, 0, 255, 1, 0, 1, 0, 0, 10, 0, 14, 0, 12, 0, 29, 0, 23, 0, 24, 0, 25, 1, 0, 1, 1, 0, 11, 0, 2, 1, 0, 0, 35, 0, 0, 0, 16, 0, 14, 0, 12, 2, 104, 50, 8, 104, 116, 116, 112, 47, 49, 46, 49, 0, 5, 0, 5, 1, 0, 0, 0, 0, 0, 51, 0, 107, 0, 105, 0, 29, 0, 32, 57, 133, 29, 58, 197, 85, 207, 55, 198, 43, 21, 116, 43, 62, 236, 246, 183, 201, 118, 115, 100, 213, 110, 43, 29, 34, 214, 12, 60, 37, 30, 85, 0, 23, 0, 65, 4, 151, 170, 13, 76, 126, 32, 28, 148, 240, 58, 115, 147, 48, 35, 117, 49, 170, 36, 228, 155, 73, 122, 245, 187, 83, 31, 158, 57, 192, 148, 140, 193, 169, 209, 245, 154, 85, 19, 1, 237, 66, 225, 189, 193, 1, 91, 23, 24, 193, 81, 59, 105, 226, 255, 45, 145, 197, 203, 97, 178, 151, 255, 207, 61, 0, 43, 0, 9, 8, 3, 4, 3, 3, 3, 2, 3, 1, 0, 13, 0, 24, 0, 22, 4, 3, 5, 3, 6, 3, 8, 4, 8, 5, 8, 6, 4, 1, 5, 1, 6, 1, 2, 3, 2, 1, 0, 45, 0, 2, 1, 1, 0, 28, 0, 2, 64, 1, 0, 21, 0, 130, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])) }

reading size of 517 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 878292923, src_port: 443, dst_port: 57264, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 517
      4: This packet is inserted, quack


TCP Headers: tcp src_port 36144 dst_port 443 seq 511174885 ack 290467219 data_offset 8 flags | ACK PSH |cwnd 229 csum 9810 urgent 0


Pkt #511174885 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 878292923, src_port: 443, dst_port: 57264, proto: 6 }
is client hello
Matching server name
is client hello: ClientHelloPayload { client_version: TLSv1_2, random: Random([180, 194, 199, 125, 254, 74, 20, 224, 231, 20, 23, 25, 59, 239, 87, 193, 144, 114, 16, 55, 82, 43, 113, 169, 36, 227, 192, 5, 240, 96, 250, 193]), session_id: SessionID(14, 208, 151, 20, 18, 92, 112, 80, 55, 75, 98, 123, 182, 165, 252, 189, 77, 191, 207, 6, 88, 131, 244, 157, 193, 164, 100, 105, 89, 185, 179, 116), cipher_suites: [TLS13_AES_128_GCM_SHA256, TLS13_CHACHA20_POLY1305_SHA256, TLS13_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_3DES_EDE_CBC_SHA], compression_methods: [Null], extensions: [ServerName([ServerName { typ: HostName, payload: HostName(DNSName("snippets.cdn.mozilla.net")) }]), ExtendedMasterSecretRequest, Unknown(UnknownExtension { typ: RenegotiationInfo, payload: Payload([0]) }), NamedGroups([X25519, secp256r1, secp384r1, secp521r1, FFDHE2048, FFDHE3072]), ECPointFormats([Uncompressed]), SessionTicketRequest, Protocols([PayloadU8([104, 50]), PayloadU8([104, 116, 116, 112, 47, 49, 46, 49])]), CertificateStatusRequest(OCSP(OCSPCertificateStatusRequest { responder_ids: [], extensions: PayloadU16([]) })), KeyShare([KeyShareEntry { group: X25519, payload: PayloadU16([177, 32, 7, 168, 124, 90, 1, 57, 95, 99, 130, 154, 207, 245, 23, 127, 238, 177, 187, 133, 105, 212, 167, 40, 40, 238, 82, 204, 220, 249, 226, 87]) }, KeyShareEntry { group: secp256r1, payload: PayloadU16([4, 65, 84, 78, 49, 127, 238, 60, 138, 88, 44, 231, 91, 7, 156, 143, 141, 95, 47, 155, 5, 10, 234, 208, 101, 185, 171, 146, 94, 127, 36, 181, 87, 92, 10, 183, 35, 164, 131, 12, 13, 150, 110, 131, 253, 155, 157, 29, 160, 163, 79, 129, 166, 195, 80, 138, 162, 169, 153, 66, 127, 59, 189, 251, 205]) }]), SupportedVersions([TLSv1_3, TLSv1_2, TLSv1_1, TLSv1_0]), SignatureAlgorithms([ECDSA_NISTP256_SHA256, ECDSA_NISTP384_SHA384, ECDSA_NISTP521_SHA512, RSA_PSS_SHA256, RSA_PSS_SHA384, RSA_PSS_SHA512, RSA_PKCS1_SHA256, RSA_PKCS1_SHA384, RSA_PKCS1_SHA512, ECDSA_SHA1_Legacy, RSA_PKCS1_SHA1]), PresharedKeyModes([PSK_DHE_KE]), Unknown(UnknownExtension { typ: Unknown(28), payload: Payload([64, 1]) }), Unknown(UnknownExtension { typ: Padding, payload: Payload([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) })] }
is client hello
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped

 ************************************************ 
      3: Packet match handshake!
      
Message { typ: Handshake, version: TLSv1_0, payload: Opaque(Payload([1, 0, 1, 252, 3, 3, 180, 194, 199, 125, 254, 74, 20, 224, 231, 20, 23, 25, 59, 239, 87, 193, 144, 114, 16, 55, 82, 43, 113, 169, 36, 227, 192, 5, 240, 96, 250, 193, 32, 14, 208, 151, 20, 18, 92, 112, 80, 55, 75, 98, 123, 182, 165, 252, 189, 77, 191, 207, 6, 88, 131, 244, 157, 193, 164, 100, 105, 89, 185, 179, 116, 0, 36, 19, 1, 19, 3, 19, 2, 192, 43, 192, 47, 204, 169, 204, 168, 192, 44, 192, 48, 192, 10, 192, 9, 192, 19, 192, 20, 0, 51, 0, 57, 0, 47, 0, 53, 0, 10, 1, 0, 1, 143, 0, 0, 0, 29, 0, 27, 0, 0, 24, 115, 110, 105, 112, 112, 101, 116, 115, 46, 99, 100, 110, 46, 109, 111, 122, 105, 108, 108, 97, 46, 110, 101, 116, 0, 23, 0, 0, 255, 1, 0, 1, 0, 0, 10, 0, 14, 0, 12, 0, 29, 0, 23, 0, 24, 0, 25, 1, 0, 1, 1, 0, 11, 0, 2, 1, 0, 0, 35, 0, 0, 0, 16, 0, 14, 0, 12, 2, 104, 50, 8, 104, 116, 116, 112, 47, 49, 46, 49, 0, 5, 0, 5, 1, 0, 0, 0, 0, 0, 51, 0, 107, 0, 105, 0, 29, 0, 32, 177, 32, 7, 168, 124, 90, 1, 57, 95, 99, 130, 154, 207, 245, 23, 127, 238, 177, 187, 133, 105, 212, 167, 40, 40, 238, 82, 204, 220, 249, 226, 87, 0, 23, 0, 65, 4, 65, 84, 78, 49, 127, 238, 60, 138, 88, 44, 231, 91, 7, 156, 143, 141, 95, 47, 155, 5, 10, 234, 208, 101, 185, 171, 146, 94, 127, 36, 181, 87, 92, 10, 183, 35, 164, 131, 12, 13, 150, 110, 131, 253, 155, 157, 29, 160, 163, 79, 129, 166, 195, 80, 138, 162, 169, 153, 66, 127, 59, 189, 251, 205, 0, 43, 0, 9, 8, 3, 4, 3, 3, 3, 2, 3, 1, 0, 13, 0, 24, 0, 22, 4, 3, 5, 3, 6, 3, 8, 4, 8, 5, 8, 6, 4, 1, 5, 1, 6, 1, 2, 3, 2, 1, 0, 45, 0, 2, 1, 1, 0, 28, 0, 2, 64, 1, 0, 21, 0, 134, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])) }

reading size of 517 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 517
      4: This packet is inserted, quack


TCP Headers: tcp src_port 443 dst_port 36144 seq 290467219 ack 511175402 data_offset 8 flags | ACK |cwnd 118 csum 27555 urgent 0


Pkt #290467219 is Vacant

And the flow is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }


TCP Headers: tcp src_port 49378 dst_port 443 seq 612902753 ack 0 data_offset 10 flags | SYN |cwnd 29200 csum 18798 urgent 0


Pkt #612902753 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 873107063, src_port: 443, dst_port: 49378, proto: 6 }
Previous one is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }


TCP Headers: tcp src_port 443 dst_port 36144 seq 290467219 ack 511175402 data_offset 8 flags | ACK |cwnd 118 csum 51641 urgent 0


Pkt #290467219 is Vacant

And the flow is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 873107063, src_port: 443, dst_port: 49378, proto: 6 }
not client hello
not client hello
is server hello
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped

 ************************************************ 
      3: Packet match handshake!
      
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([2, 0, 0, 80, 3, 3, 20, 144, 5, 107, 14, 107, 6, 242, 90, 67, 85, 137, 56, 148, 169, 119, 167, 94, 136, 137, 1, 173, 201, 189, 215, 190, 114, 39, 182, 179, 44, 222, 0, 192, 47, 0, 0, 40, 0, 0, 0, 0, 255, 1, 0, 1, 0, 0, 11, 0, 4, 3, 0, 1, 2, 0, 35, 0, 0, 0, 5, 0, 0, 0, 16, 0, 11, 0, 9, 8, 104, 116, 116, 112, 47, 49, 46, 49])) }

reading size of 1348 payload into the flow entry 
Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1348
      4: This packet is inserted, quack


TCP Headers: tcp src_port 36144 dst_port 443 seq 511175402 ack 290468567 data_offset 8 flags | ACK |cwnd 250 csum 26044 urgent 0

Pkt #511175402 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }
Previous one is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }
Reverse of the current one is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 0 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 0
Passing because is not Change Client Spec


TCP Headers: tcp src_port 443 dst_port 36144 seq 290468567 ack 511175402 data_offset 8 flags | ACK |cwnd 118 csum 3987 urgent 0

Pkt #290468567 is Occupied!

And the flow is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }
Reverse of the current one is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1348 payload into the flow entry 
Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1348
Passing because is not Change Client Spec


TCP Headers: tcp src_port 36144 dst_port 443 seq 511175402 ack 290469915 data_offset 8 flags | ACK |cwnd 271 csum 24675 urgent 0

Pkt #511175402 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }
Previous one is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }
Reverse of the current one is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 0 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 0
Passing because is not Change Client Spec


TCP Headers: tcp src_port 443 dst_port 36144 seq 290469915 ack 511175402 data_offset 8 flags | ACK PSH |cwnd 118 csum 10074 urgent 0

Pkt #290469915 is Occupied!

And the flow is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }
Reverse of the current one is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1448 payload into the flow entry 
Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1448
Passing because is not Change Client Spec


TCP Headers: tcp src_port 36144 dst_port 443 seq 511175402 ack 290471621 data_offset 8 flags | ACK |cwnd 297 csum 22942 urgent 0

Pkt #511175402 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }
Previous one is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }
Reverse of the current one is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 0 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 0
Passing because is not Change Client Spec


TCP Headers: tcp src_port 36144 dst_port 443 seq 511175402 ack 290471621 data_offset 8 flags | ACK PSH |cwnd 297 csum 10763 urgent 0

Pkt #511175402 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }
Reverse of the current one is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }


We have hit a flow but the current packet match handshake!
Suppect to be starting a new TLS handshake, we should remove the hash value and start again
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([16, 0, 0, 66, 65, 4, 170, 41, 154, 125, 13, 220, 125, 135, 149, 145, 181, 49, 69, 89, 76, 154, 163, 93, 106, 127, 148, 70, 104, 16, 19, 98, 209, 143, 203, 184, 209, 239, 147, 90, 168, 48, 203, 41, 34, 234, 166, 139, 192, 1, 172, 224, 208, 187, 27, 188, 135, 239, 216, 88, 154, 94, 17, 39, 41, 2, 185, 208, 75, 33])) }
Inserted
We first empty the value of  Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }
reading size of 126 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 126
is Client Key Exchange

The current packet is a client key exchange, so let's evict the flow entry for Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }

Matching server name
not client hello
DEBUG: entering and then parsing the huge payload 
ServerHelloPayload { legacy_version: TLSv1_2, random: Random([20, 144, 5, 107, 14, 107, 6, 242, 90, 67, 85, 137, 56, 148, 169, 119, 167, 94, 136, 137, 1, 173, 201, 189, 215, 190, 114, 39, 182, 179, 44, 222]), session_id: SessionID, cipher_suite: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, compression_method: Null, extensions: [ServerNameAck, RenegotiationInfo(PayloadU8([])), ECPointFormats([Uncompressed, ANSIX962CompressedPrime, ANSIX962CompressedChar2]), SessionTicketAck, CertificateStatusAck, Protocols([PayloadU8([104, 116, 116, 112, 47, 49, 46, 49])])] }

And the magic number is 89

Certificate payload is
[Certificate(b"0\x82\x0560\x82\x04\x1e\xa0\x03\x02\x01\x02\x02\x10\x0c\xa9\xc6Ca\xbf\xc9*y\xb1\xdd\x9c\xfb\x9eH\xec0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\00M1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1'0%\x06\x03U\x04\x03\x13\x1eDigiCert SHA2 Secure Server CA0\x1e\x17\r161103000000Z\x17\r200201120000Z0t1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x130\x11\x06\x03U\x04\x08\x13\nCalifornia1\x160\x14\x06\x03U\x04\x07\x13\rMountain View1\x1c0\x1a\x06\x03U\x04\n\x13\x13Mozilla Corporation1\x1a0\x18\x06\x03U\x04\x03\x0c\x11*.cdn.mozilla.net0\x82\x01\"0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x01\x05\0\x03\x82\x01\x0f\00\x82\x01\n\x02\x82\x01\x01\0\xcd!Mx^zpA[\xa7\x02\x133U/\xa5\xc1\x1cc\xe4\xaf5\x1c\xfbR>\x9d\xf0/\x96q\xfe\x1c\x917\xf1\x85\xe3\x91\xf6xaA)\xfb\xd4\x11\xfe\xe3\x8a\xce\xad\x9b\xf2<H\xdf\xfbh\xde8\xa7@\x1e\xad\x1ew\xa706R\xdf\r\n:ql\xcb\x89\x17\xa5\xefcl\xaf\xfe\x0f\xed\xbbvY\x8c\x12\n\x9f\xf2 G\xf3\xb2w\x81R9\xdaC\x8ce\x0c\xf1mvE&\x9e\x89\x05\x07\x0bP\xee1\x82\xb0\x9c\xfa.\x0e(\xf3\xa1\xd3\x17<6\xbb;\xddlj\x15\xbc\xee\xde\xa5*t\xbb\x13\xd0\xa05\xd9.\xe6\\EL\xe7\xb8\xf3B\x1c\xf7'~rRMe\x9e\x9d6\xd9\xf0a\xfa\xcaj\xacre\02\x04=\x126\xc98Y\xea^\x94?\x95\x06\x88\xc3\x8c\xdd\xccs\xba\xcc\xc0\x1e\xbbL9\xea\xd4\xc6\"@\x8f\xe5\r\xff!\xf5L\xe9\xb5\xedb\x1f\xf3\xd0\xc5})1\xf2\xf1C\xb6\xdc\x8f\x1e\xcb\xa0\xbe\x9b!\xdd\xcd\xf7v\xbf\xdb\xeb\x03\xdd\x1aK\x02\x03\x01\0\x01\xa3\x82\x01\xe90\x82\x01\xe50\x1f\x06\x03U\x1d#\x04\x180\x16\x80\x14\x0f\x80a\x1c\x821a\xd5/(\xe7\x8dF8\xb4,\xe1\xc6\xd9\xe20\x1d\x06\x03U\x1d\x0e\x04\x16\x04\x143\xc0\x98\xd2sP43;\xffw9)\xcc@f\x94\nt=0-\x06\x03U\x1d\x11\x04&0$\x82\x11*.cdn.mozilla.net\x82\x0fcdn.mozilla.net0\x0e\x06\x03U\x1d\x0f\x01\x01\xff\x04\x04\x03\x02\x05\xa00\x1d\x06\x03U\x1d%\x04\x160\x14\x06\x08+\x06\x01\x05\x05\x07\x03\x01\x06\x08+\x06\x01\x05\x05\x07\x03\x020k\x06\x03U\x1d\x1f\x04d0b0/\xa0-\xa0+\x86)http://crl3.digicert.com/ssca-sha2-g5.crl0/\xa0-\xa0+\x86)http://crl4.digicert.com/ssca-sha2-g5.crl0L\x06\x03U\x1d \x04E0C07\x06\t`\x86H\x01\x86\xfdl\x01\x010*0(\x06\x08+\x06\x01\x05\x05\x07\x02\x01\x16\x1chttps://www.digicert.com/CPS0\x08\x06\x06g\x81\x0c\x01\x02\x020|\x06\x08+\x06\x01\x05\x05\x07\x01\x01\x04p0n0$\x06\x08+\x06\x01\x05\x05\x070\x01\x86\x18http://ocsp.digicert.com0F\x06\x08+\x06\x01\x05\x05\x070\x02\x86:http://cacerts.digicert.com/DigiCertSHA2SecureServerCA.crt0\x0c\x06\x03U\x1d\x13\x01\x01\xff\x04\x020\00\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\0\x03\x82\x01\x01\0\x8eS\xb9\xc7\x8cI\xbd$\xb8eMBd\xd4\xb1Q\xf4\x04\x15Uu\x87U\xa2\xf8\xca\xb9D\xcbkCv\xcdo\xb3l\xf76um]x9\x06\x01\xfc\xb8;-)`$\xf4\x86\xc0\x81X\x08X,\02\xa3\xb6+(\xd7\xa8\x85=$\xc5p\xf7\x03T5\x8e\x9d\xc8\x8d\xd8\r`}7\t}`\x0c\xf7\x97\x14\xda\xa0\x93\xd2\xa8}\xf8\xcf\xd6'\x86\x9c\xedF\x86|\x9bF~\x89\x90/x\xd8\xc2\xd8\xd3\x10l\xf2\x0b\xff\xe3\xbc\xd6DJ\xb9`\x03\\!QI\xea4]\x8b\x07\x9e\x0b\x81N\xeeM\x96\x08\xba_\xaa5\xea\xef\xc1k\xbaH\xd6\x01M\xdaB\xd7~Dn\x80\xc1\xab\"\x93U\x8d\xf0'\xfd\xd7\x11\xe6\x97J\xa5q>+0\xaa\xb7y\xf1F\x17\xc4];\xe4\x19\xac\xd2\x04\x9a\x19.[\xfb\xb7\xbc\xa4y\xfc\xee\xadz@[B=\xb1\x84\x99\xb4rJ\xdc\xccY7\x1b\xe2g4\x0e\x10J,\xab\xb4>\xd9\xac\x9bb\xb3\xeaI\xf0TV\x9dvt_\xab"), Certificate(b"0\x82\x04\x940\x82\x03|\xa0\x03\x02\x01\x02\x02\x10\x01\xfd\xa3\xebn\xcau\xc8\x88C\x8brK\xcf\xbc\x910\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\00a1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1\x190\x17\x06\x03U\x04\x0b\x13\x10www.digicert.com1 0\x1e\x06\x03U\x04\x03\x13\x17DigiCert Global Root CA0\x1e\x17\r130308120000Z\x17\r230308120000Z0M1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1'0%\x06\x03U\x04\x03\x13\x1eDigiCert SHA2 Secure Server CA0\x82\x01\"0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x01\x05\0\x03\x82\x01\x0f\00\x82\x01\n\x02\x82\x01\x01\0\xdc\xaeX\x90M\xc1\xc40\x15\x905[n<\x82\x15\xf5,\\\xbd\xe3\xdb\xffqC\xfad%\x80\xd4\xee\x18\xa2M\xf0f\xd0\nsn\x11\x986\x17d\xaf7\x9d\xfd\xfaA\x84\xaf\xc7\xaf\x8c\xfe\x1asM\xcf3\x97\x90\xa2\x96\x87S\x83+\xb9\xa6uH-\x1dV7{\xda12\x1a\xd7\xac\xab\x06\xf4\xaa]K\xb7GF\xdd*\x93\xc3\x90.y\x80\x80\xef\x13\x04j\x14;\xb5\x9b\x92\xbe\xc2\x07eN\xfc\xda\xfc\xffz\xae\xdc\\~U1\x0c\xe89\x07\xa4\xd7\xbe/\xd3\x0bj\xd2\xb1\xdf_\xfeWtS;5\x80\xdd\xae\x8eD\x98\xb3\x9f\x0e\xd3\xda\xe0\xd7\xf4k)\xabD\xa7KX\x84m\x92K\x81\xc3\xdas\x8b\x12\x97H\x90\x04Eu\x1a\xdd71\x97\x92\xe8\xcdT\r;\xe4\xc1?9^.\xb8\xf3\\~\x10\x8e\x86A\0\x8dEfG\xb0\xa1e\xce\xa0\xaa)\tN\xf3\x97\xeb\xe8.\xab\x0fr\xa70\x0e\xfa\xc7\xf4\xfd\x14w\xc3\xa4[(W\xc2\xb3\xf9\x82\xfd\xb7EX\x9b\x02\x03\x01\0\x01\xa3\x82\x01Z0\x82\x01V0\x12\x06\x03U\x1d\x13\x01\x01\xff\x04\x080\x06\x01\x01\xff\x02\x01\00\x0e\x06\x03U\x1d\x0f\x01\x01\xff\x04\x04\x03\x02\x01\x8604\x06\x08+\x06\x01\x05\x05\x07\x01\x01\x04(0&0$\x06\x08+\x06\x01\x05\x05\x070\x01\x86\x18http://ocsp.digicert.com0{\x06\x03U\x1d\x1f\x04t0r07\xa05\xa03\x861http://crl3.digicert.com/DigiCertGlobalRootCA.crl07\xa05\xa03\x861http://crl4.digicert.com/DigiCertGlobalRootCA.crl0=\x06\x03U\x1d \x0460402\x06\x04U\x1d \00*0(\x06\x08+\x06\x01\x05\x05\x07\x02\x01\x16\x1chttps://www.digicert.com/CPS0\x1d\x06\x03U\x1d\x0e\x04\x16\x04\x14\x0f\x80a\x1c\x821a\xd5/(\xe7\x8dF8\xb4,\xe1\xc6\xd9\xe20\x1f\x06\x03U\x1d#\x04\x180\x16\x80\x14\x03\xdeP5V\xd1L\xbbf\xf0\xa3\xe2\x1b\x1b\xc3\x97\xb2=\xd1U0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\0\x03\x82\x01\x01\0#>\xdfK\xd21B\xa5\xb6~B\\\x1aD\xcci\xd1h\xb4]K\xe0\x04!lK\xe2m\xcc\xb1\xe0\x97\x8f\xa6S\t\xcd\xaa*e\xe59O\x1e\x83\xa5n\\\x98\xa2$&\xe6\xfb\xa1\xed\x93\xc7.\x02\xc6MJ\xbf\xb0B\xdfx\xda\xb3\xa8\xf9m\xff!\x85S6`Lv\xce\xec8\xdc\xd6Q\x80\xf0\xc5\xd6\xe5\xd4M'd\xab\x9b\xc7>q\xfbH\x97\xb83m\xc9\x13\x07\xee\x96\xa2\x1b\x18\x15\xf6\\L@\xed\xb3\xc2\xec\xffq\xc1\xe3G\xff\xd4\xb9\0\xb47B\xda \xc9\xean\x8a\xee\x14\x06\xae}\xa2Y\x98\x88\xa8\x1bo-\xf4\xf2\xc9\x14_&\xcf,\x8d~\xed7\xc0\xa9\xd59\xb9\x82\xbf\x19\x0c\xea4\xaf\0!h\xf8\xads\xe2\xc92\xda8%\x0bU\xd3\x9a\x1d\xf0h\x86\xed.A4\xef|\xa5P\x1d\xbf:\xf9\xd3\xc1\x08\x0c\xe6\xed\x1e\x8aX%\xe4\xb8w\xad-n\xf5R\xdd\xb4t\x8f\xabI.\x9d;\x934(\x1fx\xce\x94\xea\xc7\xbd\xd3\xc9m\x1c\xde\\2\xf3"), Certificate(b"0\x82\x03\xaf0\x82\x02\x97\xa0\x03\x02\x01\x02\x02\x10\x08;\xe0V\x90BF\xb1\xa1uj\xc9Y\x91\xc7J0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x05\x05\00a1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1\x190\x17\x06\x03U\x04\x0b\x13\x10www.digicert.com1 0\x1e\x06\x03U\x04\x03\x13\x17DigiCert Global Root CA0\x1e\x17\r061110000000Z\x17\r311110000000Z0a1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1\x190\x17\x06\x03U\x04\x0b\x13\x10www.digicert.com1 0\x1e\x06\x03U\x04\x03\x13\x17DigiCert Global Root CA0\x82\x01\"0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x01\x05\0\x03\x82\x01\x0f\00\x82\x01\n\x02\x82\x01\x01\0\xe2;\xe1\x11r\xde\xa8\xa4\xd3\xa3W\xaaP\xa2\x8f\x0bw\x90\xc9\xa2\xa5\xee\x12\xce\x96[\x01\t \xcc\x01\x93\xa7N0\xb7S\xf7C\xc4i\0W\x9d\xe2\x8d\"\xdd\x87\x06@\0\x81\t\xce\xce\x1b\x83\xbf\xdf\xcd;qF\xe2\xd6f\xc7\x05\xb3v'\x16\x8f{\x9e\x1e\x95}\xee\xb7H\xa3\x08\xda\xd6\xafz\x0c9\x06e\x7fJ]\x1f\xbc\x17\xf8\xab\xbe\xee(\xd7t\x7fzx\x99Y\x85hn\\#2K\xbfN\xc0\xe8Zm\xe3p\xbfw\x10\xbf\xfc\x01\xf6\x85\xd9\xa8D\x10X2\xa9u\x18\xd5\xd1\xa2\xbeG\xe2'j\xf4\x9a3\xf8I\x08`\x8b\xd4_\xb4:\x84\xbf\xa1\xaaJL}>\xcfO_lv^\xa0K7\x91\x9e\xdc\"\xe6m\xce\x14\x1a\x8ej\xcb\xfe\xcd\xb3\x14d\x17\xc7[)\x9e2\xbf\xf2\xee\xfa\xd3\x0bB\xd4\xab\xb7A2\xda\x0c\xd4\xef\xf8\x81\xd5\xbb\x8dX?\xb5\x1b\xe8I(\xa2p\xda1\x04\xdd\xf7\xb2\x16\xf2L\nN\x07\xa8\xedJ=^\xb5\x7f\xa3\x90\xc3\xaf'\x02\x03\x01\0\x01\xa3c0a0\x0e\x06\x03U\x1d\x0f\x01\x01\xff\x04\x04\x03\x02\x01\x860\x0f\x06\x03U\x1d\x13\x01\x01\xff\x04\x050\x03\x01\x01\xff0\x1d\x06\x03U\x1d\x0e\x04\x16\x04\x14\x03\xdeP5V\xd1L\xbbf\xf0\xa3\xe2\x1b\x1b\xc3\x97\xb2=\xd1U0\x1f\x06\x03U\x1d#\x04\x180\x16\x80\x14\x03\xdeP5V\xd1L\xbbf\xf0\xa3\xe2\x1b\x1b\xc3\x97\xb2=\xd1U0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x05\x05\0\x03\x82\x01\x01\0\xcb\x9c7\xaaH\x13\x12\n\xfa\xddD\x9cOR\xb0\xf4\xdf\xae\x04\xf5yy\x08\xa3$\x18\xfcK+\x84\xc0-\xb9\xd5\xc7\xfe\xf4\xc1\x1fX\xcb\xb8m\x9czt\xe7\x98)\xab\x11\xb5\xe3p\xa0\xa1\xcdL\x88\x99\x93\x8c\x91p\xe2\xab\x0f\x1c\xbe\x93\xa9\xffc\xd5\xe4\x07`\xd3\xa3\xbf\x9d[\t\xf1\xd5\x8e\xe3S\xf4\x8ec\xfa?\xa7\xdb\xb4f\xdfbf\xd6\xd1nA\x8d\xf2-\xb5\xeawJ\x9f\x9dX\xe2+Y\xc0@#\xed-(\x82E>yT\x92&\x98\xe0\x80H\xa87\xef\xf0\xd6y`\x16\xde\xac\xe8\x0e\xcdn\xacD\x178/I\xda\xe1E>*\xb96S\xcf:P\x06\xf7.\xe8\xc4WIla!\x18\xd5\x04\xadx<,:\x80k\xa7\xeb\xaf\x15\x14\xe9\xd8\x89\xc1\xb98l\xe2\x91l\x8a\xffd\xb9w%W0\xc0\x1b$\xa3\xe1\xdc\xe9\xdfG|\xb5\xb4$\x08\x050\xec-\xbd\x0b\xbfE\xbfP\xb9\xa9\xf3\xeb\x98\x01\x12\xad\xc8\x88\xc6\x984_\x8d\n<\xc6\xe9\xd5\x95\x95m\xde")]
Oops, error: invalid certificate: CertNotValidForName

And the magic number is 3482

None

And the magic number is 484

