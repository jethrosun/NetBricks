Going to start with configuration Configuration: name:  =========== Running TLS Validator ============   mempool size: 2047 core cache: 32 primary core: 0
 Ports:
	Port 0000:01:00.1 RXQ_Count: 1 RX_Queues: [ 3 ] TXQ_Count: 1 TX_Queues: 3 RXD: 128 TXD: 128 Loopback false
	Port 0000:01:00.0 RXQ_Count: 1 RX_Queues: [ 2 ] TXQ_Count: 1 TX_Queues: 2 RXD: 128 TXD: 128 Loopback false
Cores:
	2
	3
	4
	5

EAL: Probing VFIO support...
Running on node 0
Devname: "0000:01:00.1"
EAL: PCI device 0000:01:00.1 on NUMA socket -1
EAL:   Invalid NUMA socket, default to 0
EAL:   probe driver: 8086:1583 net_i40e
Going to try and use port 0
Devname: "0000:01:00.0"
EAL: PCI device 0000:01:00.0 on NUMA socket -1
EAL:   Invalid NUMA socket, default to 0
EAL:   probe driver: 8086:1583 net_i40e
Going to try and use port 1
Running on node 0
Running on node 0
Running on node 0
Running on node 0
Receiving port f8:f2:1e:2e:9c:50 rxq 0 txq 0
Running 0 pipelines
Running 0 pipelines
Running 1 pipelines
Receiving port f8:f2:1e:2e:9c:51 rxq 0 txq 0
Starting scheduler on 2
Starting scheduler on 5
Running 1 pipelines
Starting scheduler on 3
Starting scheduler on 4
0 OVERALL RX 0.00 TX 0.00 CYCLE_PER_DELAY 0 0 0


TCP Headers: tcp src_port 55818 dst_port 443 seq 1121057089 ack 0 data_offset 10 flags | SYN |cwnd 29200 csum 32062 urgent 0


Pkt #1121057089 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Previous one is: Flow { src_ip: 0, dst_ip: 0, src_port: 0, dst_port: 0, proto: 0 }


TCP Headers: tcp src_port 443 dst_port 55818 seq 100137584 ack 1121057090 data_offset 10 flags | ACK SYN |cwnd 28480 csum 20830 urgent 0


Pkt #100137584 is Vacant

And the flow is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }


TCP Headers: tcp src_port 55818 dst_port 443 seq 1121057090 ack 100137585 data_offset 8 flags | ACK |cwnd 229 csum 60922 urgent 0


Pkt #1121057090 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Previous one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }


TCP Headers: tcp src_port 55818 dst_port 443 seq 1121057090 ack 100137585 data_offset 8 flags | ACK PSH |cwnd 229 csum 54607 urgent 0


Pkt #1121057090 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
is client hello
Matching server name

is client hello: [ServerName([ServerName { typ: HostName, payload: HostName(DNSName("api.github.com")) }]), ECPointFormats([Uncompressed, ANSIX962CompressedPrime, ANSIX962CompressedChar2]), NamedGroups([X25519, secp256r1, secp521r1, secp384r1]), Unknown(UnknownExtension { typ: NextProtocolNegotiation, payload: Payload([]) }), Protocols([PayloadU8([104, 116, 116, 112, 47, 49, 46, 49])]), Unknown(UnknownExtension { typ: Unknown(22), payload: Payload([]) }), ExtendedMasterSecretRequest, SignatureAlgorithms([RSA_PKCS1_SHA512, Unknown(1538), ECDSA_NISTP521_SHA512, RSA_PKCS1_SHA384, Unknown(1282), ECDSA_NISTP384_SHA384, RSA_PKCS1_SHA256, Unknown(1026), ECDSA_NISTP256_SHA256, Unknown(769), Unknown(770), Unknown(771), RSA_PKCS1_SHA1, Unknown(514), ECDSA_SHA1_Legacy])]

Server name : [ServerName { typ: HostName, payload: HostName(DNSName("api.github.com")) }]
payload to be: HostName(DNSName("api.github.com"))
DNS name is : DNSName("api.github.com")
is client hello
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped

result is seq: 1121057090, payload: [16, 3, 1, 0, f1, 1, 0, 0, ed, 3, 3, 96, 2b, 86, ad, e1, 62, 36, 0, 0, 4, ee, 3, e8, 96, a7, ee, 3d, 52, d4, b, 3a, 22, 1, a0, b2, 0, 9, ab, 43, eb, c2, 59, 20, 61, 91, 55, 7, 90, ca, cc, 17, 1a, 2d, 40, 65, 27, b0, 6b, 2a, d6, c5, 21, 8e, 8, a2, ba, 12, f7, 7c, 6d, b7, 5f, b0, 2, 2d, 0, 38, c0, 2c, c0, 30, 0, 9f, cc, a9, cc, a8, cc, aa, c0, 2b, c0, 2f, 0, 9e, c0, 24, c0, 28, 0, 6b, c0, 23, c0, 27, 0, 67, c0, a, c0, 14, 0, 39, c0, 9, c0, 13, 0, 33, 0, 9d, 0, 9c, 0, 3d, 0, 3c, 0, 35, 0, 2f, 0, ff, 1, 0, 0, 6c, 0, 0, 0, 13, 0, 11, 0, 0, e, 61, 70, 69, 2e, 67, 69, 74, 68, 75, 62, 2e, 63, 6f, 6d, 0, b, 0, 4, 3, 0, 1, 2, 0, a, 0, a, 0, 8, 0, 1d, 0, 17, 0, 19, 0, 18, 33, 74, 0, 0, 0, 10, 0, b, 0, 9, 8, 68, 74, 74, 70, 2f, 31, 2e, 31, 0, 16, 0, 0, 0, 17, 0, 0, 0, d, 0, 20, 0, 1e, 6, 1, 6, 2, 6, 3, 5, 1, 5, 2, 5, 3, 4, 1, 4, 2, 4, 3, 3, 1, 3, 2, 3, 3, 2, 1, 2, 2, 2, 3]

reading size of 246 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 246
      4: This packet is inserted, quack


TCP Headers: tcp src_port 443 dst_port 55818 seq 100137585 ack 1121057336 data_offset 8 flags | ACK |cwnd 29 csum 6539 urgent 0


Pkt #100137585 is Vacant

And the flow is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
not client hello
not client hello
is server hello
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped

result is seq: 100137585, payload: [16, 3, 3, 0, 70, 2, 0, 0, 6c, 3, 3, 5, 11, 99, 26, 2f, 5a, 94, d, 80, 9e, ee, e, 87, e7, dd, 7d, b3, 3c, eb, 4, 7a, de, 80, 1d, 44, 4f, 57, 4e, 47, 52, 44, 1, 20, 86, 27, dc, c3, ba, 68, bb, 40, 93, 5, af, ff, d7, 3a, b6, 53, f1, 75, 60, 2a, 81, 9d, 78, f1, b0, 5, f3, e7, f4, 9, 3e, 36, c0, 2f, 0, 0, 24, ff, 1, 0, 1, 0, 0, 0, 0, 0, 0, b, 0, 4, 3, 0, 1, 2, 0, 10, 0, b, 0, 9, 8, 68, 74, 74, 70, 2f, 31, 2e, 31, 0, 17, 0, 0, 16, 3, 3, b, 22, b, 0, b, 1e, 0, b, 1b, 0, 6, 60, 30, 82, 6, 5c, 30, 82, 5, 44, a0, 3, 2, 1, 2, 2, 10, 4, 30, d9, 79, 1f, fc, b5, 20, ac, 33, 9f, a4, a7, 3a, 7b, 76, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, b, 5, 0, 30, 70, 31, b, 30, 9, 6, 3, 55, 4, 6, 13, 2, 55, 53, 31, 15, 30, 13, 6, 3, 55, 4, a, 13, c, 44, 69, 67, 69, 43, 65, 72, 74, 20, 49, 6e, 63, 31, 19, 30, 17, 6, 3, 55, 4, b, 13, 10, 77, 77, 77, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 31, 2f, 30, 2d, 6, 3, 55, 4, 3, 13, 26, 44, 69, 67, 69, 43, 65, 72, 74, 20, 53, 48, 41, 32, 20, 48, 69, 67, 68, 20, 41, 73, 73, 75, 72, 61, 6e, 63, 65, 20, 53, 65, 72, 76, 65, 72, 20, 43, 41, 30, 1e, 17, d, 31, 38, 30, 36, 31, 39, 30, 30, 30, 30, 30, 30, 5a, 17, d, 31, 39, 30, 37, 31, 30, 31, 32, 30, 30, 30, 30, 5a, 30, 68, 31, b, 30, 9, 6, 3, 55, 4, 6, 13, 2, 55, 53, 31, 13, 30, 11, 6, 3, 55, 4, 8, 13, a, 43, 61, 6c, 69, 66, 6f, 72, 6e, 69, 61, 31, 16, 30, 14, 6, 3, 55, 4, 7, 13, d, 53, 61, 6e, 20, 46, 72, 61, 6e, 63, 69, 73, 63, 6f, 31, 15, 30, 13, 6, 3, 55, 4, a, 13, c, 47, 69, 74, 48, 75, 62, 2c, 20, 49, 6e, 63, 2e, 31, 15, 30, 13, 6, 3, 55, 4, 3, c, c, 2a, 2e, 67, 69, 74, 68, 75, 62, 2e, 63, 6f, 6d, 30, 82, 1, 22, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, 1, 5, 0, 3, 82, 1, f, 0, 30, 82, 1, a, 2, 82, 1, 1, 0, cb, ed, d4, a7, ca, 81, 90, 89, ff, ed, 2f, 40, 7d, 69, 47, 39, df, 12, 75, 79, a7, 5b, 1f, 89, 8, 81, ef, 9d, 6c, e3, 15, c2, de, 2e, f4, 1b, da, b3, 2a, a8, 20, cb, e5, 70, e5, be, 4c, 82, e5, 26, 7c, 67, 22, c8, 4d, e9, 9e, 8f, 96, 89, 62, e0, 6f, cd, c2, 8f, cf, 26, 74, 41, f6, 19, 8a, c9, 14, f6, 7c, cb, da, a0, 50, 8f, c6, a5, cc, 92, 7f, 9, cd, f6, 1, 6b, ae, 5a, b3, eb, cd, 5c, 41, 98, e1, 16, f6, 4, 42, 18, 50, 83, de, 6d, 33, e7, 7c, ba, 1a, 37, 26, 5, 2d, b0, 71, 7e, d1, 6a, a, 9b, f, b8, 36, 7e, b1, 6, 92, 8e, 6, ee, 49, 96, f7, a1, fa, 77, 28, 76, 8f, d4, 68, bb, c4, f0, 0, ae, 82, 9d, b8, 97, 3c, 3, 3f, e5, e, 9d, c9, f7, 58, 94, 73, 82, 80, fe, f9, 17, b8, 61, 74, a0, 79, 82, 9a, 6b, 9b, d0, 3f, 3a, 74, 2c, 99, 98, d4, 3f, 3c, b8, bb, 41, a, b, 11, 3c, 31, f8, 41, 7a, b6, 6b, 65, da, 1d, f3, c6, 5d, c, 6d, c2, bd, 38, 26, d3, 9d, 1b, 73, e9, 46, 95, bb, 13, fa, cd, 3d, 96, 9d, 1d, 83, 14, 99, 21, e2, 3c, fa, cc, 95, d8, ec, 2d, e1, 81, 7f, 3d, d8, de, 7b, 29, ad, cd, 7, 48, c1, 2, 3, 1, 0, 1, a3, 82, 2, f8, 30, 82, 2, f4, 30, 1f, 6, 3, 55, 1d, 23, 4, 18, 30, 16, 80, 14, 51, 68, ff, 90, af, 2, 7, 75, 3c, cc, d9, 65, 64, 62, a2, 12, b8, 59, 72, 3b, 30, 1d, 6, 3, 55, 1d, e, 4, 16, 4, 14, 9f, 16, df, 7e, 50, 26, 6f, 63, 76, ef, 96, e1, 5a, 37, 84, 3a, 92, eb, f8, 3, 30, 23, 6, 3, 55, 1d, 11, 4, 1c, 30, 1a, 82, c, 2a, 2e, 67, 69, 74, 68, 75, 62, 2e, 63, 6f, 6d, 82, a, 67, 69, 74, 68, 75, 62, 2e, 63, 6f, 6d, 30, e, 6, 3, 55, 1d, f, 1, 1, ff, 4, 4, 3, 2, 5, a0, 30, 1d, 6, 3, 55, 1d, 25, 4, 16, 30, 14, 6, 8, 2b, 6, 1, 5, 5, 7, 3, 1, 6, 8, 2b, 6, 1, 5, 5, 7, 3, 2, 30, 75, 6, 3, 55, 1d, 1f, 4, 6e, 30, 6c, 30, 34, a0, 32, a0, 30, 86, 2e, 68, 74, 74, 70, 3a, 2f, 2f, 63, 72, 6c, 33, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 73, 68, 61, 32, 2d, 68, 61, 2d, 73, 65, 72, 76, 65, 72, 2d, 67, 36, 2e, 63, 72, 6c, 30, 34, a0, 32, a0, 30, 86, 2e, 68, 74, 74, 70, 3a, 2f, 2f, 63, 72, 6c, 34, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 73, 68, 61, 32, 2d, 68, 61, 2d, 73, 65, 72, 76, 65, 72, 2d, 67, 36, 2e, 63, 72, 6c, 30, 4c, 6, 3, 55, 1d, 20, 4, 45, 30, 43, 30, 37, 6, 9, 60, 86, 48, 1, 86, fd, 6c, 1, 1, 30, 2a, 30, 28, 6, 8, 2b, 6, 1, 5, 5, 7, 2, 1, 16, 1c, 68, 74, 74, 70, 73, 3a, 2f, 2f, 77, 77, 77, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 43, 50, 53, 30, 8, 6, 6, 67, 81, c, 1, 2, 2, 30, 81, 83, 6, 8, 2b, 6, 1, 5, 5, 7, 1, 1, 4, 77, 30, 75, 30, 24, 6, 8, 2b, 6, 1, 5, 5, 7, 30, 1, 86, 18, 68, 74, 74, 70, 3a, 2f, 2f, 6f, 63, 73, 70, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 30, 4d, 6, 8, 2b, 6, 1, 5, 5, 7, 30, 2, 86, 41, 68, 74, 74, 70, 3a, 2f, 2f, 63, 61, 63, 65, 72, 74, 73, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 44, 69, 67, 69, 43, 65, 72, 74, 53, 48, 41, 32, 48, 69, 67, 68, 41, 73, 73, 75, 72, 61, 6e, 63, 65, 53, 65, 72, 76, 65, 72, 43, 41, 2e, 63, 72, 74, 30, c, 6, 3, 55, 1d, 13, 1, 1, ff, 4, 2, 30, 0, 30, 82, 1, 3, 6, a, 2b, 6, 1, 4, 1, d6, 79, 2, 4, 2, 4, 81, f4, 4, 81, f1, 0, ef, 0, 75, 0, a4, b9, 9, 90, b4, 18, 58, 14, 87, bb, 13, a2, cc, 67, 70, a, 3c, 35, 98, 4, f9, 1b, df, b8, e3, 77, cd, e, c8, d, dc, 10, 0, 0, 1, 64, 19, 2c, ae, f2, 0, 0, 4, 3, 0, 46, 30, 44, 2, 20, 2b, a0, 98, 66, d8, 15, 6d, a, ef, 8b, 5c, ca, 80, 0, f8, 19, 66, 13, e, a4, 17, cf, 8a, 6b, 81, 8e, ce, 76, 8b, 15, 8e, 53, 2, 20, 8, 41, f1, ee, c6, 20, d2, 6, 63, 7, 5, af]

reading size of 1348 payload into the flow entry 
Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1348
      4: This packet is inserted, quack


TCP Headers: tcp src_port 55818 dst_port 443 seq 1121057336 ack 100138933 data_offset 8 flags | ACK |cwnd 250 csum 59259 urgent 0

Pkt #1121057336 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Previous one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Reverse of the current one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 0 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 0
Passing because is not Change Client Spec


TCP Headers: tcp src_port 443 dst_port 55818 seq 100138933 ack 1121057336 data_offset 8 flags | ACK PSH |cwnd 29 csum 34164 urgent 0

Pkt #100138933 is Occupied!

And the flow is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Reverse of the current one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1448 payload into the flow entry 
Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1448
Passing because is not Change Client Spec


TCP Headers: tcp src_port 55818 dst_port 443 seq 1121057336 ack 100140871 data_offset 8 flags | ACK |cwnd 280 csum 57290 urgent 0

Pkt #1121057336 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Previous one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Reverse of the current one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 0 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 0
Passing because is not Change Client Spec


TCP Headers: tcp src_port 55818 dst_port 443 seq 1121057336 ack 100140871 data_offset 8 flags | ACK PSH |cwnd 280 csum 14999 urgent 0

Pkt #1121057336 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Reverse of the current one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }


We have hit a flow but the current packet match handshake!
Suppect to be starting a new TLS handshake, we should remove the hash value and start again
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([10, 0, 0, 21, 20, 0, c3, 2f, 67, 17, 5f, 66, 5e, 4, fc, 9b, 37, ed, e0, 8d, 12, 72, cd, 1b, 12, 6e, 14, 38, 74, 5e, dc, 39, 76, f3, 76, 0, 44])) }
Inserted
reading size of 93 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 93
is Client Key Exchange

The current packet is a client key exchange

Try to get the dns name from the entry of the Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
And the payload is [16, 3, 1, 0, f1, 1, 0, 0, ed, 3, 3, 96, 2b, 86, ad, e1, 62, 36, 0, 0, 4, ee, 3, e8, 96, a7, ee, 3d, 52, d4, b, 3a, 22, 1, a0, b2, 0, 9, ab, 43, eb, c2, 59, 20, 61, 91, 55, 7, 90, ca, cc, 17, 1a, 2d, 40, 65, 27, b0, 6b, 2a, d6, c5, 21, 8e, 8, a2, ba, 12, f7, 7c, 6d, b7, 5f, b0, 2, 2d, 0, 38, c0, 2c, c0, 30, 0, 9f, cc, a9, cc, a8, cc, aa, c0, 2b, c0, 2f, 0, 9e, c0, 24, c0, 28, 0, 6b, c0, 23, c0, 27, 0, 67, c0, a, c0, 14, 0, 39, c0, 9, c0, 13, 0, 33, 0, 9d, 0, 9c, 0, 3d, 0, 3c, 0, 35, 0, 2f, 0, ff, 1, 0, 0, 6c, 0, 0, 0, 13, 0, 11, 0, 0, e, 61, 70, 69, 2e, 67, 69, 74, 68, 75, 62, 2e, 63, 6f, 6d, 0, b, 0, 4, 3, 0, 1, 2, 0, a, 0, a, 0, 8, 0, 1d, 0, 17, 0, 19, 0, 18, 33, 74, 0, 0, 0, 10, 0, b, 0, 9, 8, 68, 74, 74, 70, 2f, 31, 2e, 31, 0, 16, 0, 0, 0, 17, 0, 0, 0, d, 0, 20, 0, 1e, 6, 1, 6, 2, 6, 3, 5, 1, 5, 2, 5, 3, 4, 1, 4, 2, 4, 3, 3, 1, 3, 2, 3, 3, 2, 1, 2, 2, 2, 3, 16, 3, 3, 0, 25, 10, 0, 0, 21, 20, 0, c3, 2f, 67, 17, 5f, 66, 5e, 4, fc, 9b, 37, ed, e0, 8d, 12, 72, cd, 1b, 12, 6e, 14, 38, 74, 5e, dc, 39, 76, f3, 76, 0, 44, 14, 3, 3, 0, 1, 1, 16, 3, 3, 0, 28, af, 86, cf, 21, 8e, 8f, df, fb, 8b, b8, 4f, 58, 50, ba, f0, e1, 7c, 76, 7a, 98, fa, 3, 79, 38, 82, da, a5, b7, 2e, 9c, 83, 12, 30, eb, 9a, c6, 4a, f, aa, 34]
Matching server name

is client hello: [ServerName([ServerName { typ: HostName, payload: HostName(DNSName("api.github.com")) }]), ECPointFormats([Uncompressed, ANSIX962CompressedPrime, ANSIX962CompressedChar2]), NamedGroups([X25519, secp256r1, secp521r1, secp384r1]), Unknown(UnknownExtension { typ: NextProtocolNegotiation, payload: Payload([]) }), Protocols([PayloadU8([104, 116, 116, 112, 47, 49, 46, 49])]), Unknown(UnknownExtension { typ: Unknown(22), payload: Payload([]) }), ExtendedMasterSecretRequest, SignatureAlgorithms([RSA_PKCS1_SHA512, Unknown(1538), ECDSA_NISTP521_SHA512, RSA_PKCS1_SHA384, Unknown(1282), ECDSA_NISTP384_SHA384, RSA_PKCS1_SHA256, Unknown(1026), ECDSA_NISTP256_SHA256, Unknown(769), Unknown(770), Unknown(771), RSA_PKCS1_SHA1, Unknown(514), ECDSA_SHA1_Legacy])]

Server name : [ServerName { typ: HostName, payload: HostName(DNSName("api.github.com")) }]
payload to be: HostName(DNSName("api.github.com"))
DNS name is : DNSName("api.github.com")
Try to parse the hug payload of Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
DEBUG: entering and then parsing the huge payload 
ServerHelloPayload { legacy_version: TLSv1_2, random: Random([5, 17, 153, 38, 47, 90, 148, 13, 128, 158, 238, 14, 135, 231, 221, 125, 179, 60, 235, 4, 122, 222, 128, 29, 68, 79, 87, 78, 71, 82, 68, 1]), session_id: SessionID(134, 39, 220, 195, 186, 104, 187, 64, 147, 5, 175, 255, 215, 58, 182, 83, 241, 117, 96, 42, 129, 157, 120, 241, 176, 5, 243, 231, 244, 9, 62, 54), cipher_suite: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, compression_method: Null, extensions: [RenegotiationInfo(PayloadU8([])), ServerNameAck, ECPointFormats([Uncompressed, ANSIX962CompressedPrime, ANSIX962CompressedChar2]), Protocols([PayloadU8([104, 116, 116, 112, 47, 49, 46, 49])]), ExtendedMasterSecretAck] }

And the magic number is 117

Get None, abort

DEBUG: We now retrieve the certs from the tcp payload
Err(CertificateNotExtractedError)

error: CertificateNotExtractedError


TCP Headers: tcp src_port 443 dst_port 55818 seq 100140871 ack 1121057429 data_offset 8 flags | ACK PSH |cwnd 29 csum 15180 urgent 0

Pkt #100140871 is Occupied!

And the flow is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Reverse of the current one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }

Packet type is not matched!
Passing because is not Change Client Spec


TCP Headers: tcp src_port 55818 dst_port 443 seq 1121057429 ack 100140922 data_offset 8 flags | ACK PSH |cwnd 280 csum 54583 urgent 0

Pkt #1121057429 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Previous one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Reverse of the current one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }

Packet type is not matched!
Passing because is not Change Client Spec


TCP Headers: tcp src_port 443 dst_port 55818 seq 100140922 ack 1121057643 data_offset 8 flags | ACK PSH |cwnd 30 csum 7231 urgent 0

Pkt #100140922 is Occupied!

And the flow is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Reverse of the current one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }

Packet type is not matched!
Passing because is not Change Client Spec


TCP Headers: tcp src_port 55818 dst_port 443 seq 1121057643 ack 100141929 data_offset 8 flags | ACK PSH |cwnd 301 csum 65316 urgent 0

Pkt #1121057643 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Previous one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Reverse of the current one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }

Packet type is not matched!
Passing because is not Change Client Spec


TCP Headers: tcp src_port 55818 dst_port 443 seq 1121057674 ack 100141929 data_offset 8 flags | ACK FIN |cwnd 301 csum 55772 urgent 0

Pkt #1121057674 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Reverse of the current one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 245 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 245
Passing because is not Change Client Spec


TCP Headers: tcp src_port 443 dst_port 55818 seq 100141929 ack 1121057674 data_offset 8 flags | ACK PSH |cwnd 30 csum 54650 urgent 0

Pkt #100141929 is Occupied!

And the flow is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Reverse of the current one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }

Packet type is not matched!
Passing because is not Change Client Spec


TCP Headers: tcp src_port 55818 dst_port 443 seq 1121057674 ack 0 data_offset 5 flags | RST |cwnd 0 csum 6147 urgent 0

Pkt #1121057674 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Previous one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Reverse of the current one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 6 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 6
Passing because is not Change Client Spec


TCP Headers: tcp src_port 443 dst_port 55818 seq 100141960 ack 1121057674 data_offset 8 flags | ACK FIN |cwnd 30 csum 56007 urgent 0

Pkt #100141960 is Occupied!

And the flow is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Reverse of the current one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 0 payload into the flow entry 
Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 0
Passing because is not Change Client Spec


TCP Headers: tcp src_port 55818 dst_port 443 seq 1121057674 ack 0 data_offset 5 flags | RST |cwnd 0 csum 6147 urgent 0

Pkt #1121057674 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Previous one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Reverse of the current one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 0 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 0
Passing because is not Change Client Spec


TCP Headers: tcp src_port 443 dst_port 55818 seq 100141961 ack 1121057675 data_offset 8 flags | ACK |cwnd 30 csum 56004 urgent 0

Pkt #100141961 is Occupied!

And the flow is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Reverse of the current one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 0 payload into the flow entry 
Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 0
Passing because is not Change Client Spec


TCP Headers: tcp src_port 55818 dst_port 443 seq 1121057675 ack 0 data_offset 5 flags | RST |cwnd 0 csum 6146 urgent 0

Pkt #1121057675 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }
Previous one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }
Reverse of the current one is: Flow { src_ip: 3223256436, dst_ip: 2886997012, src_port: 55818, dst_port: 443, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1
Passing because is not Change Client Spec


TCP Headers: tcp src_port 60234 dst_port 80 seq 3858204992 ack 0 data_offset 10 flags | SYN |cwnd 29200 csum 61336 urgent 0


Pkt #3858204992 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 1749696920, src_port: 80, dst_port: 60234, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 3223256436, src_port: 443, dst_port: 55818, proto: 6 }


TCP Headers: tcp src_port 80 dst_port 60234 seq 746321822 ack 3858204993 data_offset 10 flags | ACK SYN |cwnd 28960 csum 27782 urgent 0


Pkt #746321822 is Vacant

And the flow is: Flow { src_ip: 1749696920, dst_ip: 2886997012, src_port: 60234, dst_port: 80, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 1749696920, src_port: 80, dst_port: 60234, proto: 6 }


TCP Headers: tcp src_port 60234 dst_port 80 seq 3858204993 ack 746321823 data_offset 8 flags | ACK |cwnd 229 csum 2821 urgent 0


Pkt #3858204993 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 1749696920, src_port: 80, dst_port: 60234, proto: 6 }
Previous one is: Flow { src_ip: 1749696920, dst_ip: 2886997012, src_port: 60234, dst_port: 80, proto: 6 }


TCP Headers: tcp src_port 60234 dst_port 80 seq 3858204993 ack 746321823 data_offset 8 flags | ACK PSH |cwnd 229 csum 60171 urgent 0


Pkt #3858204993 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 1749696920, src_port: 80, dst_port: 60234, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 1749696920, src_port: 80, dst_port: 60234, proto: 6 }


TCP Headers: tcp src_port 80 dst_port 60234 seq 746321823 ack 3858205289 data_offset 8 flags | ACK |cwnd 235 csum 2483 urgent 0


Pkt #746321823 is Vacant

And the flow is: Flow { src_ip: 1749696920, dst_ip: 2886997012, src_port: 60234, dst_port: 80, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 1749696920, src_port: 80, dst_port: 60234, proto: 6 }


TCP Headers: tcp src_port 80 dst_port 60234 seq 746321823 ack 3858205289 data_offset 8 flags | ACK PSH |cwnd 235 csum 63967 urgent 0


Pkt #746321823 is Vacant

And the flow is: Flow { src_ip: 1749696920, dst_ip: 2886997012, src_port: 60234, dst_port: 80, proto: 6 }
Previous one is: Flow { src_ip: 1749696920, dst_ip: 2886997012, src_port: 60234, dst_port: 80, proto: 6 }


TCP Headers: tcp src_port 60234 dst_port 80 seq 3858205289 ack 746322207 data_offset 8 flags | ACK |cwnd 237 csum 2071 urgent 0


Pkt #3858205289 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 1749696920, src_port: 80, dst_port: 60234, proto: 6 }
Previous one is: Flow { src_ip: 1749696920, dst_ip: 2886997012, src_port: 60234, dst_port: 80, proto: 6 }


TCP Headers: tcp src_port 57264 dst_port 443 seq 1019734861 ack 0 data_offset 10 flags | SYN |cwnd 29200 csum 42373 urgent 0


Pkt #1019734861 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 878292923, src_port: 443, dst_port: 57264, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 1749696920, src_port: 80, dst_port: 60234, proto: 6 }


TCP Headers: tcp src_port 36144 dst_port 443 seq 511174884 ack 0 data_offset 10 flags | SYN |cwnd 29200 csum 46039 urgent 0


Pkt #511174884 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 878292923, src_port: 443, dst_port: 57264, proto: 6 }


TCP Headers: tcp src_port 443 dst_port 57264 seq 1006881697 ack 1019734862 data_offset 10 flags | ACK SYN |cwnd 26847 csum 63591 urgent 0


Pkt #1006881697 is Vacant

And the flow is: Flow { src_ip: 878292923, dst_ip: 2886997012, src_port: 57264, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }


TCP Headers: tcp src_port 57264 dst_port 443 seq 1019734862 ack 1006881698 data_offset 8 flags | ACK |cwnd 229 csum 36424 urgent 0


Pkt #1019734862 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 878292923, src_port: 443, dst_port: 57264, proto: 6 }
Previous one is: Flow { src_ip: 878292923, dst_ip: 2886997012, src_port: 57264, dst_port: 443, proto: 6 }


TCP Headers: tcp src_port 443 dst_port 36144 seq 290467218 ack 511174885 data_offset 10 flags | ACK SYN |cwnd 28960 csum 52921 urgent 0


Pkt #290467218 is Vacant

And the flow is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 878292923, src_port: 443, dst_port: 57264, proto: 6 }


TCP Headers: tcp src_port 36144 dst_port 443 seq 511174885 ack 290467219 data_offset 8 flags | ACK |cwnd 229 csum 27966 urgent 0


Pkt #511174885 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }
Previous one is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }


TCP Headers: tcp src_port 57264 dst_port 443 seq 1019734862 ack 1006881698 data_offset 8 flags | ACK PSH |cwnd 229 csum 44963 urgent 0


Pkt #1019734862 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 878292923, src_port: 443, dst_port: 57264, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }
is client hello
Matching server name

is client hello: [ServerName([ServerName { typ: HostName, payload: HostName(DNSName("profile.accounts.firefox.com")) }]), ExtendedMasterSecretRequest, Unknown(UnknownExtension { typ: RenegotiationInfo, payload: Payload([0]) }), NamedGroups([X25519, secp256r1, secp384r1, secp521r1, FFDHE2048, FFDHE3072]), ECPointFormats([Uncompressed]), SessionTicketRequest, Protocols([PayloadU8([104, 50]), PayloadU8([104, 116, 116, 112, 47, 49, 46, 49])]), CertificateStatusRequest(OCSP(OCSPCertificateStatusRequest { responder_ids: [], extensions: PayloadU16([]) })), KeyShare([KeyShareEntry { group: X25519, payload: PayloadU16([57, 133, 29, 58, 197, 85, 207, 55, 198, 43, 21, 116, 43, 62, 236, 246, 183, 201, 118, 115, 100, 213, 110, 43, 29, 34, 214, 12, 60, 37, 30, 85]) }, KeyShareEntry { group: secp256r1, payload: PayloadU16([4, 151, 170, 13, 76, 126, 32, 28, 148, 240, 58, 115, 147, 48, 35, 117, 49, 170, 36, 228, 155, 73, 122, 245, 187, 83, 31, 158, 57, 192, 148, 140, 193, 169, 209, 245, 154, 85, 19, 1, 237, 66, 225, 189, 193, 1, 91, 23, 24, 193, 81, 59, 105, 226, 255, 45, 145, 197, 203, 97, 178, 151, 255, 207, 61]) }]), SupportedVersions([TLSv1_3, TLSv1_2, TLSv1_1, TLSv1_0]), SignatureAlgorithms([ECDSA_NISTP256_SHA256, ECDSA_NISTP384_SHA384, ECDSA_NISTP521_SHA512, RSA_PSS_SHA256, RSA_PSS_SHA384, RSA_PSS_SHA512, RSA_PKCS1_SHA256, RSA_PKCS1_SHA384, RSA_PKCS1_SHA512, ECDSA_SHA1_Legacy, RSA_PKCS1_SHA1]), PresharedKeyModes([PSK_DHE_KE]), Unknown(UnknownExtension { typ: Unknown(28), payload: Payload([64, 1]) }), Unknown(UnknownExtension { typ: Padding, payload: Payload([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) })]

Server name : [ServerName { typ: HostName, payload: HostName(DNSName("profile.accounts.firefox.com")) }]
payload to be: HostName(DNSName("profile.accounts.firefox.com"))
DNS name is : DNSName("profile.accounts.firefox.com")
is client hello
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped

result is seq: 1019734862, payload: [16, 3, 1, 2, 0, 1, 0, 1, fc, 3, 3, 4e, c6, 73, ee, 9c, ce, da, f7, 37, c0, a7, e4, f1, 69, 2e, a, 72, 4b, 68, 49, f, 94, a7, ad, 83, 91, 59, aa, 88, 1a, 90, 2a, 20, a8, 6e, e1, cf, 6b, 39, 13, a, 41, 1, a8, 8c, 7d, e6, 14, 1e, 90, db, 43, 8c, 9b, 2f, d6, 83, 6, 97, f0, 9a, 22, 3c, cc, f6, 0, 24, 13, 1, 13, 3, 13, 2, c0, 2b, c0, 2f, cc, a9, cc, a8, c0, 2c, c0, 30, c0, a, c0, 9, c0, 13, c0, 14, 0, 33, 0, 39, 0, 2f, 0, 35, 0, a, 1, 0, 1, 8f, 0, 0, 0, 21, 0, 1f, 0, 0, 1c, 70, 72, 6f, 66, 69, 6c, 65, 2e, 61, 63, 63, 6f, 75, 6e, 74, 73, 2e, 66, 69, 72, 65, 66, 6f, 78, 2e, 63, 6f, 6d, 0, 17, 0, 0, ff, 1, 0, 1, 0, 0, a, 0, e, 0, c, 0, 1d, 0, 17, 0, 18, 0, 19, 1, 0, 1, 1, 0, b, 0, 2, 1, 0, 0, 23, 0, 0, 0, 10, 0, e, 0, c, 2, 68, 32, 8, 68, 74, 74, 70, 2f, 31, 2e, 31, 0, 5, 0, 5, 1, 0, 0, 0, 0, 0, 33, 0, 6b, 0, 69, 0, 1d, 0, 20, 39, 85, 1d, 3a, c5, 55, cf, 37, c6, 2b, 15, 74, 2b, 3e, ec, f6, b7, c9, 76, 73, 64, d5, 6e, 2b, 1d, 22, d6, c, 3c, 25, 1e, 55, 0, 17, 0, 41, 4, 97, aa, d, 4c, 7e, 20, 1c, 94, f0, 3a, 73, 93, 30, 23, 75, 31, aa, 24, e4, 9b, 49, 7a, f5, bb, 53, 1f, 9e, 39, c0, 94, 8c, c1, a9, d1, f5, 9a, 55, 13, 1, ed, 42, e1, bd, c1, 1, 5b, 17, 18, c1, 51, 3b, 69, e2, ff, 2d, 91, c5, cb, 61, b2, 97, ff, cf, 3d, 0, 2b, 0, 9, 8, 3, 4, 3, 3, 3, 2, 3, 1, 0, d, 0, 18, 0, 16, 4, 3, 5, 3, 6, 3, 8, 4, 8, 5, 8, 6, 4, 1, 5, 1, 6, 1, 2, 3, 2, 1, 0, 2d, 0, 2, 1, 1, 0, 1c, 0, 2, 40, 1, 0, 15, 0, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

reading size of 517 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 878292923, src_port: 443, dst_port: 57264, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 517
      4: This packet is inserted, quack


TCP Headers: tcp src_port 36144 dst_port 443 seq 511174885 ack 290467219 data_offset 8 flags | ACK PSH |cwnd 229 csum 9810 urgent 0


Pkt #511174885 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 878292923, src_port: 443, dst_port: 57264, proto: 6 }
is client hello
Matching server name

is client hello: [ServerName([ServerName { typ: HostName, payload: HostName(DNSName("snippets.cdn.mozilla.net")) }]), ExtendedMasterSecretRequest, Unknown(UnknownExtension { typ: RenegotiationInfo, payload: Payload([0]) }), NamedGroups([X25519, secp256r1, secp384r1, secp521r1, FFDHE2048, FFDHE3072]), ECPointFormats([Uncompressed]), SessionTicketRequest, Protocols([PayloadU8([104, 50]), PayloadU8([104, 116, 116, 112, 47, 49, 46, 49])]), CertificateStatusRequest(OCSP(OCSPCertificateStatusRequest { responder_ids: [], extensions: PayloadU16([]) })), KeyShare([KeyShareEntry { group: X25519, payload: PayloadU16([177, 32, 7, 168, 124, 90, 1, 57, 95, 99, 130, 154, 207, 245, 23, 127, 238, 177, 187, 133, 105, 212, 167, 40, 40, 238, 82, 204, 220, 249, 226, 87]) }, KeyShareEntry { group: secp256r1, payload: PayloadU16([4, 65, 84, 78, 49, 127, 238, 60, 138, 88, 44, 231, 91, 7, 156, 143, 141, 95, 47, 155, 5, 10, 234, 208, 101, 185, 171, 146, 94, 127, 36, 181, 87, 92, 10, 183, 35, 164, 131, 12, 13, 150, 110, 131, 253, 155, 157, 29, 160, 163, 79, 129, 166, 195, 80, 138, 162, 169, 153, 66, 127, 59, 189, 251, 205]) }]), SupportedVersions([TLSv1_3, TLSv1_2, TLSv1_1, TLSv1_0]), SignatureAlgorithms([ECDSA_NISTP256_SHA256, ECDSA_NISTP384_SHA384, ECDSA_NISTP521_SHA512, RSA_PSS_SHA256, RSA_PSS_SHA384, RSA_PSS_SHA512, RSA_PKCS1_SHA256, RSA_PKCS1_SHA384, RSA_PKCS1_SHA512, ECDSA_SHA1_Legacy, RSA_PKCS1_SHA1]), PresharedKeyModes([PSK_DHE_KE]), Unknown(UnknownExtension { typ: Unknown(28), payload: Payload([64, 1]) }), Unknown(UnknownExtension { typ: Padding, payload: Payload([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) })]

Server name : [ServerName { typ: HostName, payload: HostName(DNSName("snippets.cdn.mozilla.net")) }]
payload to be: HostName(DNSName("snippets.cdn.mozilla.net"))
DNS name is : DNSName("snippets.cdn.mozilla.net")
is client hello
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped

result is seq: 511174885, payload: [16, 3, 1, 2, 0, 1, 0, 1, fc, 3, 3, b4, c2, c7, 7d, fe, 4a, 14, e0, e7, 14, 17, 19, 3b, ef, 57, c1, 90, 72, 10, 37, 52, 2b, 71, a9, 24, e3, c0, 5, f0, 60, fa, c1, 20, e, d0, 97, 14, 12, 5c, 70, 50, 37, 4b, 62, 7b, b6, a5, fc, bd, 4d, bf, cf, 6, 58, 83, f4, 9d, c1, a4, 64, 69, 59, b9, b3, 74, 0, 24, 13, 1, 13, 3, 13, 2, c0, 2b, c0, 2f, cc, a9, cc, a8, c0, 2c, c0, 30, c0, a, c0, 9, c0, 13, c0, 14, 0, 33, 0, 39, 0, 2f, 0, 35, 0, a, 1, 0, 1, 8f, 0, 0, 0, 1d, 0, 1b, 0, 0, 18, 73, 6e, 69, 70, 70, 65, 74, 73, 2e, 63, 64, 6e, 2e, 6d, 6f, 7a, 69, 6c, 6c, 61, 2e, 6e, 65, 74, 0, 17, 0, 0, ff, 1, 0, 1, 0, 0, a, 0, e, 0, c, 0, 1d, 0, 17, 0, 18, 0, 19, 1, 0, 1, 1, 0, b, 0, 2, 1, 0, 0, 23, 0, 0, 0, 10, 0, e, 0, c, 2, 68, 32, 8, 68, 74, 74, 70, 2f, 31, 2e, 31, 0, 5, 0, 5, 1, 0, 0, 0, 0, 0, 33, 0, 6b, 0, 69, 0, 1d, 0, 20, b1, 20, 7, a8, 7c, 5a, 1, 39, 5f, 63, 82, 9a, cf, f5, 17, 7f, ee, b1, bb, 85, 69, d4, a7, 28, 28, ee, 52, cc, dc, f9, e2, 57, 0, 17, 0, 41, 4, 41, 54, 4e, 31, 7f, ee, 3c, 8a, 58, 2c, e7, 5b, 7, 9c, 8f, 8d, 5f, 2f, 9b, 5, a, ea, d0, 65, b9, ab, 92, 5e, 7f, 24, b5, 57, 5c, a, b7, 23, a4, 83, c, d, 96, 6e, 83, fd, 9b, 9d, 1d, a0, a3, 4f, 81, a6, c3, 50, 8a, a2, a9, 99, 42, 7f, 3b, bd, fb, cd, 0, 2b, 0, 9, 8, 3, 4, 3, 3, 3, 2, 3, 1, 0, d, 0, 18, 0, 16, 4, 3, 5, 3, 6, 3, 8, 4, 8, 5, 8, 6, 4, 1, 5, 1, 6, 1, 2, 3, 2, 1, 0, 2d, 0, 2, 1, 1, 0, 1c, 0, 2, 40, 1, 0, 15, 0, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

reading size of 517 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 517
      4: This packet is inserted, quack


TCP Headers: tcp src_port 443 dst_port 36144 seq 290467219 ack 511175402 data_offset 8 flags | ACK |cwnd 118 csum 27555 urgent 0


Pkt #290467219 is Vacant

And the flow is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }


TCP Headers: tcp src_port 49378 dst_port 443 seq 612902753 ack 0 data_offset 10 flags | SYN |cwnd 29200 csum 18798 urgent 0


Pkt #612902753 is Vacant

And the flow is: Flow { src_ip: 2886997012, dst_ip: 873107063, src_port: 443, dst_port: 49378, proto: 6 }
Previous one is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }


TCP Headers: tcp src_port 443 dst_port 36144 seq 290467219 ack 511175402 data_offset 8 flags | ACK |cwnd 118 csum 51641 urgent 0


Pkt #290467219 is Vacant

And the flow is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 873107063, src_port: 443, dst_port: 49378, proto: 6 }
not client hello
not client hello
is server hello
  1: Has allocated a new buffer:
    2: packet recv for untracked flow did not have a syn flag, skipped

result is seq: 290467219, payload: [16, 3, 3, 0, 54, 2, 0, 0, 50, 3, 3, 14, 90, 5, 6b, e, 6b, 6, f2, 5a, 43, 55, 89, 38, 94, a9, 77, a7, 5e, 88, 89, 1, ad, c9, bd, d7, be, 72, 27, b6, b3, 2c, de, 0, c0, 2f, 0, 0, 28, 0, 0, 0, 0, ff, 1, 0, 1, 0, 0, b, 0, 4, 3, 0, 1, 2, 0, 23, 0, 0, 0, 5, 0, 0, 0, 10, 0, b, 0, 9, 8, 68, 74, 74, 70, 2f, 31, 2e, 31, 16, 3, 3, d, 95, b, 0, d, 91, 0, d, 8e, 0, 5, 3a, 30, 82, 5, 36, 30, 82, 4, 1e, a0, 3, 2, 1, 2, 2, 10, c, a9, c6, 43, 61, bf, c9, 2a, 79, b1, dd, 9c, fb, 9e, 48, ec, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, b, 5, 0, 30, 4d, 31, b, 30, 9, 6, 3, 55, 4, 6, 13, 2, 55, 53, 31, 15, 30, 13, 6, 3, 55, 4, a, 13, c, 44, 69, 67, 69, 43, 65, 72, 74, 20, 49, 6e, 63, 31, 27, 30, 25, 6, 3, 55, 4, 3, 13, 1e, 44, 69, 67, 69, 43, 65, 72, 74, 20, 53, 48, 41, 32, 20, 53, 65, 63, 75, 72, 65, 20, 53, 65, 72, 76, 65, 72, 20, 43, 41, 30, 1e, 17, d, 31, 36, 31, 31, 30, 33, 30, 30, 30, 30, 30, 30, 5a, 17, d, 32, 30, 30, 32, 30, 31, 31, 32, 30, 30, 30, 30, 5a, 30, 74, 31, b, 30, 9, 6, 3, 55, 4, 6, 13, 2, 55, 53, 31, 13, 30, 11, 6, 3, 55, 4, 8, 13, a, 43, 61, 6c, 69, 66, 6f, 72, 6e, 69, 61, 31, 16, 30, 14, 6, 3, 55, 4, 7, 13, d, 4d, 6f, 75, 6e, 74, 61, 69, 6e, 20, 56, 69, 65, 77, 31, 1c, 30, 1a, 6, 3, 55, 4, a, 13, 13, 4d, 6f, 7a, 69, 6c, 6c, 61, 20, 43, 6f, 72, 70, 6f, 72, 61, 74, 69, 6f, 6e, 31, 1a, 30, 18, 6, 3, 55, 4, 3, c, 11, 2a, 2e, 63, 64, 6e, 2e, 6d, 6f, 7a, 69, 6c, 6c, 61, 2e, 6e, 65, 74, 30, 82, 1, 22, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, 1, 5, 0, 3, 82, 1, f, 0, 30, 82, 1, a, 2, 82, 1, 1, 0, cd, 21, 4d, 78, 5e, 7a, 70, 41, 5b, a7, 2, 13, 33, 55, 2f, a5, c1, 1c, 63, e4, af, 35, 1c, fb, 52, 3e, 9d, f0, 2f, 96, 71, fe, 1c, 91, 37, f1, 85, e3, 91, f6, 78, 61, 41, 29, fb, d4, 11, fe, e3, 8a, ce, ad, 9b, f2, 3c, 48, df, fb, 68, de, 38, a7, 40, 1e, ad, 1e, 77, a7, 30, 36, 52, df, d, a, 3a, 71, 6c, cb, 89, 17, a5, ef, 63, 6c, af, fe, f, ed, bb, 76, 59, 8c, 12, a, 9f, f2, 20, 47, f3, b2, 77, 81, 52, 39, da, 43, 8c, 65, c, f1, 6d, 76, 45, 26, 9e, 89, 5, 7, b, 50, ee, 31, 82, b0, 9c, fa, 2e, e, 28, f3, a1, d3, 17, 3c, 36, bb, 3b, dd, 6c, 6a, 15, bc, ee, de, a5, 2a, 74, bb, 13, d0, a0, 35, d9, 2e, e6, 5c, 45, 4c, e7, b8, f3, 42, 1c, f7, 27, 7e, 72, 52, 4d, 65, 9e, 9d, 36, d9, f0, 61, fa, ca, 6a, ac, 72, 65, 0, 32, 4, 3d, 12, 36, c9, 38, 59, ea, 5e, 94, 3f, 95, 6, 88, c3, 8c, dd, cc, 73, ba, cc, c0, 1e, bb, 4c, 39, ea, d4, c6, 22, 40, 8f, e5, d, ff, 21, f5, 4c, e9, b5, ed, 62, 1f, f3, d0, c5, 7d, 29, 31, f2, f1, 43, b6, dc, 8f, 1e, cb, a0, be, 9b, 21, dd, cd, f7, 76, bf, db, eb, 3, dd, 1a, 4b, 2, 3, 1, 0, 1, a3, 82, 1, e9, 30, 82, 1, e5, 30, 1f, 6, 3, 55, 1d, 23, 4, 18, 30, 16, 80, 14, f, 80, 61, 1c, 82, 31, 61, d5, 2f, 28, e7, 8d, 46, 38, b4, 2c, e1, c6, d9, e2, 30, 1d, 6, 3, 55, 1d, e, 4, 16, 4, 14, 33, c0, 98, d2, 73, 50, 34, 33, 3b, ff, 77, 39, 29, cc, 40, 66, 94, a, 74, 3d, 30, 2d, 6, 3, 55, 1d, 11, 4, 26, 30, 24, 82, 11, 2a, 2e, 63, 64, 6e, 2e, 6d, 6f, 7a, 69, 6c, 6c, 61, 2e, 6e, 65, 74, 82, f, 63, 64, 6e, 2e, 6d, 6f, 7a, 69, 6c, 6c, 61, 2e, 6e, 65, 74, 30, e, 6, 3, 55, 1d, f, 1, 1, ff, 4, 4, 3, 2, 5, a0, 30, 1d, 6, 3, 55, 1d, 25, 4, 16, 30, 14, 6, 8, 2b, 6, 1, 5, 5, 7, 3, 1, 6, 8, 2b, 6, 1, 5, 5, 7, 3, 2, 30, 6b, 6, 3, 55, 1d, 1f, 4, 64, 30, 62, 30, 2f, a0, 2d, a0, 2b, 86, 29, 68, 74, 74, 70, 3a, 2f, 2f, 63, 72, 6c, 33, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 73, 73, 63, 61, 2d, 73, 68, 61, 32, 2d, 67, 35, 2e, 63, 72, 6c, 30, 2f, a0, 2d, a0, 2b, 86, 29, 68, 74, 74, 70, 3a, 2f, 2f, 63, 72, 6c, 34, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 73, 73, 63, 61, 2d, 73, 68, 61, 32, 2d, 67, 35, 2e, 63, 72, 6c, 30, 4c, 6, 3, 55, 1d, 20, 4, 45, 30, 43, 30, 37, 6, 9, 60, 86, 48, 1, 86, fd, 6c, 1, 1, 30, 2a, 30, 28, 6, 8, 2b, 6, 1, 5, 5, 7, 2, 1, 16, 1c, 68, 74, 74, 70, 73, 3a, 2f, 2f, 77, 77, 77, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 43, 50, 53, 30, 8, 6, 6, 67, 81, c, 1, 2, 2, 30, 7c, 6, 8, 2b, 6, 1, 5, 5, 7, 1, 1, 4, 70, 30, 6e, 30, 24, 6, 8, 2b, 6, 1, 5, 5, 7, 30, 1, 86, 18, 68, 74, 74, 70, 3a, 2f, 2f, 6f, 63, 73, 70, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 30, 46, 6, 8, 2b, 6, 1, 5, 5, 7, 30, 2, 86, 3a, 68, 74, 74, 70, 3a, 2f, 2f, 63, 61, 63, 65, 72, 74, 73, 2e, 64, 69, 67, 69, 63, 65, 72, 74, 2e, 63, 6f, 6d, 2f, 44, 69, 67, 69, 43, 65, 72, 74, 53, 48, 41, 32, 53, 65, 63, 75, 72, 65, 53, 65, 72, 76, 65, 72, 43, 41, 2e, 63, 72, 74, 30, c, 6, 3, 55, 1d, 13, 1, 1, ff, 4, 2, 30, 0, 30, d, 6, 9, 2a, 86, 48, 86, f7, d, 1, 1, b, 5, 0, 3, 82, 1, 1, 0, 8e, 53, b9, c7, 8c, 49, bd, 24, b8, 65, 4d, 42, 64, d4, b1, 51, f4, 4, 15, 55, 75, 87, 55, a2, f8, ca, b9, 44, cb, 6b, 43, 76, cd, 6f, b3, 6c, f7, 36, 75, 6d, 5d, 78, 39, 6, 1, fc, b8, 3b, 2d, 29, 60, 24, f4, 86, c0, 81, 58, 8, 58, 2c, 0, 32, a3, b6, 2b, 28, d7, a8, 85, 3d, 24, c5, 70, f7, 3, 54, 35, 8e, 9d, c8, 8d, d8, d, 60, 7d, 37, 9, 7d, 60, c, f7, 97, 14, da, a0, 93, d2, a8, 7d, f8, cf, d6, 27, 86, 9c, ed, 46, 86, 7c, 9b, 46, 7e, 89, 90, 2f, 78, d8, c2, d8, d3, 10, 6c, f2, b, ff, e3, bc, d6, 44, 4a, b9, 60, 3, 5c, 21, 51, 49, ea, 34, 5d, 8b, 7, 9e, b, 81, 4e, ee, 4d, 96, 8, ba, 5f, aa, 35, ea, ef, c1, 6b, ba, 48, d6, 1]

reading size of 1348 payload into the flow entry 
Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1348
      4: This packet is inserted, quack


TCP Headers: tcp src_port 36144 dst_port 443 seq 511175402 ack 290468567 data_offset 8 flags | ACK |cwnd 250 csum 26044 urgent 0

Pkt #511175402 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }
Previous one is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }
Reverse of the current one is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 0 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 0
Passing because is not Change Client Spec


TCP Headers: tcp src_port 443 dst_port 36144 seq 290468567 ack 511175402 data_offset 8 flags | ACK |cwnd 118 csum 3987 urgent 0

Pkt #290468567 is Occupied!

And the flow is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }
Reverse of the current one is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1348 payload into the flow entry 
Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1348
Passing because is not Change Client Spec


TCP Headers: tcp src_port 36144 dst_port 443 seq 511175402 ack 290469915 data_offset 8 flags | ACK |cwnd 271 csum 24675 urgent 0

Pkt #511175402 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }
Previous one is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }
Reverse of the current one is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 0 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 0
Passing because is not Change Client Spec


TCP Headers: tcp src_port 443 dst_port 36144 seq 290469915 ack 511175402 data_offset 8 flags | ACK PSH |cwnd 118 csum 10074 urgent 0

Pkt #290469915 is Occupied!

And the flow is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }
Reverse of the current one is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 1448 payload into the flow entry 
Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 1448
Passing because is not Change Client Spec


TCP Headers: tcp src_port 36144 dst_port 443 seq 511175402 ack 290471621 data_offset 8 flags | ACK |cwnd 297 csum 22942 urgent 0

Pkt #511175402 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }
Previous one is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }
Reverse of the current one is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }


There is nothing, that is why we should insert the packet!!!

Quack: Inserted
reading size of 0 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 0
Passing because is not Change Client Spec


TCP Headers: tcp src_port 36144 dst_port 443 seq 511175402 ack 290471621 data_offset 8 flags | ACK PSH |cwnd 297 csum 10763 urgent 0

Pkt #511175402 is Occupied!

And the flow is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }
Previous one is: Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }
Reverse of the current one is: Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }


We have hit a flow but the current packet match handshake!
Suppect to be starting a new TLS handshake, we should remove the hash value and start again
Message { typ: Handshake, version: TLSv1_2, payload: Opaque(Payload([10, 0, 0, 42, 41, 4, aa, 29, 9a, 7d, d, dc, 7d, 87, 95, 91, b5, 31, 45, 59, 4c, 9a, a3, 5d, 6a, 7f, 94, 46, 68, 10, 13, 62, d1, 8f, cb, b8, d1, ef, 93, 5a, a8, 30, cb, 29, 22, ea, a6, 8b, c0, 1, ac, e0, d0, bb, 1b, bc, 87, ef, d8, 58, 9a, 5e, 11, 27, 29, 2, b9, d0, 4b, 21])) }
Inserted
reading size of 126 payload into the flow entry 
Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 } 
into the payload cache (hashmap)

size of the entry is: 126
is Client Key Exchange

The current packet is a client key exchange

Try to get the dns name from the entry of the Flow { src_ip: 2886997012, dst_ip: 220418878, src_port: 443, dst_port: 36144, proto: 6 }
And the payload is [16, 3, 1, 2, 0, 1, 0, 1, fc, 3, 3, b4, c2, c7, 7d, fe, 4a, 14, e0, e7, 14, 17, 19, 3b, ef, 57, c1, 90, 72, 10, 37, 52, 2b, 71, a9, 24, e3, c0, 5, f0, 60, fa, c1, 20, e, d0, 97, 14, 12, 5c, 70, 50, 37, 4b, 62, 7b, b6, a5, fc, bd, 4d, bf, cf, 6, 58, 83, f4, 9d, c1, a4, 64, 69, 59, b9, b3, 74, 0, 24, 13, 1, 13, 3, 13, 2, c0, 2b, c0, 2f, cc, a9, cc, a8, c0, 2c, c0, 30, c0, a, c0, 9, c0, 13, c0, 14, 0, 33, 0, 39, 0, 2f, 0, 35, 0, a, 1, 0, 1, 8f, 0, 0, 0, 1d, 0, 1b, 0, 0, 18, 73, 6e, 69, 70, 70, 65, 74, 73, 2e, 63, 64, 6e, 2e, 6d, 6f, 7a, 69, 6c, 6c, 61, 2e, 6e, 65, 74, 0, 17, 0, 0, ff, 1, 0, 1, 0, 0, a, 0, e, 0, c, 0, 1d, 0, 17, 0, 18, 0, 19, 1, 0, 1, 1, 0, b, 0, 2, 1, 0, 0, 23, 0, 0, 0, 10, 0, e, 0, c, 2, 68, 32, 8, 68, 74, 74, 70, 2f, 31, 2e, 31, 0, 5, 0, 5, 1, 0, 0, 0, 0, 0, 33, 0, 6b, 0, 69, 0, 1d, 0, 20, b1, 20, 7, a8, 7c, 5a, 1, 39, 5f, 63, 82, 9a, cf, f5, 17, 7f, ee, b1, bb, 85, 69, d4, a7, 28, 28, ee, 52, cc, dc, f9, e2, 57, 0, 17, 0, 41, 4, 41, 54, 4e, 31, 7f, ee, 3c, 8a, 58, 2c, e7, 5b, 7, 9c, 8f, 8d, 5f, 2f, 9b, 5, a, ea, d0, 65, b9, ab, 92, 5e, 7f, 24, b5, 57, 5c, a, b7, 23, a4, 83, c, d, 96, 6e, 83, fd, 9b, 9d, 1d, a0, a3, 4f, 81, a6, c3, 50, 8a, a2, a9, 99, 42, 7f, 3b, bd, fb, cd, 0, 2b, 0, 9, 8, 3, 4, 3, 3, 3, 2, 3, 1, 0, d, 0, 18, 0, 16, 4, 3, 5, 3, 6, 3, 8, 4, 8, 5, 8, 6, 4, 1, 5, 1, 6, 1, 2, 3, 2, 1, 0, 2d, 0, 2, 1, 1, 0, 1c, 0, 2, 40, 1, 0, 15, 0, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 3, 3, 0, 46, 10, 0, 0, 42, 41, 4, aa, 29, 9a, 7d, d, dc, 7d, 87, 95, 91, b5, 31, 45, 59, 4c, 9a, a3, 5d, 6a, 7f, 94, 46, 68, 10, 13, 62, d1, 8f, cb, b8, d1, ef, 93, 5a, a8, 30, cb, 29, 22, ea, a6, 8b, c0, 1, ac, e0, d0, bb, 1b, bc, 87, ef, d8, 58, 9a, 5e, 11, 27, 29, 2, b9, d0, 4b, 21, 14, 3, 3, 0, 1, 1, 16, 3, 3, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 6a, 70, 6a, dc, 38, 61, 5b, ce, ae, db, a3, 3, 23, e0, 63, 4a, 2d, 6a, 20, 6e, 7a, 3d, 3a, 77, e1, eb, 54, ba, c2, 2a, 6c, d9]
Matching server name

is client hello: [ServerName([ServerName { typ: HostName, payload: HostName(DNSName("snippets.cdn.mozilla.net")) }]), ExtendedMasterSecretRequest, Unknown(UnknownExtension { typ: RenegotiationInfo, payload: Payload([0]) }), NamedGroups([X25519, secp256r1, secp384r1, secp521r1, FFDHE2048, FFDHE3072]), ECPointFormats([Uncompressed]), SessionTicketRequest, Protocols([PayloadU8([104, 50]), PayloadU8([104, 116, 116, 112, 47, 49, 46, 49])]), CertificateStatusRequest(OCSP(OCSPCertificateStatusRequest { responder_ids: [], extensions: PayloadU16([]) })), KeyShare([KeyShareEntry { group: X25519, payload: PayloadU16([177, 32, 7, 168, 124, 90, 1, 57, 95, 99, 130, 154, 207, 245, 23, 127, 238, 177, 187, 133, 105, 212, 167, 40, 40, 238, 82, 204, 220, 249, 226, 87]) }, KeyShareEntry { group: secp256r1, payload: PayloadU16([4, 65, 84, 78, 49, 127, 238, 60, 138, 88, 44, 231, 91, 7, 156, 143, 141, 95, 47, 155, 5, 10, 234, 208, 101, 185, 171, 146, 94, 127, 36, 181, 87, 92, 10, 183, 35, 164, 131, 12, 13, 150, 110, 131, 253, 155, 157, 29, 160, 163, 79, 129, 166, 195, 80, 138, 162, 169, 153, 66, 127, 59, 189, 251, 205]) }]), SupportedVersions([TLSv1_3, TLSv1_2, TLSv1_1, TLSv1_0]), SignatureAlgorithms([ECDSA_NISTP256_SHA256, ECDSA_NISTP384_SHA384, ECDSA_NISTP521_SHA512, RSA_PSS_SHA256, RSA_PSS_SHA384, RSA_PSS_SHA512, RSA_PKCS1_SHA256, RSA_PKCS1_SHA384, RSA_PKCS1_SHA512, ECDSA_SHA1_Legacy, RSA_PKCS1_SHA1]), PresharedKeyModes([PSK_DHE_KE]), Unknown(UnknownExtension { typ: Unknown(28), payload: Payload([64, 1]) }), Unknown(UnknownExtension { typ: Padding, payload: Payload([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) })]

Server name : [ServerName { typ: HostName, payload: HostName(DNSName("snippets.cdn.mozilla.net")) }]
payload to be: HostName(DNSName("snippets.cdn.mozilla.net"))
DNS name is : DNSName("snippets.cdn.mozilla.net")
Try to parse the hug payload of Flow { src_ip: 220418878, dst_ip: 2886997012, src_port: 36144, dst_port: 443, proto: 6 }
DEBUG: entering and then parsing the huge payload 
ServerHelloPayload { legacy_version: TLSv1_2, random: Random([20, 144, 5, 107, 14, 107, 6, 242, 90, 67, 85, 137, 56, 148, 169, 119, 167, 94, 136, 137, 1, 173, 201, 189, 215, 190, 114, 39, 182, 179, 44, 222]), session_id: SessionID, cipher_suite: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, compression_method: Null, extensions: [ServerNameAck, RenegotiationInfo(PayloadU8([])), ECPointFormats([Uncompressed, ANSIX962CompressedPrime, ANSIX962CompressedChar2]), SessionTicketAck, CertificateStatusAck, Protocols([PayloadU8([104, 116, 116, 112, 47, 49, 46, 49])])] }

And the magic number is 89

Certificate payload is
[Certificate(b"0\x82\x0560\x82\x04\x1e\xa0\x03\x02\x01\x02\x02\x10\x0c\xa9\xc6Ca\xbf\xc9*y\xb1\xdd\x9c\xfb\x9eH\xec0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\00M1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1'0%\x06\x03U\x04\x03\x13\x1eDigiCert SHA2 Secure Server CA0\x1e\x17\r161103000000Z\x17\r200201120000Z0t1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x130\x11\x06\x03U\x04\x08\x13\nCalifornia1\x160\x14\x06\x03U\x04\x07\x13\rMountain View1\x1c0\x1a\x06\x03U\x04\n\x13\x13Mozilla Corporation1\x1a0\x18\x06\x03U\x04\x03\x0c\x11*.cdn.mozilla.net0\x82\x01\"0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x01\x05\0\x03\x82\x01\x0f\00\x82\x01\n\x02\x82\x01\x01\0\xcd!Mx^zpA[\xa7\x02\x133U/\xa5\xc1\x1cc\xe4\xaf5\x1c\xfbR>\x9d\xf0/\x96q\xfe\x1c\x917\xf1\x85\xe3\x91\xf6xaA)\xfb\xd4\x11\xfe\xe3\x8a\xce\xad\x9b\xf2<H\xdf\xfbh\xde8\xa7@\x1e\xad\x1ew\xa706R\xdf\r\n:ql\xcb\x89\x17\xa5\xefcl\xaf\xfe\x0f\xed\xbbvY\x8c\x12\n\x9f\xf2 G\xf3\xb2w\x81R9\xdaC\x8ce\x0c\xf1mvE&\x9e\x89\x05\x07\x0bP\xee1\x82\xb0\x9c\xfa.\x0e(\xf3\xa1\xd3\x17<6\xbb;\xddlj\x15\xbc\xee\xde\xa5*t\xbb\x13\xd0\xa05\xd9.\xe6\\EL\xe7\xb8\xf3B\x1c\xf7'~rRMe\x9e\x9d6\xd9\xf0a\xfa\xcaj\xacre\02\x04=\x126\xc98Y\xea^\x94?\x95\x06\x88\xc3\x8c\xdd\xccs\xba\xcc\xc0\x1e\xbbL9\xea\xd4\xc6\"@\x8f\xe5\r\xff!\xf5L\xe9\xb5\xedb\x1f\xf3\xd0\xc5})1\xf2\xf1C\xb6\xdc\x8f\x1e\xcb\xa0\xbe\x9b!\xdd\xcd\xf7v\xbf\xdb\xeb\x03\xdd\x1aK\x02\x03\x01\0\x01\xa3\x82\x01\xe90\x82\x01\xe50\x1f\x06\x03U\x1d#\x04\x180\x16\x80\x14\x0f\x80a\x1c\x821a\xd5/(\xe7\x8dF8\xb4,\xe1\xc6\xd9\xe20\x1d\x06\x03U\x1d\x0e\x04\x16\x04\x143\xc0\x98\xd2sP43;\xffw9)\xcc@f\x94\nt=0-\x06\x03U\x1d\x11\x04&0$\x82\x11*.cdn.mozilla.net\x82\x0fcdn.mozilla.net0\x0e\x06\x03U\x1d\x0f\x01\x01\xff\x04\x04\x03\x02\x05\xa00\x1d\x06\x03U\x1d%\x04\x160\x14\x06\x08+\x06\x01\x05\x05\x07\x03\x01\x06\x08+\x06\x01\x05\x05\x07\x03\x020k\x06\x03U\x1d\x1f\x04d0b0/\xa0-\xa0+\x86)http://crl3.digicert.com/ssca-sha2-g5.crl0/\xa0-\xa0+\x86)http://crl4.digicert.com/ssca-sha2-g5.crl0L\x06\x03U\x1d \x04E0C07\x06\t`\x86H\x01\x86\xfdl\x01\x010*0(\x06\x08+\x06\x01\x05\x05\x07\x02\x01\x16\x1chttps://www.digicert.com/CPS0\x08\x06\x06g\x81\x0c\x01\x02\x020|\x06\x08+\x06\x01\x05\x05\x07\x01\x01\x04p0n0$\x06\x08+\x06\x01\x05\x05\x070\x01\x86\x18http://ocsp.digicert.com0F\x06\x08+\x06\x01\x05\x05\x070\x02\x86:http://cacerts.digicert.com/DigiCertSHA2SecureServerCA.crt0\x0c\x06\x03U\x1d\x13\x01\x01\xff\x04\x020\00\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\0\x03\x82\x01\x01\0\x8eS\xb9\xc7\x8cI\xbd$\xb8eMBd\xd4\xb1Q\xf4\x04\x15Uu\x87U\xa2\xf8\xca\xb9D\xcbkCv\xcdo\xb3l\xf76um]x9\x06\x01\xfc\xb8;-)`$\xf4\x86\xc0\x81X\x08X,\02\xa3\xb6+(\xd7\xa8\x85=$\xc5p\xf7\x03T5\x8e\x9d\xc8\x8d\xd8\r`}7\t}`\x0c\xf7\x97\x14\xda\xa0\x93\xd2\xa8}\xf8\xcf\xd6'\x86\x9c\xedF\x86|\x9bF~\x89\x90/x\xd8\xc2\xd8\xd3\x10l\xf2\x0b\xff\xe3\xbc\xd6DJ\xb9`\x03\\!QI\xea4]\x8b\x07\x9e\x0b\x81N\xeeM\x96\x08\xba_\xaa5\xea\xef\xc1k\xbaH\xd6\x01M\xdaB\xd7~Dn\x80\xc1\xab\"\x93U\x8d\xf0'\xfd\xd7\x11\xe6\x97J\xa5q>+0\xaa\xb7y\xf1F\x17\xc4];\xe4\x19\xac\xd2\x04\x9a\x19.[\xfb\xb7\xbc\xa4y\xfc\xee\xadz@[B=\xb1\x84\x99\xb4rJ\xdc\xccY7\x1b\xe2g4\x0e\x10J,\xab\xb4>\xd9\xac\x9bb\xb3\xeaI\xf0TV\x9dvt_\xab"), Certificate(b"0\x82\x04\x940\x82\x03|\xa0\x03\x02\x01\x02\x02\x10\x01\xfd\xa3\xebn\xcau\xc8\x88C\x8brK\xcf\xbc\x910\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\00a1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1\x190\x17\x06\x03U\x04\x0b\x13\x10www.digicert.com1 0\x1e\x06\x03U\x04\x03\x13\x17DigiCert Global Root CA0\x1e\x17\r130308120000Z\x17\r230308120000Z0M1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1'0%\x06\x03U\x04\x03\x13\x1eDigiCert SHA2 Secure Server CA0\x82\x01\"0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x01\x05\0\x03\x82\x01\x0f\00\x82\x01\n\x02\x82\x01\x01\0\xdc\xaeX\x90M\xc1\xc40\x15\x905[n<\x82\x15\xf5,\\\xbd\xe3\xdb\xffqC\xfad%\x80\xd4\xee\x18\xa2M\xf0f\xd0\nsn\x11\x986\x17d\xaf7\x9d\xfd\xfaA\x84\xaf\xc7\xaf\x8c\xfe\x1asM\xcf3\x97\x90\xa2\x96\x87S\x83+\xb9\xa6uH-\x1dV7{\xda12\x1a\xd7\xac\xab\x06\xf4\xaa]K\xb7GF\xdd*\x93\xc3\x90.y\x80\x80\xef\x13\x04j\x14;\xb5\x9b\x92\xbe\xc2\x07eN\xfc\xda\xfc\xffz\xae\xdc\\~U1\x0c\xe89\x07\xa4\xd7\xbe/\xd3\x0bj\xd2\xb1\xdf_\xfeWtS;5\x80\xdd\xae\x8eD\x98\xb3\x9f\x0e\xd3\xda\xe0\xd7\xf4k)\xabD\xa7KX\x84m\x92K\x81\xc3\xdas\x8b\x12\x97H\x90\x04Eu\x1a\xdd71\x97\x92\xe8\xcdT\r;\xe4\xc1?9^.\xb8\xf3\\~\x10\x8e\x86A\0\x8dEfG\xb0\xa1e\xce\xa0\xaa)\tN\xf3\x97\xeb\xe8.\xab\x0fr\xa70\x0e\xfa\xc7\xf4\xfd\x14w\xc3\xa4[(W\xc2\xb3\xf9\x82\xfd\xb7EX\x9b\x02\x03\x01\0\x01\xa3\x82\x01Z0\x82\x01V0\x12\x06\x03U\x1d\x13\x01\x01\xff\x04\x080\x06\x01\x01\xff\x02\x01\00\x0e\x06\x03U\x1d\x0f\x01\x01\xff\x04\x04\x03\x02\x01\x8604\x06\x08+\x06\x01\x05\x05\x07\x01\x01\x04(0&0$\x06\x08+\x06\x01\x05\x05\x070\x01\x86\x18http://ocsp.digicert.com0{\x06\x03U\x1d\x1f\x04t0r07\xa05\xa03\x861http://crl3.digicert.com/DigiCertGlobalRootCA.crl07\xa05\xa03\x861http://crl4.digicert.com/DigiCertGlobalRootCA.crl0=\x06\x03U\x1d \x0460402\x06\x04U\x1d \00*0(\x06\x08+\x06\x01\x05\x05\x07\x02\x01\x16\x1chttps://www.digicert.com/CPS0\x1d\x06\x03U\x1d\x0e\x04\x16\x04\x14\x0f\x80a\x1c\x821a\xd5/(\xe7\x8dF8\xb4,\xe1\xc6\xd9\xe20\x1f\x06\x03U\x1d#\x04\x180\x16\x80\x14\x03\xdeP5V\xd1L\xbbf\xf0\xa3\xe2\x1b\x1b\xc3\x97\xb2=\xd1U0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\0\x03\x82\x01\x01\0#>\xdfK\xd21B\xa5\xb6~B\\\x1aD\xcci\xd1h\xb4]K\xe0\x04!lK\xe2m\xcc\xb1\xe0\x97\x8f\xa6S\t\xcd\xaa*e\xe59O\x1e\x83\xa5n\\\x98\xa2$&\xe6\xfb\xa1\xed\x93\xc7.\x02\xc6MJ\xbf\xb0B\xdfx\xda\xb3\xa8\xf9m\xff!\x85S6`Lv\xce\xec8\xdc\xd6Q\x80\xf0\xc5\xd6\xe5\xd4M'd\xab\x9b\xc7>q\xfbH\x97\xb83m\xc9\x13\x07\xee\x96\xa2\x1b\x18\x15\xf6\\L@\xed\xb3\xc2\xec\xffq\xc1\xe3G\xff\xd4\xb9\0\xb47B\xda \xc9\xean\x8a\xee\x14\x06\xae}\xa2Y\x98\x88\xa8\x1bo-\xf4\xf2\xc9\x14_&\xcf,\x8d~\xed7\xc0\xa9\xd59\xb9\x82\xbf\x19\x0c\xea4\xaf\0!h\xf8\xads\xe2\xc92\xda8%\x0bU\xd3\x9a\x1d\xf0h\x86\xed.A4\xef|\xa5P\x1d\xbf:\xf9\xd3\xc1\x08\x0c\xe6\xed\x1e\x8aX%\xe4\xb8w\xad-n\xf5R\xdd\xb4t\x8f\xabI.\x9d;\x934(\x1fx\xce\x94\xea\xc7\xbd\xd3\xc9m\x1c\xde\\2\xf3"), Certificate(b"0\x82\x03\xaf0\x82\x02\x97\xa0\x03\x02\x01\x02\x02\x10\x08;\xe0V\x90BF\xb1\xa1uj\xc9Y\x91\xc7J0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x05\x05\00a1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1\x190\x17\x06\x03U\x04\x0b\x13\x10www.digicert.com1 0\x1e\x06\x03U\x04\x03\x13\x17DigiCert Global Root CA0\x1e\x17\r061110000000Z\x17\r311110000000Z0a1\x0b0\t\x06\x03U\x04\x06\x13\x02US1\x150\x13\x06\x03U\x04\n\x13\x0cDigiCert Inc1\x190\x17\x06\x03U\x04\x0b\x13\x10www.digicert.com1 0\x1e\x06\x03U\x04\x03\x13\x17DigiCert Global Root CA0\x82\x01\"0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x01\x05\0\x03\x82\x01\x0f\00\x82\x01\n\x02\x82\x01\x01\0\xe2;\xe1\x11r\xde\xa8\xa4\xd3\xa3W\xaaP\xa2\x8f\x0bw\x90\xc9\xa2\xa5\xee\x12\xce\x96[\x01\t \xcc\x01\x93\xa7N0\xb7S\xf7C\xc4i\0W\x9d\xe2\x8d\"\xdd\x87\x06@\0\x81\t\xce\xce\x1b\x83\xbf\xdf\xcd;qF\xe2\xd6f\xc7\x05\xb3v'\x16\x8f{\x9e\x1e\x95}\xee\xb7H\xa3\x08\xda\xd6\xafz\x0c9\x06e\x7fJ]\x1f\xbc\x17\xf8\xab\xbe\xee(\xd7t\x7fzx\x99Y\x85hn\\#2K\xbfN\xc0\xe8Zm\xe3p\xbfw\x10\xbf\xfc\x01\xf6\x85\xd9\xa8D\x10X2\xa9u\x18\xd5\xd1\xa2\xbeG\xe2'j\xf4\x9a3\xf8I\x08`\x8b\xd4_\xb4:\x84\xbf\xa1\xaaJL}>\xcfO_lv^\xa0K7\x91\x9e\xdc\"\xe6m\xce\x14\x1a\x8ej\xcb\xfe\xcd\xb3\x14d\x17\xc7[)\x9e2\xbf\xf2\xee\xfa\xd3\x0bB\xd4\xab\xb7A2\xda\x0c\xd4\xef\xf8\x81\xd5\xbb\x8dX?\xb5\x1b\xe8I(\xa2p\xda1\x04\xdd\xf7\xb2\x16\xf2L\nN\x07\xa8\xedJ=^\xb5\x7f\xa3\x90\xc3\xaf'\x02\x03\x01\0\x01\xa3c0a0\x0e\x06\x03U\x1d\x0f\x01\x01\xff\x04\x04\x03\x02\x01\x860\x0f\x06\x03U\x1d\x13\x01\x01\xff\x04\x050\x03\x01\x01\xff0\x1d\x06\x03U\x1d\x0e\x04\x16\x04\x14\x03\xdeP5V\xd1L\xbbf\xf0\xa3\xe2\x1b\x1b\xc3\x97\xb2=\xd1U0\x1f\x06\x03U\x1d#\x04\x180\x16\x80\x14\x03\xdeP5V\xd1L\xbbf\xf0\xa3\xe2\x1b\x1b\xc3\x97\xb2=\xd1U0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x05\x05\0\x03\x82\x01\x01\0\xcb\x9c7\xaaH\x13\x12\n\xfa\xddD\x9cOR\xb0\xf4\xdf\xae\x04\xf5yy\x08\xa3$\x18\xfcK+\x84\xc0-\xb9\xd5\xc7\xfe\xf4\xc1\x1fX\xcb\xb8m\x9czt\xe7\x98)\xab\x11\xb5\xe3p\xa0\xa1\xcdL\x88\x99\x93\x8c\x91p\xe2\xab\x0f\x1c\xbe\x93\xa9\xffc\xd5\xe4\x07`\xd3\xa3\xbf\x9d[\t\xf1\xd5\x8e\xe3S\xf4\x8ec\xfa?\xa7\xdb\xb4f\xdfbf\xd6\xd1nA\x8d\xf2-\xb5\xeawJ\x9f\x9dX\xe2+Y\xc0@#\xed-(\x82E>yT\x92&\x98\xe0\x80H\xa87\xef\xf0\xd6y`\x16\xde\xac\xe8\x0e\xcdn\xacD\x178/I\xda\xe1E>*\xb96S\xcf:P\x06\xf7.\xe8\xc4WIla!\x18\xd5\x04\xadx<,:\x80k\xa7\xeb\xaf\x15\x14\xe9\xd8\x89\xc1\xb98l\xe2\x91l\x8a\xffd\xb9w%W0\xc0\x1b$\xa3\xe1\xdc\xe9\xdfG|\xb5\xb4$\x08\x050\xec-\xbd\x0b\xbfE\xbfP\xb9\xa9\xf3\xeb\x98\x01\x12\xad\xc8\x88\xc6\x984_\x8d\n<\xc6\xe9\xd5\x95\x95m\xde")]

Oops, error: invalid certificate: CertNotValidForName

And the magic number is 3482

None

And the magic number is 484

